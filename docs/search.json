[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fire and Police Department Payroll",
    "section": "",
    "text": "1 Introduction\nMy experience in the financial industry has fostered a strong interest in working with high-volume salary datasets.\nFor this project, I will analyze 10 years of payroll data for the Fire and Police departments in New York City. This dataset represents a well-defined and comprehensive universe of information, making it ideal for thorough exploration and analysis.\nOne of the reasons I selected this dataset is its versatility; it includes a variety of data types such as categorical text with differing levels of granularity, numerical data, dates, and fields with missing or outlier values. These characteristics provide opportunities to practice a range of analytical techniques, from data cleaning to advanced visualizations for pattern discovery.\nSpecifically, I am interested in studying trends such as workforce growth, salary composition across different roles, and identifying the top-ranking positions and locations with the highest payroll activity. By delving into these questions, I aim to uncover meaningful insights into the structure and evolution of these essential public service departments. Let‚Äôs uncover the stories hidden in the data!\nüöí üíµ üöì",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2¬† Data",
    "section": "",
    "text": "2.1 Description\nData Metadata\nDataset Name\nCitywide Payroll Data (Fiscal Year)\n\n\nProvided by\nOffice of Payroll Administration (OPA)\n\n\nData Category\nCity Government\n\n\nFrequency of Updates\nAnnually\n\n\nDate Created\nOctober 31, 2015\n\n\nData Last Updated\nOctober 30, 2024\n\n\nDimensions\nRaw Data: 6,225,611 rows | 17 columns\nSubset Data: 804,630 rows | 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\nSource URL\nhttps://data.cityofnewyork.us/\nData Format\nColumn Name\nDescription\nData Type\n\n\n\n\nFiscal Year\nFiscal Year\nNumber\n\n\nPayroll Number\nPayroll Number\nNumber\n\n\nAgency Name\nThe Payroll agency that the employee works for\nText\n\n\nLast Name\nLast name of employee\nText\n\n\nFirst Name\nFirst name of employee\nText\n\n\nMid Init\nMiddle initial of employee\nText\n\n\nAgency Start Date\nDate which employee began working for their current agency\nTimestamp\n\n\nWork Location Borough\nBorough of employee's primary work location\nText\n\n\nTitle Description\nCivil service title description of the employee\nText\n\n\nLeave Status as of June 30\nStatus of employee as of the close of the relevant fiscal year: Active, Ceased, or On Leave\nText\n\n\nBase Salary\nBase Salary assigned to the employee\nNumber\n\n\nPay Basis\nLists whether the employee is paid on an hourly, per diem or annual basis\nText\n\n\nRegular Hours\nNumber of regular hours employee worked in the fiscal year\nNumber\n\n\nRegular Gross Paid\nThe amount paid to the employee for base salary during the fiscal year\nNumber\n\n\nOT Hours\nOvertime Hours worked by employee in the fiscal year\nNumber\n\n\nTotal OT Paid\nTotal overtime pay paid to the employee in the fiscal year\nNumber\n\n\nTotal Other Pay\nIncludes any compensation in addition to gross salary and overtime pay, i.e., Differentials, lump sums, uniform allowance, meal allowance, retroactive pay increases, settlement amounts, and bonus pay, if applicable.\nNumber\nImporting the data\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\n(YYYYMMDD refers to the date that you downloaded the file)\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\nCode\n# import original data\npayroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\") \n\n# make a copy of original data for transformations\npayroll_data &lt;- data.frame(payroll_data_source)\n\n# rename columns\nnames(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))\nCreating the final subset data\nThe decision-making process for selecting a subset of the data and the detailed transformation the original dataset with 6,225,611 rows to our final dataset with 804,630 rows.\nTo generate the final subset use the code below:\nCode\npayroll_data_fire_police &lt;-\n  payroll_data |&gt; \n  # clean agency name: \n  mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name))) |&gt; \n  # clean location name: \n  mutate(work_location_borough_clean = toupper(work_location_borough)) |&gt; \n\n  # filtering data:\n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n  filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt; \n  filter(fiscal_year &gt;= \"2015\" & fiscal_year &lt;= \"2024\") |&gt; \n  filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\")) |&gt; \n  \n  # backfill payroll number after filtering\n  mutate(\n    payroll_number_clean = case_when(\n      is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n      is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n      TRUE ~ payroll_number\n    )) |&gt; \n  \n  # converting dates:\n  mutate(agency_start_date_clean = mdy(agency_start_date)) |&gt; \n\n  # renaming clean columns to original names:\n  mutate(\n    agency_name = agency_name_clean,\n    work_location_borough = work_location_borough_clean,\n    payroll_number = payroll_number_clean,\n    agency_start_date = agency_start_date_clean\n  ) |&gt;\n  \n  # dropping clean columns\n  dplyr::select(-agency_name_clean, \n                -work_location_borough_clean, \n                -payroll_number_clean,\n                -agency_start_date_clean)\n  \n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2¬† Data",
    "section": "",
    "text": "To access the data, we can go directly to the URL:\n\n\n\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2¬† Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nTo analyse missing data, we will classify our data in 4 categories:\n¬†¬†¬† ‚ñ† NA - any values equal to NA\n¬†¬†¬† ‚ñ† Blank - string values equal to ‚Äú‚Äù\n¬†¬†¬† ‚ñ† Zero - numeric values equal to 0\n¬†¬†¬† ‚ñ† Present - any values with data\n\nFirst, let‚Äôs check the missing values of the original dataset.\nUsing a sample of 1 million records (from 6.22 million rows) we have close to 4.5% of missing data classified as NA or Blank by the vis_miss() plot. We can also observe missing values in 7 columns*:\n\n\n\n3 columns related to a person‚Äôs name (first_name, mid_init, last_name)\npayroll_number\nwork_location_borough\ntitle_description\nagency_start_date\n\n\n\n(*based on the black highlights and the percentages listed in the column names)\n\n\nCode\npayroll_data_missing &lt;- \n  payroll_data |&gt;\n  sample_n(100000) |&gt;\n  mutate(across(everything(), ~ if_else(. == \"\", NA, .)))\n\npayroll_data_missing |&gt; \n  vis_miss(\n    sort_miss = TRUE,\n    # cluster = TRUE,\n    show_perc_col = TRUE,\n    warn_large_data = FALSE,\n    ) + \n  ggtitle(\"Missing Values (NA or Blank) - Original Data Sample\")+\n  theme(plot.margin = margin(r = 50))\n\n\n\n\n\n\n\n\n\n\nAfter transforming our original data to create our final subset data (Fire and Police Departments), we can now examine how the missing values from the original compares to the final dataset.\n\n\nCode\n#Data Transformation\n\npayroll_data_total_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ n())) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Total Count\"\n  )\n\npayroll_data_na_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA\"\n  )\n\npayroll_data_blank_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank\"\n  )\n\npayroll_data_zero_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero\"\n  )\n\npayroll_data_combined_summary &lt;- \n  payroll_data_total_summary |&gt; \n  inner_join(payroll_data_na_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_blank_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_zero_summary, by = \"Column\")\n\n\n# payroll_data_combined_summary\n\npayroll_data_combined_summary_likert &lt;-\npayroll_data_combined_summary |&gt; \n  mutate(`Present` = `Total Count` - `NA` - `Blank` - Zero) |&gt; \n  mutate(`Present` = `Present` / `Total Count`) |&gt; \n  mutate(`NA` = `NA` / `Total Count`) |&gt; \n  mutate(`Blank` = `Blank` / `Total Count`) |&gt; \n  mutate(`Zero` = Zero / `Total Count`) |&gt; \n  dplyr::select(`Column`,`NA`,`Blank`,Zero,`Present`) |&gt; \n  filter(!Column %in% c('agency_name_clean','work_location_borough_clean'))\n\n\nlikert_colors &lt;- c(\"NA\" = \"#D7191C\",\n                   \"Blank\" = \"#FDAE61\",\n                   \"Zero\" = \"#ABD9E9\",\n                   \"Present\" = \"#2C7BB6\")\n\n\n\npayroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")\n\npayroll_data_fire_police_total_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ n())) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Total Count\"\n  )\n\npayroll_data_fire_police_na_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA\"\n  )\n\npayroll_data_fire_police_blank_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank\"\n  )\n\npayroll_data_fire_police_zero_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero\"\n  )\n\n\npayroll_data_fire_police_combined_summary &lt;- \n  payroll_data_fire_police_total_summary |&gt; \n  inner_join(payroll_data_fire_police_na_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_fire_police_blank_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_fire_police_zero_summary, by = \"Column\")\n\n\npayroll_data_fire_police_combined_summary_likert &lt;-\n  payroll_data_fire_police_combined_summary |&gt; \n  mutate(`Present` = `Total Count` - `NA` - `Blank` - Zero) |&gt; \n  mutate(`Present` = `Present` / `Total Count`) |&gt; \n  mutate(`NA` = `NA` / `Total Count`) |&gt; \n  mutate(`Blank` = `Blank` / `Total Count`) |&gt; \n  mutate(`Zero` = Zero / `Total Count`) |&gt; \n  dplyr::select(`Column`,`NA`,`Blank`,Zero,`Present`) |&gt; \n  filter(!Column %in% c('agency_name_clean','work_location_borough_clean'))\n\n\n\n\nCode\npayroll_data_missing_group_likert &lt;- bind_rows(\n  payroll_data_combined_summary_likert |&gt; mutate(group= 'Original Data'), \n  payroll_data_fire_police_combined_summary_likert |&gt; mutate(group= 'Final Subset Data')\n)\n\nHH::likert(x=Column~. | group,payroll_data_missing_group_likert, \n           positive.order=TRUE,\n           as.percent = T,\n           main = 'Missing Value Analysis',\n           xlab='Percentage',\n           ylab='Columns',\n           col = likert_colors,\n           ReferenceZero=2.5,\n           rightAxis=FALSE,\n           # xlimEqualLeftRight=TRUE,\n           xlim=c(-50,100),\n           )\n\n\n\n\n\n\n\n\n\nOur original dataset has ‚ñ† NA data for payroll_number, first_name, last_name. It also has ‚ñ† Blank data in 6 columns: first_name, mid_init, last_name, work_location_borough, title_description, agency_start_date.\nFor both datasets, ‚ñ† Zero values show up in columns related to the amount paid to a person, which can be 3 categories: regular, overtime, other. If a certain category is 0, it means the person did not receive any money for that category. This in an important information because it does not requires us to exclude or impute these values. We can observe a significant reduction of zero values in the subset dataset compared to the original.\nOur final subset data (Fire and Police Departments) no longer contains ‚ñ† NA data, but still contains ‚ñ† Blank data in 3 columns: first_name, mid_init, last_name.\nFor mid_init (Middle Name Initials), 29% of the data in the final subset is Blank, it is ok for us to have blanks in the data, this will not affect the future analysis. For first_name and last_name blank data (1.2% of the data in the final subset is Blank), these values are blank on purpose by the data provider:\n‚Ä¶As a part of FISA-OPA‚Äôs routine process for reviewing and releasing Citywide Payroll Data, data for some agencies (specifically NYC Police Department (NYPD) and the District Attorneys‚Äô Offices (Manhattan, Kings, Queens, Richmond, Bronx, and Special Narcotics)) have been redacted since they are exempt from disclosure pursuant to the Freedom of Information Law, POL ¬ß 87(2)(f), on the ground that disclosure of the information could endanger the life and safety of the public servants listed thereon‚Ä¶\nBased on this disclosure, we can confirm the Blank values for the names are part of the Police Department agency:\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(first_name == \"\" | last_name == \"\") |&gt; \n  group_by(agency_name) |&gt; \n  summarise(`Count of Blank Records` = n()) |&gt; \n  kable(col.names = c(\"Agency\", \"Count of Blank Records\")) \n\n\n\n\n\nAgency\nCount of Blank Records\n\n\n\n\nPOLICE DEPARTMENT\n9992",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3¬† Results",
    "section": "",
    "text": "Possible 10 Charts based on Problem Set1 hitogram / facets (ps1) boxplot jitter (ps1) with ridgeline (ps1) density lines bar chart lump facet scattter plot Density plot geom_point with facet 9x9 grid (ps2 california) Cleveland dot plot ggparcords parcoords likert mosaic alluvium 11\n\n\n\nCode\n# Read the data RDS\npayroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")\n\n\n\n\nCode\nhead(payroll_data_fire_police,5)\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2020             56 POLICE DEPARTMENT   MORALES       JOSE         \n2        2020             56 POLICE DEPARTMENT     BOYNE     DANIEL        G\n3        2020             56 POLICE DEPARTMENT    MURTHA      KEVIN         \n4        2020             56 POLICE DEPARTMENT MASTRANDE      JAMES        J\n5        2020             56 POLICE DEPARTMENT     AROCA       ALMA        P\n  agency_start_date work_location_borough                 title_description\n1        1998-12-20             MANHATTAN     SUPERVISOR OF SCHOOL SECURITY\n2        2016-04-25             MANHATTAN               STATIONARY ENGINEER\n3        1995-04-30             MANHATTAN LIEUTENANT D/A SPECIAL ASSIGNMENT\n4        2013-12-16             MANHATTAN               STATIONARY ENGINEER\n5        2012-07-11             MANHATTAN                    POLICE OFFICER\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED     57813.0 per Annum          0.00\n2                     ACTIVE       508.8   per Day       2080.00\n3                     CEASED    141196.0 per Annum        665.18\n4                     ACTIVE       508.8   per Day       2080.00\n5                     CEASED     85292.0 per Annum         22.87\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1               0.00     0.00           0.0       650000.00\n2          140146.17  1125.25      117728.1        40696.41\n3           48008.86  2451.57      162000.5        78132.88\n4          140146.17  1007.00      103227.0        27980.42\n5          227914.67     0.00           0.0        30289.83\n\n\n\n\nCode\ncolnames(payroll_data_fire_police)\n\n\n [1] \"fiscal_year\"                \"payroll_number\"            \n [3] \"agency_name\"                \"last_name\"                 \n [5] \"first_name\"                 \"mid_init\"                  \n [7] \"agency_start_date\"          \"work_location_borough\"     \n [9] \"title_description\"          \"leave_status_as_of_june_30\"\n[11] \"base_salary\"                \"pay_basis\"                 \n[13] \"regular_hours\"              \"regular_gross_paid\"        \n[15] \"ot_hours\"                   \"total_ot_paid\"             \n[17] \"total_other_pay\"           \n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  mutate(agency_start_date_year = lubridate::year(agency_start_date)) |&gt; \n  filter(agency_start_date_year &gt; 2014) |&gt; \n\n# Create the bar chart\nggplot(aes(x = agency_start_date_year, fill = agency_name)) +\n  geom_bar() +\n  labs(\n    title = \"Count of Records by Agency Start Year\",\n    x = \"Agency Start Year\",\n    y = \"Number of Records\",\n    fill = \"Agency Name\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  group_by(agency_name, work_location_borough) |&gt; \n  summarise(\n    Total_records = n()\n  )\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 √ó 3\n# Groups:   agency_name [2]\n   agency_name       work_location_borough Total_records\n   &lt;chr&gt;             &lt;chr&gt;                         &lt;int&gt;\n 1 FIRE DEPARTMENT   BRONX                         29662\n 2 FIRE DEPARTMENT   BROOKLYN                      73830\n 3 FIRE DEPARTMENT   MANHATTAN                     35750\n 4 FIRE DEPARTMENT   QUEENS                        43557\n 5 FIRE DEPARTMENT   RICHMOND                       9839\n 6 POLICE DEPARTMENT BRONX                         72253\n 7 POLICE DEPARTMENT BROOKLYN                     134890\n 8 POLICE DEPARTMENT MANHATTAN                    274486\n 9 POLICE DEPARTMENT QUEENS                       112008\n10 POLICE DEPARTMENT RICHMOND                      18355\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n\n  group_by(work_location_borough, agency_name) |&gt; \n  summarise(count = n(), .groups = 'drop') |&gt; \n  pivot_wider(\n    names_from = agency_name,  \n    values_from = count,  \n    values_fill = list(count = 0) \n  )\n\n\n# A tibble: 5 √ó 3\n  work_location_borough `FIRE DEPARTMENT` `POLICE DEPARTMENT`\n  &lt;chr&gt;                             &lt;int&gt;               &lt;int&gt;\n1 BRONX                             29662               72253\n2 BROOKLYN                          73830              134890\n3 MANHATTAN                         35750              274486\n4 QUEENS                            43557              112008\n5 RICHMOND                           9839               18355\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  group_by(agency_name) |&gt; \n  summarise(\n    Total_records = n_distinct(work_location_borough)\n  )\n\n\n# A tibble: 2 √ó 2\n  agency_name       Total_records\n  &lt;chr&gt;                     &lt;int&gt;\n1 FIRE DEPARTMENT               5\n2 POLICE DEPARTMENT             5\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  group_by(agency_name) |&gt; \n  summarise(\n    Total_records = n()\n  ) \n\n\n# A tibble: 2 √ó 2\n  agency_name       Total_records\n  &lt;chr&gt;                     &lt;int&gt;\n1 FIRE DEPARTMENT          192638\n2 POLICE DEPARTMENT        611992\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name %in%  c(\n    \"DEPT OF ED PEDAGOGICAL\",\n    \"DEPT OF ED PER SESSION TEACHER\",\n    \"DEPT OF ED HRLY SUPPORT STAFF\",\"DEPT OF ED PARA PROFESSIONALS\",\n    \"DEPT OF ED PEDAGOGICAL\",\n    \"DEPT OF ED PER DIEM TEACHERS\", \n    \"DEPT OF ED PER SESSION TEACHER\",\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \ngroup_by(agency_name) |&gt; \n  summarise(\n    Total_records = n(),\n    n_work_location_borough = n_distinct(work_location_borough)\n  ) |&gt; \n  arrange(desc(Total_records))\n\n\n# A tibble: 2 √ó 3\n  agency_name       Total_records n_work_location_borough\n  &lt;chr&gt;                     &lt;int&gt;                   &lt;int&gt;\n1 POLICE DEPARTMENT         65893                       5\n2 FIRE DEPARTMENT           21405                       5\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name %in%  c(\n    \"DEPT OF ED PEDAGOGICAL\",\n    \"DEPT OF ED PER SESSION TEACHER\",\n    \"DEPT OF ED HRLY SUPPORT STAFF\",\"DEPT OF ED PARA PROFESSIONALS\",\n    \"DEPT OF ED PEDAGOGICAL\",\n    \"DEPT OF ED PER DIEM TEACHERS\", \n    \"DEPT OF ED PER SESSION TEACHER\",\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \ngroup_by(agency_name,work_location_borough) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(agency_name,work_location_borough)\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 √ó 3\n# Groups:   agency_name [2]\n   agency_name       work_location_borough Total_records\n   &lt;chr&gt;             &lt;chr&gt;                         &lt;int&gt;\n 1 FIRE DEPARTMENT   BRONX                          3249\n 2 FIRE DEPARTMENT   BROOKLYN                       8904\n 3 FIRE DEPARTMENT   MANHATTAN                      3707\n 4 FIRE DEPARTMENT   QUEENS                         4518\n 5 FIRE DEPARTMENT   RICHMOND                       1027\n 6 POLICE DEPARTMENT BRONX                          6638\n 7 POLICE DEPARTMENT BROOKLYN                      12186\n 8 POLICE DEPARTMENT MANHATTAN                     34810\n 9 POLICE DEPARTMENT QUEENS                        10575\n10 POLICE DEPARTMENT RICHMOND                       1684\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \ngroup_by(agency_name,fiscal_year) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(agency_name,fiscal_year)\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 20 √ó 3\n# Groups:   agency_name [2]\n   agency_name       fiscal_year Total_records\n   &lt;chr&gt;                   &lt;int&gt;         &lt;int&gt;\n 1 FIRE DEPARTMENT          2015         17372\n 2 FIRE DEPARTMENT          2016         19926\n 3 FIRE DEPARTMENT          2017         18679\n 4 FIRE DEPARTMENT          2018         18383\n 5 FIRE DEPARTMENT          2019         18671\n 6 FIRE DEPARTMENT          2020         19186\n 7 FIRE DEPARTMENT          2021         19042\n 8 FIRE DEPARTMENT          2022         20911\n 9 FIRE DEPARTMENT          2023         19063\n10 FIRE DEPARTMENT          2024         21405\n11 POLICE DEPARTMENT        2015         59257\n12 POLICE DEPARTMENT        2016         65860\n13 POLICE DEPARTMENT        2017         62507\n14 POLICE DEPARTMENT        2018         59802\n15 POLICE DEPARTMENT        2019         59961\n16 POLICE DEPARTMENT        2020         60308\n17 POLICE DEPARTMENT        2021         59001\n18 POLICE DEPARTMENT        2022         60795\n19 POLICE DEPARTMENT        2023         58608\n20 POLICE DEPARTMENT        2024         65893\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == \"2024\") |&gt;\n  group_by(agency_name,title_description) |&gt; \n  summarise(\n    Total_records = n()\n    ,.groups = \"drop\"\n  ) |&gt; \n  arrange(agency_name,desc(Total_records))\n\n\n# A tibble: 439 √ó 3\n   agency_name     title_description                               Total_records\n   &lt;chr&gt;           &lt;chr&gt;                                                   &lt;int&gt;\n 1 FIRE DEPARTMENT FIREFIGHTER                                              9804\n 2 FIRE DEPARTMENT EMERGENCY MEDICAL SPECIALIST-EMT                         3968\n 3 FIRE DEPARTMENT LIEUTENANT                                               1620\n 4 FIRE DEPARTMENT EMERGENCY MEDICAL SPECIALIST-PARAMEDIc                   1296\n 5 FIRE DEPARTMENT CAPTAIN                                                   727\n 6 FIRE DEPARTMENT SUPERVISING EMERGENCY MEDICAL SERVICE SPECIALI‚Ä¶           657\n 7 FIRE DEPARTMENT BATTALION CHIEF                                           464\n 8 FIRE DEPARTMENT ASSOCIATE FIRE PROTECTION INSPECTOR                       210\n 9 FIRE DEPARTMENT FIRE PROTECTION INSPECTOR                                 200\n10 FIRE DEPARTMENT FIRE ALARM DISPATCHER                                     197\n# ‚Ñπ 429 more rows\n\n\n\n\nCode\npayroll_data_fire_police &lt;-\n  payroll_data_fire_police |&gt; \n  mutate(agency_start_date_year = year(agency_start_date)) |&gt; \n  mutate(total_pay = rowSums(across(c(regular_gross_paid, total_ot_paid, total_other_pay)),na.rm = TRUE))\n\n\n\n\nCode\nhead(payroll_data_fire_police)\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2020             56 POLICE DEPARTMENT   MORALES       JOSE         \n2        2020             56 POLICE DEPARTMENT     BOYNE     DANIEL        G\n3        2020             56 POLICE DEPARTMENT    MURTHA      KEVIN         \n4        2020             56 POLICE DEPARTMENT MASTRANDE      JAMES        J\n5        2020             56 POLICE DEPARTMENT     AROCA       ALMA        P\n6        2020             56 POLICE DEPARTMENT     TABBS     RONALD        G\n  agency_start_date work_location_borough                 title_description\n1        1998-12-20             MANHATTAN     SUPERVISOR OF SCHOOL SECURITY\n2        2016-04-25             MANHATTAN               STATIONARY ENGINEER\n3        1995-04-30             MANHATTAN LIEUTENANT D/A SPECIAL ASSIGNMENT\n4        2013-12-16             MANHATTAN               STATIONARY ENGINEER\n5        2012-07-11             MANHATTAN                    POLICE OFFICER\n6        2014-07-09             MANHATTAN                    POLICE OFFICER\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED     57813.0 per Annum          0.00\n2                     ACTIVE       508.8   per Day       2080.00\n3                     CEASED    141196.0 per Annum        665.18\n4                     ACTIVE       508.8   per Day       2080.00\n5                     CEASED     85292.0 per Annum         22.87\n6                   ON LEAVE     85292.0 per Annum       1822.85\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1               0.00     0.00          0.00       650000.00\n2          140146.17  1125.25     117728.07        40696.41\n3           48008.86  2451.57     162000.47        78132.88\n4          140146.17  1007.00     103226.97        27980.42\n5          227914.67     0.00          0.00        30289.83\n6          230597.55    55.27       3071.28        22856.71\n  agency_start_date_year total_pay\n1                   1998  650000.0\n2                   2016  298570.7\n3                   1995  288142.2\n4                   2013  271353.6\n5                   2012  258204.5\n6                   2014  256525.5\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  summarise(across(everything(), ~ sum(is.na(.))))\n\n\n  fiscal_year payroll_number agency_name last_name first_name mid_init\n1           0              0           0         0          0        0\n  agency_start_date work_location_borough title_description\n1                 0                     0                 0\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                          0           0         0             0\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1                  0        0             0               0\n  agency_start_date_year total_pay\n1                      0         0\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  group_by(fiscal_year,payroll_number) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(fiscal_year,payroll_number)\n\n\n`summarise()` has grouped output by 'fiscal_year'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 20 √ó 3\n# Groups:   fiscal_year [10]\n   fiscal_year payroll_number Total_records\n         &lt;int&gt;          &lt;dbl&gt;         &lt;int&gt;\n 1        2015             56         59257\n 2        2015             57         17372\n 3        2016             56         65860\n 4        2016             57         19926\n 5        2017             56         62507\n 6        2017             57         18679\n 7        2018             56         59802\n 8        2018             57         18383\n 9        2019             56         59961\n10        2019             57         18671\n11        2020             56         60308\n12        2020             57         19186\n13        2021             56         59001\n14        2021             57         19042\n15        2022             56         60795\n16        2022             57         20911\n17        2023             56         58608\n18        2023             57         19063\n19        2024             56         65893\n20        2024             57         21405\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  group_by(agency_name) |&gt; \n  summarise(\n    Total_records = n(),\n    min(agency_start_date),\n    max(agency_start_date)\n  ) |&gt; \n  arrange(agency_name,desc(Total_records))\n\n\n# A tibble: 2 √ó 4\n  agency_name       Total_records min(agency_start_date‚Ä¶¬π max(agency_start_dat‚Ä¶¬≤\n  &lt;chr&gt;                     &lt;int&gt; &lt;date&gt;                  &lt;date&gt;                \n1 FIRE DEPARTMENT          192638 1968-04-22              2024-07-29            \n2 POLICE DEPARTMENT        611992 1960-11-14              2049-10-16            \n# ‚Ñπ abbreviated names: ¬π‚Äã`min(agency_start_date)`, ¬≤‚Äã`max(agency_start_date)`\n\n\n\n\nCode\n# good for alluvium, year start, year paid\npayroll_data_fire_police |&gt; \n  mutate(agency_start_date_year = year(agency_start_date)) |&gt; \n  group_by(agency_start_date_year) |&gt; \n  summarise(\n    Total_records = n(),\n  ) |&gt; \n  arrange(agency_start_date_year)\n\n\n# A tibble: 62 √ó 2\n   agency_start_date_year Total_records\n                    &lt;dbl&gt;         &lt;int&gt;\n 1                   1960             1\n 2                   1962             9\n 3                   1966            10\n 4                   1967             3\n 5                   1968             8\n 6                   1969            11\n 7                   1970            34\n 8                   1971            24\n 9                   1972            18\n10                   1973           158\n# ‚Ñπ 52 more rows\n\n\n\n\nCode\n# good for alluvium, year start, year paid\npayroll_data_fire_police |&gt; \n  filter(agency_start_date_year == 1960)\n\n\n  fiscal_year payroll_number       agency_name  last_name first_name mid_init\n1        2015             56 POLICE DEPARTMENT FITZGERALD       JOAN        T\n  agency_start_date work_location_borough title_description\n1        1960-11-14             MANHATTAN       STAFF NURSE\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED       79000 per Annum             0\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1           13659.74        0             0               0\n  agency_start_date_year total_pay\n1                   1960  13659.74\n\n\n\n\nCode\n# good for alluvium, year start, year paid\npayroll_data_fire_police |&gt; \n  filter(agency_start_date_year == 2049)\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2016             56 POLICE DEPARTMENT     KIRBY    KATHLYN        L\n  agency_start_date work_location_borough   title_description\n1        2049-10-16             MANHATTAN RECREATION DIRECTOR\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED       55147 per Annum             0\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1             346.18        0             0           14.58\n  agency_start_date_year total_pay\n1                   2049    360.76\n\n\n\n\nCode\n# good for alluvium, year start, year paid\npayroll_data_fire_police |&gt; \n  filter(last_name == 'KIRBY' & first_name =='KATHLYN')\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2016             56 POLICE DEPARTMENT     KIRBY    KATHLYN        L\n  agency_start_date work_location_borough   title_description\n1        2049-10-16             MANHATTAN RECREATION DIRECTOR\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED       55147 per Annum             0\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1             346.18        0             0           14.58\n  agency_start_date_year total_pay\n1                   2049    360.76\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == \"2024\") |&gt;\n  group_by(agency_name,pay_basis) |&gt; \n  summarise(\n    Total_records = n(),\n    TOTAL_total_pay = sum(total_pay),\n    TOTAL_regular_gross_paid = sum(regular_gross_paid),\n    TOTAL_total_ot_paid = sum(total_ot_paid),\n    TOTAL_total_other_pay = sum(total_other_pay),\n    PCT_total_pay = sum(total_pay) / sum(total_pay),\n    PCT_regular_gross_paid = sum(regular_gross_paid)/ sum(total_pay),\n    PCT_total_ot_paid = sum(total_ot_paid)/ sum(total_pay),\n    PCT_total_other_pay = sum(total_other_pay)/ sum(total_pay),\n    records_with_1 = sum(is.na(regular_gross_paid)),\n    records_with_2 = sum(is.na(total_ot_paid)),\n    records_with_3 = sum(is.na(total_other_pay)),\n  ) |&gt; \n  arrange(agency_name,pay_basis,desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 6 √ó 14\n# Groups:   agency_name [2]\n  agency_name     pay_basis Total_records TOTAL_total_pay TOTAL_regular_gross_‚Ä¶¬π\n  &lt;chr&gt;           &lt;chr&gt;             &lt;int&gt;           &lt;dbl&gt;                  &lt;dbl&gt;\n1 FIRE DEPARTMENT per Annum         20848     2567186030.            1658830420.\n2 FIRE DEPARTMENT per Day             357       50577418.              35415659.\n3 FIRE DEPARTMENT per Hour            200        7387331.               6658687.\n4 POLICE DEPARTM‚Ä¶ per Annum         62083     7122451821.            4980160943.\n5 POLICE DEPARTM‚Ä¶ per Day             691       74276308.              58185150.\n6 POLICE DEPARTM‚Ä¶ per Hour           3119       49707895.              47119200.\n# ‚Ñπ abbreviated name: ¬π‚ÄãTOTAL_regular_gross_paid\n# ‚Ñπ 9 more variables: TOTAL_total_ot_paid &lt;dbl&gt;, TOTAL_total_other_pay &lt;dbl&gt;,\n#   PCT_total_pay &lt;dbl&gt;, PCT_regular_gross_paid &lt;dbl&gt;, PCT_total_ot_paid &lt;dbl&gt;,\n#   PCT_total_other_pay &lt;dbl&gt;, records_with_1 &lt;int&gt;, records_with_2 &lt;int&gt;,\n#   records_with_3 &lt;int&gt;\n\n\nCode\n  # format(n=1)\n  # format(scientific=TRUE)\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == \"2024\") |&gt;\n  filter(title_description == \"CHAPLAIN\")\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2024             56 POLICE DEPARTMENT    KUKIQI      TAHIR        M\n2        2024             56 POLICE DEPARTMENT   CASSATO      DAVID        L\n3        2024             56 POLICE DEPARTMENT      KASS      ALVIN         \n4        2024             56 POLICE DEPARTMENT    ROMANO     ROBERT        J\n  agency_start_date work_location_borough title_description\n1        2019-06-24             MANHATTAN          CHAPLAIN\n2        2001-06-18             MANHATTAN          CHAPLAIN\n3        1966-12-16             MANHATTAN          CHAPLAIN\n4        1998-10-13             MANHATTAN          CHAPLAIN\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     ACTIVE       70241 per Annum          1820\n2                     ACTIVE       76176 per Annum          2080\n3                     ACTIVE       81839 per Annum          2080\n4                     ACTIVE       81440 per Annum          2080\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1           67828.94        0       1674.26          631.00\n2           73537.28        0          0.00         6173.67\n3           79005.61        0          0.00         7672.90\n4           78620.77        0          0.00         8172.90\n  agency_start_date_year total_pay\n1                   2019  70134.20\n2                   2001  79710.95\n3                   1966  86678.51\n4                   1998  86793.67\n\n\nCode\n  # filter(pay_basis == \"Prorated Annual\") \n\n\nremove pro_rated data ‚ÄúProrated Annual‚Äù\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year &gt; \"2014\") |&gt;\n  group_by(agency_name,fiscal_year) |&gt; \n  summarise(\n    Total_records = n(),\n    TOTAL_total_pay = sum(total_pay),\n    TOTAL_regular_gross_paid = sum(regular_gross_paid),\n    TOTAL_total_ot_paid = sum(total_ot_paid),\n    TOTAL_total_other_pay = sum(total_other_pay),\n    PCT_total_pay = sum(total_pay) / sum(total_pay),\n    PCT_regular_gross_paid = sum(regular_gross_paid)/ sum(total_pay),\n    PCT_total_ot_paid = sum(total_ot_paid)/ sum(total_pay),\n    PCT_total_other_pay = sum(total_other_pay)/ sum(total_pay),\n    records_with_1 = sum(is.na(regular_gross_paid)),\n    records_with_2 = sum(is.na(total_ot_paid)),\n    records_with_3 = sum(is.na(total_other_pay)),\n  ) |&gt; \n  arrange(agency_name,fiscal_year,desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 20 √ó 14\n# Groups:   agency_name [2]\n   agency_name  fiscal_year Total_records TOTAL_total_pay TOTAL_regular_gross_‚Ä¶¬π\n   &lt;chr&gt;              &lt;int&gt;         &lt;int&gt;           &lt;dbl&gt;                  &lt;dbl&gt;\n 1 FIRE DEPART‚Ä¶        2015         17372     1634119567.            1154834510.\n 2 FIRE DEPART‚Ä¶        2016         19926     1880178273.            1363189262.\n 3 FIRE DEPART‚Ä¶        2017         18679     1801905808.            1312717663.\n 4 FIRE DEPART‚Ä¶        2018         18383     1830837676.            1302973120.\n 5 FIRE DEPART‚Ä¶        2019         18671     1784925547.            1307873584.\n 6 FIRE DEPART‚Ä¶        2020         19186     1864198776.            1313646743.\n 7 FIRE DEPART‚Ä¶        2021         19042     1932732426.            1380571789.\n 8 FIRE DEPART‚Ä¶        2022         20911     2375326572.            1581986580.\n 9 FIRE DEPART‚Ä¶        2023         19063     2204216644.            1408996580.\n10 FIRE DEPART‚Ä¶        2024         21405     2625150779.            1700904766.\n11 POLICE DEPA‚Ä¶        2015         59257     4595548106.            3409419582.\n12 POLICE DEPA‚Ä¶        2016         65860     4852742537.            3633110040.\n13 POLICE DEPA‚Ä¶        2017         62507     5317798046.            4003003829.\n14 POLICE DEPA‚Ä¶        2018         59802     5043802671.            3800480310.\n15 POLICE DEPA‚Ä¶        2019         59961     5162125279.            3895497643.\n16 POLICE DEPA‚Ä¶        2020         60308     5356617806.            3904542295.\n17 POLICE DEPA‚Ä¶        2021         59001     4914452895.            3768555825.\n18 POLICE DEPA‚Ä¶        2022         60795     5340710115.            3874060895.\n19 POLICE DEPA‚Ä¶        2023         58608     5227139221.            3692765151.\n20 POLICE DEPA‚Ä¶        2024         65893     7246436025.            5085465293.\n# ‚Ñπ abbreviated name: ¬π‚ÄãTOTAL_regular_gross_paid\n# ‚Ñπ 9 more variables: TOTAL_total_ot_paid &lt;dbl&gt;, TOTAL_total_other_pay &lt;dbl&gt;,\n#   PCT_total_pay &lt;dbl&gt;, PCT_regular_gross_paid &lt;dbl&gt;, PCT_total_ot_paid &lt;dbl&gt;,\n#   PCT_total_other_pay &lt;dbl&gt;, records_with_1 &lt;int&gt;, records_with_2 &lt;int&gt;,\n#   records_with_3 &lt;int&gt;\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year &gt; \"2014\") |&gt;\n  group_by(agency_name,fiscal_year) |&gt; \n  summarise(\n    Total_records = n(),\n    TOTAL_total_pay = n_distinct(title_description)\n  ) |&gt; \n  arrange(agency_name,fiscal_year,desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 20 √ó 4\n# Groups:   agency_name [2]\n   agency_name       fiscal_year Total_records TOTAL_total_pay\n   &lt;chr&gt;                   &lt;int&gt;         &lt;int&gt;           &lt;int&gt;\n 1 FIRE DEPARTMENT          2015         17372             171\n 2 FIRE DEPARTMENT          2016         19926             170\n 3 FIRE DEPARTMENT          2017         18679             172\n 4 FIRE DEPARTMENT          2018         18383             173\n 5 FIRE DEPARTMENT          2019         18671             177\n 6 FIRE DEPARTMENT          2020         19186             177\n 7 FIRE DEPARTMENT          2021         19042             174\n 8 FIRE DEPARTMENT          2022         20911             182\n 9 FIRE DEPARTMENT          2023         19063             182\n10 FIRE DEPARTMENT          2024         21405             184\n11 POLICE DEPARTMENT        2015         59257             239\n12 POLICE DEPARTMENT        2016         65860             245\n13 POLICE DEPARTMENT        2017         62507             245\n14 POLICE DEPARTMENT        2018         59802             247\n15 POLICE DEPARTMENT        2019         59961             248\n16 POLICE DEPARTMENT        2020         60308             244\n17 POLICE DEPARTMENT        2021         59001             247\n18 POLICE DEPARTMENT        2022         60795             259\n19 POLICE DEPARTMENT        2023         58608             261\n20 POLICE DEPARTMENT        2024         65893             255\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  # mutate(year_agency_start_date_clean = year(agency_start_date_clean)) |&gt; \n  filter(agency_start_date_year == \"2024\") |&gt;\n  filter(fiscal_year &gt; \"2014\") |&gt;\n  group_by(agency_name,title_description) |&gt; \n  summarise(\n    Total_records = n()\n    ,mean(base_salary)\n  ) |&gt; \n  arrange(agency_name,desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 46 √ó 4\n# Groups:   agency_name [2]\n   agency_name     title_description           Total_records `mean(base_salary)`\n   &lt;chr&gt;           &lt;chr&gt;                               &lt;int&gt;               &lt;dbl&gt;\n 1 FIRE DEPARTMENT FIREFIGHTER                           266              54122 \n 2 FIRE DEPARTMENT EMERGENCY MEDICAL SPECIALI‚Ä¶           221              39430.\n 3 FIRE DEPARTMENT EMERGENCY MEDICAL SPECIALI‚Ä¶            91              36330 \n 4 FIRE DEPARTMENT AGENCY ATTORNEY                         2             112938.\n 5 FIRE DEPARTMENT EXECUTIVE AGENCY COUNSEL                2             140187 \n 6 FIRE DEPARTMENT PROGRAM PRODUCER                        2              23511.\n 7 FIRE DEPARTMENT STAFF ANALYST                           2              74698 \n 8 FIRE DEPARTMENT ASSISTANT COMMISSIONER                  1             202592 \n 9 FIRE DEPARTMENT AUTO MECHANIC                           1                391.\n10 FIRE DEPARTMENT CASE - MANAGEMENT NURSE                 1             100750 \n# ‚Ñπ 36 more rows\n\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  # mutate(year_agency_start_date_clean = year(agency_start_date_clean)) |&gt; \n  # filter(fiscal_year == \"2018\") |&gt;\n  filter(title_description %in%  c(\"FIREFIGHTER\",\"POLICE OFFICER\")) |&gt;\n  group_by(agency_name,pay_basis,fiscal_year,title_description) |&gt; \n  summarise(\n    Total_records = n()\n    ,mean(base_salary)\n    ,mean(total_pay)\n  ) |&gt; \n  arrange(agency_name,desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name', 'pay_basis', 'fiscal_year'.\nYou can override using the `.groups` argument.\n\n\n# A tibble: 20 √ó 7\n# Groups:   agency_name, pay_basis, fiscal_year [20]\n   agency_name       pay_basis fiscal_year title_description Total_records\n   &lt;chr&gt;             &lt;chr&gt;           &lt;int&gt; &lt;chr&gt;                     &lt;int&gt;\n 1 FIRE DEPARTMENT   per Annum        2016 FIREFIGHTER               10484\n 2 FIRE DEPARTMENT   per Annum        2024 FIREFIGHTER                9804\n 3 FIRE DEPARTMENT   per Annum        2022 FIREFIGHTER                9690\n 4 FIRE DEPARTMENT   per Annum        2020 FIREFIGHTER                9085\n 5 FIRE DEPARTMENT   per Annum        2019 FIREFIGHTER                8902\n 6 FIRE DEPARTMENT   per Annum        2018 FIREFIGHTER                8899\n 7 FIRE DEPARTMENT   per Annum        2023 FIREFIGHTER                8773\n 8 FIRE DEPARTMENT   per Annum        2017 FIREFIGHTER                8739\n 9 FIRE DEPARTMENT   per Annum        2021 FIREFIGHTER                8479\n10 FIRE DEPARTMENT   per Annum        2015 FIREFIGHTER                8049\n11 POLICE DEPARTMENT per Annum        2024 POLICE OFFICER            31439\n12 POLICE DEPARTMENT per Annum        2016 POLICE OFFICER            29439\n13 POLICE DEPARTMENT per Annum        2017 POLICE OFFICER            28644\n14 POLICE DEPARTMENT per Annum        2022 POLICE OFFICER            25428\n15 POLICE DEPARTMENT per Annum        2018 POLICE OFFICER            25425\n16 POLICE DEPARTMENT per Annum        2021 POLICE OFFICER            25143\n17 POLICE DEPARTMENT per Annum        2019 POLICE OFFICER            25081\n18 POLICE DEPARTMENT per Annum        2020 POLICE OFFICER            24835\n19 POLICE DEPARTMENT per Annum        2023 POLICE OFFICER            24711\n20 POLICE DEPARTMENT per Annum        2015 POLICE OFFICER            23595\n# ‚Ñπ 2 more variables: `mean(base_salary)` &lt;dbl&gt;, `mean(total_pay)` &lt;dbl&gt;\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  # filter(title_description== \"TEACHER- PER SESSION\") |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  filter(leave_status_as_of_june_30==\"ACTIVE\") |&gt;\n  filter(agency_name %in%  c(\"DEPT OF ED PEDAGOGICAL\",\"DEPT OF ED PER SESSION TEACHER\",\"DEPT OF ED HRLY SUPPORT STAFF\",\"DEPT OF ED PARA PROFESSIONALS\",\n\"DEPT OF ED PEDAGOGICAL\",\n\"DEPT OF ED PER DIEM TEACHERS\",\n\"DEPT OF ED PER SESSION TEACHER\"    )) |&gt;\n  group_by(agency_name,title_description) |&gt;\n  summarise(\n    Total_records = n(),\n    base_salary_sum = sum(base_salary),\n    base_salary_avg = mean(regular_gross_paid),\n    base_salary_sum2 = sum(regular_gross_paid),\n    # total_ot_sum = round(sum(total_ot_pay),0),\n    total_other_sum = round(sum(total_other_pay),0),\n    total_paid_sum = round(sum(total_pay),0),\n    total_paid_avg = mean(total_pay),\n\n  ) |&gt;\n  arrange(desc(Total_records))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 0 √ó 9\n# Groups:   agency_name [0]\n# ‚Ñπ 9 variables: agency_name &lt;chr&gt;, title_description &lt;chr&gt;,\n#   Total_records &lt;int&gt;, base_salary_sum &lt;dbl&gt;, base_salary_avg &lt;dbl&gt;,\n#   base_salary_sum2 &lt;dbl&gt;, total_other_sum &lt;dbl&gt;, total_paid_sum &lt;dbl&gt;,\n#   total_paid_avg &lt;dbl&gt;\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  # filter(title_description== \"TEACHER- PER SESSION\") |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  filter(leave_status_as_of_june_30==\"ACTIVE\") |&gt;\n  filter(agency_name %in%  c(\"POLICE DEPARTMENT\"    )) |&gt;\n  group_by(agency_name,work_location_borough,title_description) |&gt;\n  summarise(\n    Total_records = n(),\n    base_salary_sum = sum(base_salary),\n    base_salary_avg = mean(regular_gross_paid),\n    base_salary_sum2 = sum(regular_gross_paid),\n    # total_ot_sum = round(sum(total_ot_pay),0),\n    total_other_sum = round(sum(total_other_pay),0),\n    total_paid_sum = round(sum(total_pay),0),\n    total_paid_avg = mean(total_pay),\n\n  ) |&gt;\n  arrange(agency_name,title_description,work_location_borough)\n\n\n`summarise()` has grouped output by 'agency_name', 'work_location_borough'. You\ncan override using the `.groups` argument.\n\n\n# A tibble: 467 √ó 10\n# Groups:   agency_name, work_location_borough [5]\n   agency_name       work_location_borough title_description      Total_records\n   &lt;chr&gt;             &lt;chr&gt;                 &lt;chr&gt;                          &lt;int&gt;\n 1 POLICE DEPARTMENT MANHATTAN             *AGENCY ATTORNEY                   2\n 2 POLICE DEPARTMENT MANHATTAN             *ASSISTANT ADVOCATE-PD             1\n 3 POLICE DEPARTMENT MANHATTAN             *ATTORNEY AT LAW                   1\n 4 POLICE DEPARTMENT MANHATTAN             *CUSTODIAL ASSISTANT               1\n 5 POLICE DEPARTMENT BRONX                 ACCOUNTANT                         1\n 6 POLICE DEPARTMENT BROOKLYN              ACCOUNTANT                         3\n 7 POLICE DEPARTMENT MANHATTAN             ACCOUNTANT                         9\n 8 POLICE DEPARTMENT QUEENS                ACCOUNTANT                         2\n 9 POLICE DEPARTMENT RICHMOND              ACCOUNTANT                         2\n10 POLICE DEPARTMENT BRONX                 ADM MANAGER-NON-MGRL               1\n# ‚Ñπ 457 more rows\n# ‚Ñπ 6 more variables: base_salary_sum &lt;dbl&gt;, base_salary_avg &lt;dbl&gt;,\n#   base_salary_sum2 &lt;dbl&gt;, total_other_sum &lt;dbl&gt;, total_paid_sum &lt;dbl&gt;,\n#   total_paid_avg &lt;dbl&gt;\n\n\nCode\n  # arrange(desc(Total_records))\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  # filter(title_description== \"TEACHER- PER SESSION\") |&gt;\n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(leave_status_as_of_june_30==\"ACTIVE\") |&gt;\n  filter(agency_name %in%  c(\"POLICE DEPARTMENT\"    )) |&gt;\n  group_by(title_description) |&gt;\n  summarise(\n    Total_records = n(),\n    base_salary_sum = sum(base_salary),\n    base_salary_avg = mean(regular_gross_paid),\n    base_salary_sum2 = sum(regular_gross_paid),\n    # total_ot_sum = round(sum(total_ot_pay),0),\n    total_other_sum = round(sum(total_other_pay),0),\n    total_paid_sum = round(sum(total_pay),0),\n    total_paid_avg = mean(total_pay),\n\n  ) |&gt;\n  # arrange(title_description)\n  arrange(desc(Total_records))\n\n\n# A tibble: 327 √ó 8\n   title_description               Total_records base_salary_sum base_salary_avg\n   &lt;chr&gt;                                   &lt;int&gt;           &lt;dbl&gt;           &lt;dbl&gt;\n 1 POLICE OFFICER                         226300    16243575854           71446.\n 2 SCHOOL SAFETY AGENT                     45169     1952776948           41400.\n 3 P.O. DA DET GR3                         31391     3082214165           99498.\n 4 SERGEANT-                               26698     2831977743          108291.\n 5 SCHOOL CROSSING GUARD                   20629       17793767.          15649.\n 6 TRAFFIC ENFORCEMENT AGENT               19505      815475464           38654.\n 7 LIEUTENANT                              13793     1722631027          123546.\n 8 POLICE COMMUNICATIONS TECHNICI‚Ä¶         12786      615427901           41371.\n 9 POLICE ADMINISTRATIVE AIDE              12381      508306876           38490.\n10 SERGEANT                                12167     1180616023           97877.\n# ‚Ñπ 317 more rows\n# ‚Ñπ 4 more variables: base_salary_sum2 &lt;dbl&gt;, total_other_sum &lt;dbl&gt;,\n#   total_paid_sum &lt;dbl&gt;, total_paid_avg &lt;dbl&gt;\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  group_by(work_location_borough) |&gt;\n  summarise(\n    Total_records = n()\n  )\n\n\n# A tibble: 5 √ó 2\n  work_location_borough Total_records\n  &lt;chr&gt;                         &lt;int&gt;\n1 BRONX                        101915\n2 BROOKLYN                     208720\n3 MANHATTAN                    310236\n4 QUEENS                       155565\n5 RICHMOND                      28194\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  group_by(work_location_borough,fiscal_year) |&gt;\n  summarise(\n    Total_records = n()\n  )\n\n\n`summarise()` has grouped output by 'work_location_borough'. You can override\nusing the `.groups` argument.\n\n\n# A tibble: 50 √ó 3\n# Groups:   work_location_borough [5]\n   work_location_borough fiscal_year Total_records\n   &lt;chr&gt;                       &lt;int&gt;         &lt;int&gt;\n 1 BRONX                        2015          9663\n 2 BRONX                        2016         10011\n 3 BRONX                        2017         10320\n 4 BRONX                        2018         10433\n 5 BRONX                        2019         10398\n 6 BRONX                        2020         10586\n 7 BRONX                        2021         10495\n 8 BRONX                        2022         10215\n 9 BRONX                        2023          9907\n10 BRONX                        2024          9887\n# ‚Ñπ 40 more rows\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  group_by(title_description) |&gt;\n  summarise(\n    Total_records = n()\n  ) |&gt;\n  arrange(desc(Total_records))\n\n\n# A tibble: 436 √ó 2\n   title_description                Total_records\n   &lt;chr&gt;                                    &lt;int&gt;\n 1 POLICE OFFICER                          263740\n 2 FIREFIGHTER                              90904\n 3 SCHOOL SAFETY AGENT                      54806\n 4 P.O. DA DET GR3                          35911\n 5 LIEUTENANT                               32742\n 6 EMERGENCY MEDICAL SPECIALIST-EMT         31774\n 7 SERGEANT-                                29848\n 8 SCHOOL CROSSING GUARD                    27381\n 9 TRAFFIC ENFORCEMENT AGENT                24466\n10 POLICE COMMUNICATIONS TECHNICIAN         16748\n# ‚Ñπ 426 more rows\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  # filter(title_description== \"TEACHER- PER SESSION\") |&gt;\n  # filter(fiscal_year == \"2024\") |&gt;\n  # filter(agency_name %in%  c(\"DEPT OF ED PEDAGOGICAL\",\"DEPT OF ED PER SESSION TEACHER\")) |&gt;\n  group_by(agency_name,work_location_borough) |&gt;\n  summarise(\n    Total_records = n(),\n    base_salary_sum = sum(base_salary),\n    base_salary_avg = mean(base_salary)\n  ) |&gt;\n  arrange(desc(agency_name))\n\n\n`summarise()` has grouped output by 'agency_name'. You can override using the\n`.groups` argument.\n\n\n# A tibble: 10 √ó 5\n# Groups:   agency_name [2]\n   agency_name       work_location_borough Total_records base_salary_sum\n   &lt;chr&gt;             &lt;chr&gt;                         &lt;int&gt;           &lt;dbl&gt;\n 1 POLICE DEPARTMENT BRONX                         72253     4957559800.\n 2 POLICE DEPARTMENT BROOKLYN                     134890     8804875794.\n 3 POLICE DEPARTMENT MANHATTAN                    274486    20869898460.\n 4 POLICE DEPARTMENT QUEENS                       112008     7288661627.\n 5 POLICE DEPARTMENT RICHMOND                      18355     1258343020.\n 6 FIRE DEPARTMENT   BRONX                         29662     2183298705.\n 7 FIRE DEPARTMENT   BROOKLYN                      73830     5832605787.\n 8 FIRE DEPARTMENT   MANHATTAN                     35750     2832927173.\n 9 FIRE DEPARTMENT   QUEENS                        43557     2986285004.\n10 FIRE DEPARTMENT   RICHMOND                       9839      828760664.\n# ‚Ñπ 1 more variable: base_salary_avg &lt;dbl&gt;\n\n\n\n\nCode\npayroll_data_fire_police &lt;- payroll_data_fire_police |&gt;\n  # mutate(base_salary_std = if_else(pay_basis == \"per Day\", base_salary * 260, base_salary) |&gt;\n  mutate(\n    regular_gross_paid = as.numeric(regular_gross_paid),\n    total_ot_paid = as.numeric(total_ot_paid),\n    total_other_pay = as.numeric(total_other_pay)\n  ) |&gt;\n  mutate(total_paid = regular_gross_paid +total_ot_paid + total_other_pay)\n\n\n\n\nCode\nhead(payroll_data_fire_police)\n\n\n  fiscal_year payroll_number       agency_name last_name first_name mid_init\n1        2020             56 POLICE DEPARTMENT   MORALES       JOSE         \n2        2020             56 POLICE DEPARTMENT     BOYNE     DANIEL        G\n3        2020             56 POLICE DEPARTMENT    MURTHA      KEVIN         \n4        2020             56 POLICE DEPARTMENT MASTRANDE      JAMES        J\n5        2020             56 POLICE DEPARTMENT     AROCA       ALMA        P\n6        2020             56 POLICE DEPARTMENT     TABBS     RONALD        G\n  agency_start_date work_location_borough                 title_description\n1        1998-12-20             MANHATTAN     SUPERVISOR OF SCHOOL SECURITY\n2        2016-04-25             MANHATTAN               STATIONARY ENGINEER\n3        1995-04-30             MANHATTAN LIEUTENANT D/A SPECIAL ASSIGNMENT\n4        2013-12-16             MANHATTAN               STATIONARY ENGINEER\n5        2012-07-11             MANHATTAN                    POLICE OFFICER\n6        2014-07-09             MANHATTAN                    POLICE OFFICER\n  leave_status_as_of_june_30 base_salary pay_basis regular_hours\n1                     CEASED     57813.0 per Annum          0.00\n2                     ACTIVE       508.8   per Day       2080.00\n3                     CEASED    141196.0 per Annum        665.18\n4                     ACTIVE       508.8   per Day       2080.00\n5                     CEASED     85292.0 per Annum         22.87\n6                   ON LEAVE     85292.0 per Annum       1822.85\n  regular_gross_paid ot_hours total_ot_paid total_other_pay\n1               0.00     0.00          0.00       650000.00\n2          140146.17  1125.25     117728.07        40696.41\n3           48008.86  2451.57     162000.47        78132.88\n4          140146.17  1007.00     103226.97        27980.42\n5          227914.67     0.00          0.00        30289.83\n6          230597.55    55.27       3071.28        22856.71\n  agency_start_date_year total_pay total_paid\n1                   1998  650000.0   650000.0\n2                   2016  298570.7   298570.7\n3                   1995  288142.2   288142.2\n4                   2013  271353.6   271353.6\n5                   2012  258204.5   258204.5\n6                   2014  256525.5   256525.5\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n    filter(fiscal_year == \"2024\") |&gt;\n  # filter(agency_name %in%  c(\"DEPT OF ED PEDAGOGICAL\",\"DEPT OF ED PER SESSION TEACHER\")) |&gt;\n\nggplot() +\n    geom_point(mapping = aes(x=base_salary,\n                             y=regular_gross_paid,\n                             color = pay_basis\n                             ),\n      size = 0.5,\n      alpha = 0.5,\n      )\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n    filter(fiscal_year == \"2024\") |&gt;\n  # filter(agency_name %in%  c(\"DEPT OF ED PEDAGOGICAL\",\"DEPT OF ED PER SESSION TEACHER\")) |&gt;\n\nggplot() +\n    geom_point(mapping = aes(x=total_paid,\n                             y=regular_gross_paid,\n                             color = leave_status_as_of_june_30\n                             ),\n      size = 0.5,\n      alpha = 0.5,\n      )+\n   scale_x_continuous(labels = scales::label_comma()) +\n  scale_y_continuous(labels = scales::label_comma()) +\n  coord_fixed()\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  # filter(agency_name %in%  c(\"DEPT OF ED PEDAGOGICAL\",\"DEPT OF ED PER SESSION TEACHER\")) |&gt;\n\nggplot() +\n    geom_point(mapping = aes(x=regular_gross_paid,\n                             y=total_other_pay,\n                             color = leave_status_as_of_june_30\n                             ),\n      size = 0.5,\n      alpha = 0.5,\n      )+\n   scale_x_continuous(labels = scales::label_comma()) +\n  scale_y_continuous(labels = scales::label_comma()) +\n  coord_fixed()",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "Add bar Remove bar",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5¬† Conclusion",
    "section": "",
    "text": "hi, this is my conclusion\n\n\nCode\n# this is test\n\n\n\n\nCode\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDataset Name\nCitywide Payroll Data (Fiscal Year)\n\n\nProvided by\nOffice of Payroll Administration (OPA)\n\n\nData Category\nCity Government\n\n\nFrequency of Updates\nAnnually\n\n\nDate Created\nOctober 31, 2015\n\n\nData Last Updated\nOctober 30, 2024\n\n\nDimensions\nRaw Data: 6,225,611 rows | 17 columns\nSubset Data: 804,630 rows | 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\nSource URL\nhttps://data.cityofnewyork.us/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImporting the data\nCreating the final subset data\n\n\n\nTo access the data, we can go directly to the URL:\n\n\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\n\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv\n\n\n(YYYYMMDD refers to the date that you downloaded the file)\n\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\n\n\nCode\n# # import original data\n# payroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\") \n# \n# # make a copy of original data for transformations\n# payroll_data &lt;- data.frame(payroll_data_source)\n# \n# # rename columns\n# names(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))\n\n\n\n\n\n\n\nThe decision-making process for selecting a subset of the data and the detailed transformation the original dataset with 6,225,611 rows to our final dataset with 804,630 rows.\nTo generate the final subset use the code below:\n\n\nCode\n# payroll_data_fire_police &lt;-\n#   payroll_data |&gt; \n#   # clean agency name: \n#   mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name))) |&gt; \n#   # clean location name: \n#   mutate(work_location_borough_clean = toupper(work_location_borough)) |&gt; \n# \n#   # filtering data:\n#   filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n#   filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt; \n#   filter(fiscal_year &gt;= \"2015\" & fiscal_year &lt;= \"2024\") |&gt; \n#   filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\")) |&gt; \n#   \n#   # backfill payroll number after filtering\n#   mutate(\n#     payroll_number_clean = case_when(\n#       is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n#       is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n#       TRUE ~ payroll_number\n#     )) |&gt; \n#   \n#   # converting dates:\n#   mutate(agency_start_date_clean = mdy(agency_start_date)) |&gt; \n# \n#   # renaming clean columns to original names:\n#   mutate(\n#     agency_name = agency_name_clean,\n#     work_location_borough = work_location_borough_clean,\n#     payroll_number = payroll_number_clean,\n#     agency_start_date = agency_start_date_clean\n#   ) |&gt;\n#   \n#   # dropping clean columns\n#   dplyr::select(-agency_name_clean, \n#                 -work_location_borough_clean, \n#                 -payroll_number_clean,\n#                 -agency_start_date_clean)\n  \n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "6¬† Appendix",
    "section": "",
    "text": "6.1 Creating the subset data\nIn this section, we will explore the decision-making process for selecting a subset of the data and the detailed transformation the original dataset with 6,225,611 rows to our final dataset with 804,630 rows.\nCode\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming Columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming Columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#importing-the-data",
    "href": "appendix.html#importing-the-data",
    "title": "6¬† Appendix",
    "section": "6.2 Importing the data",
    "text": "6.2 Importing the data\nTo access the data, we can go directly to the URL:\n\n\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\n\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv\n\n\n(YYYYMMDD refers to the date that you downloaded the file)\n\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\n\n\nCode\n# import original data\npayroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\") \n\n# make a copy of original data for transformations\npayroll_data &lt;- data.frame(payroll_data_source)\n\n# rename columns\nnames(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#understanding-and-cleaning-the-raw-data",
    "href": "appendix.html#understanding-and-cleaning-the-raw-data",
    "title": "6¬† Appendix",
    "section": "6.3 Understanding and cleaning the raw data",
    "text": "6.3 Understanding and cleaning the raw data\nStarting with the original data (6.22 million rows). This is quick summary of how many categories we have in each column:\n\n\nCode\npayroll_data |&gt; \n  summarise(\n    \"Number of Agencies\"     = n_distinct(agency_name),\n    \"Number of Titles\"       = n_distinct(title_description),\n    \"Number of Locations\"    = n_distinct(work_location_borough),\n    \"Number of Pay Basis\"    = n_distinct(pay_basis),\n    \"Number of Fiscal Years\" = n_distinct(fiscal_year)\n  ) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\nNumber of Agencies\nNumber of Titles\nNumber of Locations\nNumber of Pay Basis\nNumber of Fiscal Years\n\n\n\n\n170\n1991\n23\n4\n11\n\n\n\n\n\n\n\n\n\n6.3.1 Agencies\nMany of the agencies in the raw data have the following format: AGENCY_NAME #NUMBER.\nExamples:\n\n\n\nBROOKLYN COMMUNITY BOARD #1\nBROOKLYN COMMUNITY BOARD #2\nBROOKLYN COMMUNITY BOARD #3\n\n\nWe will group Agency names by aggregating all agencies that have the same name, but different numbers. This will reduce overall number os agencies.\n\n\nCode\npayroll_data &lt;- \n  payroll_data |&gt; \n  mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name)))\n\npayroll_data |&gt; \n  summarise(\n    \"Number of Agencies Before\" = n_distinct(agency_name),\n    \"Number of Agencies After\"  = n_distinct(agency_name_clean),\n  ) |&gt; \n  kable()\n\n\n\n\n\nNumber of Agencies Before\nNumber of Agencies After\n\n\n\n\n170\n116\n\n\n\n\n\n\nNow, let‚Äôs take a look at the top 10 Agencies:\n\n\nCode\npayroll_data_summary &lt;- payroll_data |&gt; \n  group_by(agency_name_clean) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt; \n  slice_head(n = 10)  \n\n\npayroll_data_summary |&gt; \n  kable(col.names = c(\"Agency\", \"Total Records\")) |&gt; \n  row_spec(which(payroll_data_summary$agency_name_clean == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_summary$agency_name_clean == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nTotal Records\n\n\n\n\nDEPT OF ED PEDAGOGICAL\n1207427\n\n\nDEPT OF ED PER SESSION TEACHER\n997983\n\n\nPOLICE DEPARTMENT\n612076\n\n\nDEPT OF ED PARA PROFESSIONALS\n412698\n\n\nBOARD OF ELECTION POLL WORKERS\n375001\n\n\nDEPT OF ED HRLY SUPPORT STAFF\n255501\n\n\nFIRE DEPARTMENT\n209272\n\n\nDEPARTMENT OF EDUCATION ADMIN\n181282\n\n\nDEPT OF PARKS & RECREATION\n170200\n\n\nHRA/DEPT OF SOCIAL SERVICES\n157963\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.2 Work Location Borough\nWhen looking at the Work Location Borough, we see many recording with missing data (506,234 rows). We can also observe that the names of the locations are not standardized, some names are Uppercase and some are not (MANHATTAN vs Manhattan).\n\n\nCode\npayroll_data |&gt; \n  group_by(work_location_borough) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt; \n  slice_head(n = 10) |&gt; \n  kable(col.names = c(\"Locations\", \"Total Records\")) |&gt; \n  row_spec(which(payroll_data |&gt; \n                 group_by(work_location_borough) |&gt; \n                 summarise(Total_records = n()) |&gt; \n                 arrange(desc(Total_records)) |&gt; \n                 slice_head(n = 10) |&gt; \n                 pull(work_location_borough) %in% c(\"\",\"Bronx\", \"MANHATTAN\", \"Manhattan\")),   background = \"#fcefb4\", color = \"black\")\n\n\n\n\n\nLocations\nTotal Records\n\n\n\n\nMANHATTAN\n4077947\n\n\nQUEENS\n621225\n\n\nBROOKLYN\n523572\n\n\n\n506234\n\n\nBRONX\n286551\n\n\nOTHER\n116918\n\n\nRICHMOND\n77020\n\n\nWESTCHESTER\n5653\n\n\nULSTER\n3245\n\n\nManhattan\n1622\n\n\n\n\n\n\n\n\nOur first step here is to capitalize all the location names.\n\n\nCode\npayroll_data &lt;- payroll_data |&gt; \n  mutate(work_location_borough_clean = toupper(work_location_borough))\n\npayroll_data |&gt; \n  summarise(\n    \"Number of Locations Before\" = n_distinct(work_location_borough),\n    \"Number of Locations After\"  = n_distinct(work_location_borough_clean),\n  ) |&gt; \n  kable()\n\n\n\n\n\nNumber of Locations Before\nNumber of Locations After\n\n\n\n\n23\n19\n\n\n\n\n\n\nThe main 5 locations of this dataset are: BRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND\nUsing the top 10 agencies that we found previously, we will keep all the agencies that have at least data for all 5 locations:\n\n\nCode\nrequired_boroughs &lt;- c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")\n\nagencies_present_in_required_boroughs &lt;-\n  payroll_data |&gt;\n  filter(work_location_borough_clean %in% required_boroughs) |&gt; \n  group_by(agency_name_clean) |&gt;  \n  summarise(\n    borough_count = n_distinct(work_location_borough_clean)  \n  ) |&gt;\n  filter(borough_count == length(required_boroughs)) |&gt; \n  filter(agency_name_clean %in% payroll_data_summary$agency_name_clean) |&gt; \n  pull(agency_name_clean)\n\n\npayroll_data_agencies_present_in_required_boroughs &lt;-\n  payroll_data |&gt; \n  filter(agency_name_clean %in% payroll_data_summary$agency_name_clean) |&gt; \n  filter(agency_name_clean %in% agencies_present_in_required_boroughs) |&gt; \n  group_by(agency_name_clean) |&gt; \n  summarise(\n    Total_records = n(),\n    \"Number of Locations\" = n_distinct(work_location_borough_clean)\n  ) |&gt; \n  arrange(desc(Total_records)) \n\npayroll_data_agencies_present_in_required_boroughs |&gt; \n  kable(col.names = c(\"Agency\", \"Total Records\", \"Number of Locations\")) |&gt; \n  row_spec(which(payroll_data_agencies_present_in_required_boroughs$agency_name_clean == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_agencies_present_in_required_boroughs$agency_name_clean == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nTotal Records\nNumber of Locations\n\n\n\n\nPOLICE DEPARTMENT\n612076\n5\n\n\nFIRE DEPARTMENT\n209272\n7\n\n\nDEPARTMENT OF EDUCATION ADMIN\n181282\n12\n\n\nDEPT OF PARKS & RECREATION\n170200\n7\n\n\nHRA/DEPT OF SOCIAL SERVICES\n157963\n8\n\n\n\n\n\n\n\n\nSince we are interested in the POLICE and FIRE departments, let‚Äôs take a closer look at the FIRE DEPARTMENT since it contains 7 locations. Based on these results, we have 1 record with location OTHER and 16555 with Blank location.\n\n\nCode\npayroll_data |&gt; \n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n  filter(agency_name_clean %in% agencies_present_in_required_boroughs) |&gt; \n  group_by(agency_name_clean,work_location_borough_clean,fiscal_year) |&gt; \n  summarise(\n    Total_records = n(), .groups = 'drop'\n  ) |&gt; \n  arrange(agency_name_clean,work_location_borough_clean,fiscal_year) |&gt; \n  filter (!work_location_borough_clean %in% required_boroughs) |&gt; \n  kable(col.names = c(\"Agency\", \"Location\", \"Fiscal Year\", \"Total Records\"))\n\n\n\n\n\nAgency\nLocation\nFiscal Year\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\n\n2014\n16555\n\n\nFIRE DEPARTMENT\nOTHER\n2022\n1\n\n\n\n\n\n\nThe final decision for location is to keep only data for the major 5 locations:\nBRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND.\n\n\n\n\n\n6.3.3 Fiscal Year\nUsing only the FIRE and POLICE department, we can observe that we have no records for 2014 for the Police department. Please note that the 16555 in the FIRE department for 2014 are the same records with blank location we found before.\nThe final decision for Fiscal Year is to drop 2014 and keep only data from 2015 to 2024.\n\n\nCode\n# Create the pivot table\npivot_table_fiscal_year &lt;- payroll_data |&gt;\nfilter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  group_by(fiscal_year, agency_name_clean) |&gt; \n  summarise(count = n(), .groups = 'drop') |&gt; \n  pivot_wider(\n    names_from = agency_name_clean,  \n    values_from = count,  \n    values_fill = list(count = 0) \n  )\n\npivot_table_fiscal_year |&gt;\n  kable(col.names = c(\"Fiscal Year\", \"FIRE DEPARTMENT\", \"POLICE DEPARTMENT\")) |&gt; \n  kable_styling() |&gt;\n  column_spec(3, background = ifelse(as.matrix(pivot_table_fiscal_year[, 3]) == 0, \"#fcefb4\", \"\"))\n\n\n\n\n\nFiscal Year\nFIRE DEPARTMENT\nPOLICE DEPARTMENT\n\n\n\n\n2014\n16555\n0\n\n\n2015\n17380\n59264\n\n\n2016\n19934\n65868\n\n\n2017\n18687\n62516\n\n\n2018\n18391\n59811\n\n\n2019\n18679\n59970\n\n\n2020\n19193\n60316\n\n\n2021\n19049\n59009\n\n\n2022\n20920\n60804\n\n\n2023\n19072\n58617\n\n\n2024\n21412\n65901\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.4 Pay Basis\nBased on the different types of pay basis, we will drop the Prorated Annual as it is the category with the lowest amount of records and it only affects 1 job title (Chaplain).\nThe final decision for Pay Basis is to keep only data for the categories:\nper Annum, per Day, per Hour.\n\n\nCode\npayroll_data |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  group_by(agency_name_clean,pay_basis) |&gt; \n  summarise(\n    Total_records = n(),\n    Count_of_titles = n_distinct(title_description)\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt;\n  kable(col.names = c(\"Agency\", \"Pay Basis\", \"Total Records\", \"Count of Titles\"))\n\n\n\n\n\nAgency\nPay Basis\nTotal Records\nCount of Titles\n\n\n\n\nPOLICE DEPARTMENT\nper Annum\n573429\n286\n\n\nFIRE DEPARTMENT\nper Annum\n203929\n199\n\n\nPOLICE DEPARTMENT\nper Hour\n32769\n29\n\n\nPOLICE DEPARTMENT\nper Day\n5794\n39\n\n\nFIRE DEPARTMENT\nper Day\n3934\n35\n\n\nFIRE DEPARTMENT\nper Hour\n1324\n47\n\n\nFIRE DEPARTMENT\nProrated Annual\n85\n1\n\n\nPOLICE DEPARTMENT\nProrated Annual\n84\n1\n\n\n\n\n\nCode\npayroll_data |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  filter(pay_basis == \"Prorated Annual\") |&gt;\n  filter(title_description == \"CHAPLAIN\") |&gt; \n  group_by(agency_name_clean,pay_basis,title_description) |&gt; \n  summarise(\n    Total_records = n()\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(agency_name_clean) |&gt;\n  kable(col.names = c(\"Agency\", \"Pay Basis\", \"Title\", \"Total Records\"))\n\n\n\n\n\nAgency\nPay Basis\nTitle\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\nProrated Annual\nCHAPLAIN\n85\n\n\nPOLICE DEPARTMENT\nProrated Annual\nCHAPLAIN\n84\n\n\n\n\n\n\n\n\n\n\n6.3.5 Payroll Number\nFirst let‚Äôs start create a dataset filtered based on the criteria we discussed above:\n\n\n\nAgency (‚ÄúPOLICE DEPARTMENT‚Äù,‚ÄúFIRE DEPARTMENT‚Äù)\nLocation (‚ÄúBRONX‚Äù, ‚ÄúBROOKLYN‚Äù, ‚ÄúMANHATTAN‚Äù, ‚ÄúQUEENS‚Äù, ‚ÄúRICHMOND‚Äù),\nFiscal Year (2015-2024)\nPay Basis (‚Äúper Annum‚Äù, ‚Äúper Day‚Äù, ‚Äúper Hour‚Äù)\n\n\nFrom this dataset, we still have 243,601 NA records for the column `Payroll Number‚Äô. By doing a group by analysis per fiscal year, we can observe the NA are related to the years 2015, 2016, and 2017. So we will backfill those years with the proper payroll number code based on each agency. This way we will no longer have NA values in the new dataset.\n\n\nCode\npayroll_data_filtered &lt;- \n  payroll_data |&gt; \n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n  filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt; \n  filter(fiscal_year &gt; \"2014\") |&gt; \n  filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\"))\n\n\n# Count NA values\nna_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA Count\"\n  )\n\n# Count blank values\nblank_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank Count\"\n  )\n\n# Count zero values\nzero_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero Count\"\n  )\n\n\ncombined_summary &lt;- na_summary |&gt;\n  inner_join(blank_summary, by = \"Column\") |&gt;\n  inner_join(zero_summary, by = \"Column\")\n\n# combined_summary |&gt;\n#   filter(`NA Count` &gt; 0 | `Blank Count` &gt; 0 | `Zero Count` &gt; 0) |&gt; \n#   kable(col.names = c(\"Column\", \"NA Count\", \"Blank Count\", \"Zero Count\"))\n\nna_summary |&gt; \n  filter(`NA Count` &gt; 0) |&gt; \n  kable(col.names = c(\"Column\", \"NA Count\"))\n\n\n\n\n\nColumn\nNA Count\n\n\n\n\npayroll_number\n243601\n\n\n\n\n\n\n\nCode\npayroll_data_filtered_payroll &lt;- payroll_data_filtered |&gt; \n  group_by(agency_name_clean,payroll_number,fiscal_year) |&gt; \n  summarise(\n    Total_records = n()\n    ,.groups = \"drop\"\n  ) |&gt; \n  arrange(agency_name_clean,fiscal_year,desc(Total_records))\n\npayroll_data_filtered_payroll |&gt; \n  kable(col.names = c(\"Agency\", \"Payroll Number\", \"Fiscal Year\", \"Total Records\")) |&gt;\n  column_spec(2, background = ifelse(is.na(as.matrix(payroll_data_filtered_payroll[, 2])), \"#fcefb4\", \"\"))\n\n\n\n\n\nAgency\nPayroll Number\nFiscal Year\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\nNA\n2015\n17372\n\n\nFIRE DEPARTMENT\nNA\n2016\n19926\n\n\nFIRE DEPARTMENT\nNA\n2017\n18679\n\n\nFIRE DEPARTMENT\n57\n2018\n18383\n\n\nFIRE DEPARTMENT\n57\n2019\n18671\n\n\nFIRE DEPARTMENT\n57\n2020\n19186\n\n\nFIRE DEPARTMENT\n57\n2021\n19042\n\n\nFIRE DEPARTMENT\n57\n2022\n20911\n\n\nFIRE DEPARTMENT\n57\n2023\n19063\n\n\nFIRE DEPARTMENT\n57\n2024\n21405\n\n\nPOLICE DEPARTMENT\nNA\n2015\n59257\n\n\nPOLICE DEPARTMENT\nNA\n2016\n65860\n\n\nPOLICE DEPARTMENT\nNA\n2017\n62507\n\n\nPOLICE DEPARTMENT\n56\n2018\n59802\n\n\nPOLICE DEPARTMENT\n56\n2019\n59961\n\n\nPOLICE DEPARTMENT\n56\n2020\n60308\n\n\nPOLICE DEPARTMENT\n56\n2021\n59001\n\n\nPOLICE DEPARTMENT\n56\n2022\n60795\n\n\nPOLICE DEPARTMENT\n56\n2023\n58608\n\n\nPOLICE DEPARTMENT\n56\n2024\n65893\n\n\n\n\n\n\n\n\n\nCode\n# Backfill NA values with the proper payroll number based on each agency\npayroll_data_filtered &lt;- \n  payroll_data_filtered |&gt;\n  mutate(\n    payroll_number_clean = case_when(\n      is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n      is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n      TRUE ~ payroll_number\n    )\n  ) \n\n\n\n\n\n\n\n6.3.6 Agency Start Date\nThe column agency_start_date is loaded as a character when we read the data for the first time. We will change the type to date using lubridate.\n\n\nCode\nlibrary(lubridate)\n\npayroll_data_filtered &lt;- \n  payroll_data_filtered |&gt; \n  mutate(agency_start_date_clean = mdy(agency_start_date))",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#saving-subset-data",
    "href": "appendix.html#saving-subset-data",
    "title": "6¬† Appendix",
    "section": "6.4 Saving Subset Data",
    "text": "6.4 Saving Subset Data\nWe will save the Final Subset Data into the folder /data_source/, so we can load it later inside results.qmd.\n\n\nCode\npayroll_data_fire_police &lt;-\n  payroll_data_filtered |&gt; \n\n  # renaming clean columns to original names:\n  mutate(\n    agency_name = agency_name_clean,\n    work_location_borough = work_location_borough_clean,\n    payroll_number = payroll_number_clean,\n    agency_start_date = agency_start_date_clean\n  ) |&gt;\n  \n  # dropping clean columns\n  dplyr::select(-agency_name_clean, \n                -work_location_borough_clean, \n                -payroll_number_clean,\n                -agency_start_date_clean)\n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#final-subset-data-information",
    "href": "appendix.html#final-subset-data-information",
    "title": "6¬† Appendix",
    "section": "6.5 Final Subset Data Information",
    "text": "6.5 Final Subset Data Information\nBased on the analysis above, we will add a few filters to produce and clean our final dataset.\nFilters applied to the dataset:\n\n\n\n\n\n\nColumn Name\nFilter\n\n\n\n\nAgency Name\nFIRE DEPARTMENT, POLICE DEPARTMENT\n\n\nWork Location Borough\nBRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND\n\n\nFiscal Year\nFrom 2015 to 2024\n\n\nPay Basis\nper Annum, per Day, per Hour\n\n\n\n\n\n\n\n\n\n\nCleaning data and Handling NAs:\n\n\n\n\n\n\nColumn Name\nNote\n\n\n\n\nAgency Name\nGroup agencies with similar names. Keep only FIRE and POLICE.\n\n\nWork Location Borough\nUppercase all names. Filtering data only for top 5 Boroughs.\n\n\nFiscal Year\n2014 had missing data for Police Department. 2014 will be removed.\n\n\nPay Basis\nKeeping only the top 3 Pay Basis.\n\n\nPayroll Number\nMissing NA values have been backfilled based on Agency Name.\n\n\nAgency Start Date\nConvert strings to date using lubridate.\n\n\n\n\n\n\n\n\n\n\nSize of Final subset Data\n\n\n\n\n\n\nDimensions\n804,630 rows and 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\n\n\n\n\n\nRecord count by Agency:\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(dplyr)\n\npayroll_data_fire_police |&gt; \n  group_by(agency_name) |&gt; \n  summarise(\n    Count = n()\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(desc(Count)) |&gt;\n  mutate(Percentage = Count / sum(Count) * 100,\n         Label = paste(\n                       format(Count, big.mark = \",\"), \"\\n\", \" (\", sprintf(\"%.0f\", Percentage), \"%)\", sep = \"\")) |&gt; \nggplot(aes(x = \"\", y = Count, fill = agency_name)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  scale_fill_manual(name= 'Agency', values = c(\"#f94144\", \"deepskyblue3\")) +\n  # labs(title = \"Record Count by Department\") +\n  theme_void() +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5), color = \"white\")\n\n\n\n\n\n\n\n\n\nOverall dataset Information:\n\n\n\n\n\n\n\n\n\n\n\nMetrics\nFire Deparmtnet\nPolice Department\n\n\n\n\nCount of Records\n192,638\n611,992\n\n\nFiscal Years\n10 years (2015-2024)\n10 years (2015-2024)\n\n\nAgency Start Date Range\n1968-04-22 to 2024-07-29\n1960-11-14 to 2049-10-16\n\n\nWork Location Borough\n5\n5\n\n\nTitle Description\n238\n335",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  }
]