[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fire and Police Department Payroll",
    "section": "",
    "text": "1 Introduction\nMy experience in the financial industry has fostered a strong interest in working with high-volume salary datasets.\nFor this project, I will analyze 10 years of payroll data for the Fire and Police departments in New York City. This dataset represents a well-defined and comprehensive universe of information, making it ideal for thorough exploration and analysis.\nOne of the reasons I selected this dataset is its versatility; it includes a variety of data types such as categorical text with differing levels of granularity, numerical data, dates, and fields with missing or outlier values. These characteristics provide opportunities to practice a range of analytical techniques, from data cleaning to advanced visualizations for pattern discovery.\nSpecifically, I am interested in studying trends such as workforce growth, salary composition across different roles, and identifying the top-ranking positions and locations with the highest payroll activity. By delving into these questions, I aim to uncover meaningful insights into the structure and evolution of these essential public service departments. Let‚Äôs uncover the stories hidden in the data!\nüöí üíµ üöì",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2¬† Data",
    "section": "",
    "text": "2.1 Description\nFor this project, we will be using a subset of the Citywide Payroll Data.\nThis dataset is available via NYC OpenData and provided by the Office of Payroll Administration (OPA).\nHere are the filters applied to the original data to produce our final subset of data:\nColumn Name\nFilter\n\n\n\n\nFiscal Year\nFrom 2015 to 2024 (10 years)\n\n\nAgency Name\nFIRE DEPARTMENT, POLICE DEPARTMENT\n\n\nWork Location Borough\nBRONX, BROOKLYN, MANHATTAN, QUEENS, STATEN ISLAND\n\n\nPay Basis\nper Annum, per Day, per Hour",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2¬† Data",
    "section": "",
    "text": "The final subset of data for this project will be focused on 2 Agencies:\n\n\nFire Department üßë‚Äçüöí üöí\nPolice Department üëÆüöì\n\n\n\n\n\n\n\n\n2.1.1 Data information\nThe payroll data is provided annually by NYC OpenData and contains New York City employee salaries by Fiscal Year. We are using the latest snapshot of the data, released on October 30, 2024. Here are some details about the format of the data, the frequency of updates, dimensions about the data, and other relevant metadata:\n\nData MetadataData Format\n\n\n\n\n\n\n\n\n\n\n\nDataset Name\nCitywide Payroll Data (Fiscal Year)\n\n\nProvided by\nOffice of Payroll Administration (OPA)\n\n\nData Category\nCity Government\n\n\nFrequency of Updates\nAnnually\n\n\nDate Created\nOctober 31, 2015\n\n\nData Last Updated\nOctober 30, 2024\n\n\nDimensions\nRaw Data: 6,225,611 rows | 17 columns\nSubset Data: 804,630 rows | 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\nSource URL\nhttps://data.cityofnewyork.us/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nColumn Name\nDescription\nData Type\n\n\n\n\nFiscal Year\nFiscal Year\nNumber\n\n\nPayroll Number\nPayroll Number\nNumber\n\n\nAgency Name\nThe Payroll agency that the employee works for\nText\n\n\nLast Name\nLast name of employee\nText\n\n\nFirst Name\nFirst name of employee\nText\n\n\nMid Init\nMiddle initial of employee\nText\n\n\nAgency Start Date\nDate which employee began working for their current agency\nTimestamp\n\n\nWork Location Borough\nBorough of employee's primary work location\nText\n\n\nTitle Description\nCivil service title description of the employee\nText\n\n\nLeave Status as of June 30\nStatus of employee as of the close of the relevant fiscal year: Active, Ceased, or On Leave\nText\n\n\nBase Salary\nBase Salary assigned to the employee\nNumber\n\n\nPay Basis\nLists whether the employee is paid on an hourly, per diem or annual basis\nText\n\n\nRegular Hours\nNumber of regular hours employee worked in the fiscal year\nNumber\n\n\nRegular Gross Paid\nThe amount paid to the employee for base salary during the fiscal year\nNumber\n\n\nOT Hours\nOvertime Hours worked by employee in the fiscal year\nNumber\n\n\nTotal OT Paid\nTotal overtime pay paid to the employee in the fiscal year\nNumber\n\n\nTotal Other Pay\nIncludes any compensation in addition to gross salary and overtime pay, i.e., Differentials, lump sums, uniform allowance, meal allowance, retroactive pay increases, settlement amounts, and bonus pay, if applicable.\nNumber\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.2 Data Source\n\n\n\n\n\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\n\n\nImporting the data\nCleaning the data\nCreating the final subset data\n\n\n\nTo access the data, we can go directly to the URL:\n\n\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\n\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv\n\n\n(YYYYMMDD refers to the date that you downloaded the file)\n\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\n\n\nCode\n# import original data\npayroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\")\n\n# make a copy of original data for transformations\npayroll_data &lt;- data.frame(payroll_data_source)\n\n# rename columns\nnames(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))\n\n\n\n\n\n\n\nThe decision-making process for selecting a subset of the data and the detailed transformation and clean up of the original dataset with 6,225,611 rows to our final dataset with 804,630 rows can be found in the Appendix section.\n\n\n\n\n\nThe data used for this analysis is a subset of the entire raw data. The final subset data (focused on the Fire and Police departments) contains 804,630 rows out of the 6,225,611 rows from the original dataset.\nTo generate the final subset that will be used in the analysis, please run the code below:\n\n\nCode\n# `payroll_data` dataframe comes from the **Importing the data** section.\n\npayroll_data_fire_police &lt;-\n  payroll_data |&gt;\n  # clean agency name:\n  mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name))) |&gt;\n  # clean job titles:\n  mutate(title_description = toupper(title_description)) |&gt; \n  # clean location name:\n  mutate(work_location_borough_clean = toupper(work_location_borough)) |&gt;\n\n  # filtering data:\n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt;\n  filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt;\n  filter(fiscal_year &gt;= \"2015\" & fiscal_year &lt;= \"2024\") |&gt;\n  filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\")) |&gt;\n\n  # backfill payroll number after filtering\n  mutate(\n    payroll_number_clean = case_when(\n      is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n      is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n      TRUE ~ payroll_number\n    )) |&gt;\n\n  # converting dates:\n  mutate(agency_start_date_clean = mdy(agency_start_date)) |&gt;\n\n  # renaming clean columns to original names:\n  mutate(\n    agency_name = agency_name_clean,\n    work_location_borough = work_location_borough_clean,\n    payroll_number = payroll_number_clean,\n    agency_start_date = agency_start_date_clean\n  ) |&gt;\n\n  # dropping clean columns\n  dplyr::select(-agency_name_clean,\n                -work_location_borough_clean,\n                -payroll_number_clean,\n                -agency_start_date_clean)\n\n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2¬† Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\nTo analyse missing data, we will classify our data in 4 categories:\n¬†¬†¬† ‚ñ† NA - any values equal to NA\n¬†¬†¬† ‚ñ† Blank - string values equal to ‚Äú‚Äù\n¬†¬†¬† ‚ñ† Zero - numeric values equal to 0\n¬†¬†¬† ‚ñ† Complete - any values with data\n\n\n2.2.1 NAs and Blanks\nFirst, let‚Äôs check the missing values of the original dataset.\nUsing a sample of 1 million records (from 6.22 million rows) we have close to 4.5% of missing data classified as ‚ñ† NA or ‚ñ† Blank. We identified missing values in 7 columns*, including three related to a person‚Äôs name (first_name, mid_init, last_name), payroll_number, work_location_borough, title_description, and agency_start_date.\n       (*based on the black highlights and the percentages listed in the column names of the vis_miss() plot)\n\n\nCode\npayroll_data_missing &lt;- \n  payroll_data |&gt;\n  sample_n(100000) |&gt;\n  mutate(across(everything(), ~ if_else(. == \"\", NA, .)))\n\npayroll_data_missing |&gt; \n  vis_miss(\n    sort_miss = TRUE,\n    # cluster = TRUE, # disabled because vector memory limit of 16.0 Gb reached, see mem.maxVSize()\n    show_perc_col = TRUE,\n    warn_large_data = FALSE,\n    ) + \n  ggtitle(\"Missing Values (NA or Blank) - Original Data Sample\")+\n  labs(caption = \"Clustering has been disabled due high volume data and memory limits.\") +\n  theme(plot.margin = margin(r = 50))\n\n\n\n\n\n\n\n\n\n\nAfter transforming our original data to create our final subset data (Fire and Police Departments), we can now examine the missing values of the final dataset.\n\n\nCode\n# install.packages(\"remotes\")\n# remotes::install_github(\"jtr13/redav\")\nlibrary(redav)\n\nplot_missing_modified &lt;- function(x, percent = TRUE, num_char = 100, \n                         max_rows = NULL, max_cols = NULL) {    \n\n  na_count_all &lt;- data.frame(is.na(x)) %&gt;%  \n    dplyr::group_by_all() %&gt;%   \n    dplyr::count(name = \"count\", sort = TRUE) %&gt;%   \n    dplyr::ungroup() %&gt;%    \n    tibble::rownames_to_column(\"pattern\")   \n  \n  if (!is.null(max_rows)) na_count_all &lt;- na_count_all %&gt;% \n      dplyr::filter(as.numeric(pattern) &lt;= max_rows)\n  \n  na_count_all &lt;- na_count_all %&gt;% \n    dplyr::mutate(pattern = factor(.data$pattern, levels = nrow(na_count_all):1))\n\n  \n  # count the number of columns with missing values; will be used later to determine if there's a \"none missing\" pattern    \n  na_count_all &lt;- na_count_all %&gt;%  \n    dplyr::rowwise() %&gt;%    \n    dplyr::mutate(num_missing_cols = sum(dplyr::c_across(where(is.logical))))   \n  \n  # data frame for missing patterns bar chart   \n  na_count_by_pattern &lt;- na_count_all[,c(\"pattern\", \"count\", \"num_missing_cols\")]\n  na_count_by_pattern$none_missing &lt;- ifelse(na_count_by_pattern$num_missing_cols == 0, TRUE, FALSE)\n\n  # data frame for missing by column bar chart  \n  na_count_by_column &lt;- data.frame(is.na(x)) %&gt;%    \n    colSums() %&gt;%   \n    sort(decreasing = TRUE) %&gt;%     \n    tibble::enframe(name = \"var\", value = \"count\")  \n  \n  if (!is.null(max_cols)) na_count_by_column &lt;- na_count_by_column %&gt;%\n    dplyr::slice(1:max_cols)\n  \n  # tidy and sort na_count_all by column counts \n  na_count_all_tidy &lt;- na_count_all %&gt;%     \n    tidyr::pivot_longer(where(is.logical), names_to = \"variable\") %&gt;%   \n    dplyr::filter(variable %in% na_count_by_column$var) %&gt;%\n    dplyr::mutate(variable = factor(.data$variable, levels = na_count_by_column$var))  %&gt;%  \n    dplyr::mutate(none_missing = ifelse(.data$num_missing_cols == 0, TRUE, FALSE))\n  \n  # calculate the % of data shown\n  perc_shown &lt;- 100*sum(na_count_by_pattern$count)/nrow(x)\n  \n  # main plot\n  main_plot &lt;- na_count_all_tidy %&gt;%\n    ggplot2::ggplot(ggplot2::aes(.data$variable, .data$pattern, fill = factor(.data$value), alpha = .data$none_missing)) +  \n    ggplot2::geom_tile(color = \"white\") +   \n    ggplot2::scale_x_discrete(labels = abbreviate(levels(na_count_all_tidy$variable), num_char)) +\n    ggplot2::scale_fill_manual(values = c(\"grey70\", \"mediumpurple\")) +  \n    ggplot2::scale_alpha_manual(values = c(.7, 1)) +    \n    ggplot2::labs(y = \"missing pattern\",\n                  caption = paste0(\"These missing patterns represent \",\n                                   round(perc_shown, 1), \"% of the rows.\")) +   \n    ggplot2::guides(fill = \"none\", alpha = \"none\") +    \n    ggplot2::theme_classic(12)+ \n    ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  \n  # check for \"none missing\" pattern\n  none_missing_pattern &lt;- na_count_by_pattern %&gt;%\n    dplyr::filter(.data$none_missing) %&gt;% dplyr::pull(.data$pattern)\n  \n  if (length(none_missing_pattern) &gt; 0) {   \n    column_count &lt;- min(c(ncol(na_count_all)-2, max_cols+1))\n    main_plot &lt;- main_plot +    \n      ggplot2::annotate(\"text\", x = column_count/2, \n               y = nrow(na_count_all) + 1 - as.numeric(as.character(none_missing_pattern)), \n               label = \"complete cases\")    \n  } \n  \n  # margin plots\n  \n  denom &lt;- ifelse(percent, nrow(x)/100, 1)\n  \n  # top\n  missing_by_column_plot &lt;- \n    na_count_by_column %&gt;% \n    dplyr::mutate(var = abbreviate(var, num_char)) %&gt;% \n    ggplot2::ggplot(ggplot2::aes(forcats::fct_inorder(.data$var), .data$count/denom)) + \n    ggplot2::geom_col(fill = \"cornflowerblue\", alpha = .7) +\n    ggplot2::scale_y_continuous(expand = c(0, 0), n.breaks = 3) +   \n    ggplot2::labs(x = \"\",\n                  y = ifelse(percent, \"% rows \\n missing:\", \"num rows \\n missing:\")) +  \n    ggplot2::theme_linedraw(12) +   \n    ggplot2::theme(panel.grid.major.x = ggplot2::element_blank(),   \n          panel.grid.minor.x = ggplot2::element_blank(),\n          ) + \n    ggplot2::theme(axis.text.x = element_text(angle = 45, hjust = 0))+\n    scale_x_discrete(position = \"top\") +\n    ggplot2::geom_text(\n      ggplot2::aes(\n        label = ifelse(.data$count / denom &gt; 0, scales::percent(.data$count / denom / 100, accuracy = 0.1), NA)\n        ),\n      vjust = -0.5,\n      size = 3\n      ) +\n    ggtitle(\"Missing Values (NA or Blank) - Subset Data\")\n  \n  # right\n  missing_by_pattern_plot &lt;- \n    ggplot2::ggplot(na_count_by_pattern, ggplot2::aes(.data$pattern, .data$count/denom, alpha = .data$none_missing)) +\n    ggplot2::geom_col(fill = \"cornflowerblue\") +\n    ggplot2::coord_flip() +\n    ggplot2::scale_y_continuous(expand = c(0, 0), n.breaks = 3) +\n    ggplot2::scale_alpha_manual(values = c(.7, 1)) +\n    ggplot2::labs(x = \"\", y = ifelse(percent, \"% rows\", \"row count\")) +\n    ggplot2::guides(alpha = \"none\") +\n    ggplot2::theme_linedraw(12) +\n    ggplot2::theme(panel.grid.major.y = ggplot2::element_blank(), \n          panel.grid.minor.y = ggplot2::element_blank()) +\n    ggplot2::geom_text(\n      ggplot2::aes(\n        label = ifelse(.data$count / denom &gt; 0, scales::percent(.data$count / denom / 100, accuracy = 0.1), NA)),\n      hjust = -0.1,\n      size = 3\n      ) \n  \n  if (percent) {    \n    missing_by_column_plot &lt;- missing_by_column_plot +\n      ggplot2::scale_y_continuous(expand = c(0, 0), n.breaks = 5,\n                         limits = c(0, 100))    \n    missing_by_pattern_plot &lt;- missing_by_pattern_plot +\n      ggplot2::scale_y_continuous(expand = c(0, 0), n.breaks = 5,\n                         limits = c(0, 100))    \n  } \n  \n  missing_by_column_plot + patchwork::plot_spacer() +   \n    main_plot + missing_by_pattern_plot +   \n    patchwork::plot_layout(widths = c(4, 1), heights = c(2, 4))\n}\n\n\npayroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")\n\npayroll_data_fire_police_na_blank &lt;-\n  payroll_data_fire_police |&gt; \n  mutate(across(everything(), ~ case_when(. == \"\" ~ NA, TRUE ~ .)))\n\n\nplot_missing_modified(payroll_data_fire_police_na_blank, percent = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot_missing() original source function has been modified\n\n\n\nOriginal function was changed to accommodate long column names in the x-axis and show % labels.\n\n\n\n\n\n\n\n2.2.2 Zeros and Complete Values\nIn addition to NAs and Blanks, an important part of this dataset is the analysis of ‚ñ† Zero values. For this dataset, Zeros are relevant information and should not be excluded from the data. Let‚Äôs take a look at the full analysis of NAs, Blanks, Zeros, and Complete values.\nWe can now examine how the values from the original compares to the final dataset:\n\nOriginal VS Subset ComparisonOriginal DetailsSubset Details\n\n\n\n\nCode\n#Data Transformation\n\npayroll_data_total_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ n())) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Total Count\"\n  )\n\npayroll_data_na_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA\"\n  )\n\npayroll_data_blank_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank\"\n  )\n\npayroll_data_zero_summary &lt;- payroll_data |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero\"\n  )\n\npayroll_data_combined_summary &lt;- \n  payroll_data_total_summary |&gt; \n  inner_join(payroll_data_na_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_blank_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_zero_summary, by = \"Column\")\n\n\n# payroll_data_combined_summary\n\npayroll_data_combined_summary_likert &lt;-\npayroll_data_combined_summary |&gt; \n  mutate(`Complete` = `Total Count` - `NA` - `Blank` - Zero) |&gt; \n  mutate(`Complete` = `Complete` / `Total Count`) |&gt; \n  mutate(`NA` = `NA` / `Total Count`) |&gt; \n  mutate(`Blank` = `Blank` / `Total Count`) |&gt; \n  mutate(`Zero` = Zero / `Total Count`) |&gt; \n  dplyr::select(`Column`,`NA`,`Blank`,Zero,`Complete`) |&gt; \n  filter(!Column %in% c('agency_name_clean','work_location_borough_clean'))\n\n\nlikert_colors &lt;- c(\"NA\" = \"#D7191C\",\n                   \"Blank\" = \"#FDAE61\",\n                   \"Zero\" = \"#ABD9E9\",\n                   \"Complete\" = \"#2C7BB6\")\n\n\n\npayroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")\n\npayroll_data_fire_police_total_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ n())) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Total Count\"\n  )\n\npayroll_data_fire_police_na_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA\"\n  )\n\npayroll_data_fire_police_blank_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank\"\n  )\n\npayroll_data_fire_police_zero_summary &lt;- payroll_data_fire_police |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero\"\n  )\n\n\npayroll_data_fire_police_combined_summary &lt;- \n  payroll_data_fire_police_total_summary |&gt; \n  inner_join(payroll_data_fire_police_na_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_fire_police_blank_summary, by = \"Column\") |&gt; \n  inner_join(payroll_data_fire_police_zero_summary, by = \"Column\")\n\n\npayroll_data_fire_police_combined_summary_likert &lt;-\n  payroll_data_fire_police_combined_summary |&gt; \n  mutate(`Complete` = `Total Count` - `NA` - `Blank` - Zero) |&gt; \n  mutate(`Complete` = `Complete` / `Total Count`) |&gt; \n  mutate(`NA` = `NA` / `Total Count`) |&gt; \n  mutate(`Blank` = `Blank` / `Total Count`) |&gt; \n  mutate(`Zero` = Zero / `Total Count`) |&gt; \n  dplyr::select(`Column`,`NA`,`Blank`,Zero,`Complete`) |&gt; \n  filter(!Column %in% c('agency_name_clean','work_location_borough_clean'))\n\n\n# Chart\n\npayroll_data_missing_group_likert &lt;- bind_rows(\n  payroll_data_combined_summary_likert |&gt; mutate(group= 'Original Data'), \n  payroll_data_fire_police_combined_summary_likert |&gt; mutate(group= 'Final Subset Data')\n)\n\nHH::likert(x=Column~. | group,payroll_data_missing_group_likert, \n           positive.order=TRUE,\n           as.percent = T,\n           main = 'Missing Value Analysis',\n           xlab='Percentage',\n           ylab='Columns',\n           col = likert_colors,\n           ReferenceZero=2.5,\n           rightAxis=FALSE,\n           # xlimEqualLeftRight=TRUE,\n           xlim=c(-50,100),\n           )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiverging stacked bar chart to analyze missing data\n\n\n\nIn this dataset, values classified as ‚ÄúComplete‚Äù or ‚ÄúZero‚Äù are considered positive, as they indicate usable data that can be effectively analyzed. Conversely, ‚ÄúNA‚Äù and ‚ÄúBlank‚Äù values pose potential issues for data interpretation. To reflect this distinction, the diverging stacked bar chart will position ‚ÄúNA‚Äù and ‚ÄúBlank‚Äù values on the left side, representing a negative impact on the analysis.\n\n\n\n\n\n\n\n\n\nColumn Name\nNA\nBlank\nZero\nComplete\n\n\n\n\nPayroll Number\n28.0 %\n-\n-\n72 %\n\n\nLast Name\n0.0004 %\n0.2 %\n-\n99.8 %\n\n\nFirst Name\n0.0014 %\n0.2 %\n-\n99.8 %\n\n\nMid Init\n-\n41.1 %\n0.0006 %\n58.9 %\n\n\nWork Location Borough\n-\n8.1 %\n-\n91.9 %\n\n\nAgency Start Date\n-\n0.002 %\n-\n99.9 %\n\n\nTitle Description\n-\n0.002 %\n-\n99.9 %\n\n\nRegular Hours\n-\n-\n57.9 %\n42.1 %\n\n\nRegular Gross Paid\n-\n-\n3.8 %\n96.2 %\n\n\nOT Hours\n-\n-\n75.1 %\n24.9 %\n\n\nTotal OT Paid\n-\n-\n72.5 %\n27.5 %\n\n\nTotal Other Pay\n-\n-\n37.3 %\n62.7 %\n\n\nFiscal Year , Agency Name, Leave Status as of June 30, Base Salary, Pay Basis\n-\n-\n-\n100 %\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nColumn Name\nNA\nBlank\nZero\nComplete\n\n\n\n\nMid Init\n-\n29.4 %\n-\n70.6 %\n\n\nLast Name, First Name\n-\n1.2 %\n-\n98.8 %\n\n\nRegular Hours\n-\n-\n6.9 %\n93.1 %\n\n\nRegular Gross Paid\n-\n-\n1.5 %\n98.5 %\n\n\nOT Hours\n-\n-\n20.9 %\n79.1 %\n\n\nTotal OT Paid\n-\n-\n15.9 %\n84.1 %\n\n\nTotal Other Pay\n-\n-\n3.7 %\n96.3 %\n\n\nFiscal Year , Payroll Number , Agency Name, Agency Start Date, Work Location Borough, Title Description, Leave Status as of June 30, Base Salary, Pay Basis\n-\n-\n-\n100 %\n\n\n\n\n\n\n\n\n\n\nOur original dataset has ‚ñ† NA data for payroll_number, first_name, last_name. It also has ‚ñ† Blank data in 6 columns: first_name, mid_init, last_name, work_location_borough, title_description, agency_start_date.\nFor both datasets, ‚ñ† Zero values show up in columns related to the amount paid to a person, which can be 3 categories: regular, overtime, other. If a certain category is 0, it means the person did not receive any money for that category. This in an important information because it does not requires us to exclude or impute these values. We can observe a significant reduction of zero values in the subset dataset compared to the original.\nOur final subset data (Fire and Police Departments) no longer contains ‚ñ† NA data, but still contains ‚ñ† Blank data in 3 columns: first_name, mid_init, last_name.\n\n\n\nFor mid_init (Middle Name Initials), 29% of the data in the final subset is Blank, it is ok for us to have blanks in the data, this will not affect the future analysis.\nFor first_name and last_name blank data (1.2% of the data in the final subset is Blank), these values are blank on purpose by the data provider:\n‚Ä¶As a part of FISA-OPA‚Äôs routine process for reviewing and releasing Citywide Payroll Data, data for some agencies (specifically NYC Police Department (NYPD) and the District Attorneys‚Äô Offices (Manhattan, Kings, Queens, Richmond, Bronx, and Special Narcotics)) have been redacted since they are exempt from disclosure pursuant to the Freedom of Information Law, POL ¬ß 87(2)(f), on the ground that disclosure of the information could endanger the life and safety of the public servants listed thereon‚Ä¶\n\n\n\n\n\n\n\n\n\n\nIn conclusion, the subset data for FIRE and POLICE departments (which will be used in the Results section) contains no ‚ñ† NA values, only ‚ñ† Blank values that won‚Äôt affect the analysis, ‚ñ† Zero values that are crucial for salary-related insights, and multiple columns with a ‚ñ† Complete set of values for all rows.",
    "crumbs": [
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3¬† Results",
    "section": "",
    "text": "3.1 Who gets the Money?\nEveryone in the payroll database for the Fire and Police departments receives some form of compensation.\nPerhaps a better question is: how many people are receiving salaries from these departments? From the chart below, we observe that the Fire Department has about one-third the number of employees compared to the Police Department. Additionally, most Fire Department employees are located in Brooklyn, while the Police Department has a higher concentration of employees in Manhattan. Overall, the number of employees in each department has remained relatively stable over the past 10 years, with 2024 recording the highest number of employees for both departments.\nNow, let‚Äôs examine how much these agencies are paying their employees. The Fire Department shows a slow but steady increase in total salaries paid each year. In contrast, Police Department salaries fluctuate over the years, with a notable spike in 2024. (Refer to the Amount Paid per Year tab.)\nInterestingly, the Police Department employs three times as many people as the Fire Department. However, when comparing total compensation, the Police Department spends only about 2.5 times what the Fire Department spends. This disparity suggests that, on average, individual salaries in the Fire Department might be higher than those in the Police Department.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-1",
    "href": "results.html#who-gets-the-money-1",
    "title": "3¬† Results",
    "section": "3.9 Who gets the Money?",
    "text": "3.9 Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\npayroll_data_fire_police |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(scaled),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                # position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\n\n\n\n\n\n\n\n\n\nCode\n# ggplot(payroll_data_fire_police) +\n#   geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n#                alpha = 0.5,\n#                # na.rm = TRUE,\n#                # trim =TRUE,\n#                # stat = \"density\",\n#                 position = \"stack\",\n#                bounds = c(-50000,300000)\n#                ) +\n#   # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n#   #                              \"Out of state\" = \"red\",\n#   #                              \"In district\" = \"cyan\")) +\n#   facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n#   scale_fill_manual(\n#     values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n#   labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n#        x = \"Tuition Fees (FT)\",\n#        y = \"Density\",\n#        # fill = \"Tuition Type\"\n#        )\n\n\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\nCode\npayroll_data_fire_police_test |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(pay_basis == \"per Annum\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#three-mountains-of-money-1",
    "href": "results.html#three-mountains-of-money-1",
    "title": "3¬† Results",
    "section": "6.2 Three Mountains of Money",
    "text": "6.2 Three Mountains of Money\n\n6.2.1 Overall Distributions\nAnalyzing the salary distributions reveals a trimodal pattern for the combined departments.\nWhen separating the distributions by agency, the Fire Department shows three distinct density peaks. The leftmost peak is higher than the middle, which in turn is higher than the right. This suggests that a larger proportion of Fire Department employees fall within the leftmost peak, earning between $110,000 and $140,000.\nIn contrast, the Police Department‚Äôs highest density peak occurs in the center mode, with most employees earning between $50,000 and $70,000.\nOverall, the Fire Department has a higher mean salary of $103,000 compared to the Police Department‚Äôs $87,000.\n\n\nCode\n# Calculate mean and sd for each agency_name\nfacet_stats &lt;- payroll_data_fire_police |&gt;\n  group_by(agency_name) |&gt;\n  summarise(\n    mean_total_paid = mean(total_paid, na.rm = TRUE),\n    sd_total_paid = sd(total_paid, na.rm = TRUE)\n  )\n\n# Create a custom function to generate a normal curve\nnormal_curve_data &lt;- function(mean, sd, x_range, n = 100) {\n  x &lt;- seq(x_range[1], x_range[2], length.out = n)\n  y &lt;- dnorm(x, mean = mean, sd = sd)\n  data.frame(x = x, y = y)\n}\n\n# Generate data for normal curves for each facet\nnormal_curve &lt;- facet_stats |&gt;\n  rowwise() |&gt;\n  mutate(\n    curve_data = list(\n      normal_curve_data(\n        mean = mean_total_paid,\n        sd = sd_total_paid,\n        x_range = c(-250000, 300000)  # Define the x-axis range\n      )\n    )\n  ) |&gt;\n  unnest(curve_data)  # Unnest the list-column into rows\n\nvertical_line_glyph &lt;- function(data, params, size) {\n  grid::linesGrob(\n    x = c(0.5, 0.5), y = c(0.1, 0.9),\n    gp = grid::gpar(col = alpha(data$colour, data$alpha), lwd = size)\n  )\n}\n\n\n\n\nchart_01 &lt;-\nggplot(payroll_data_fire_police) +\n  geom_histogram(mapping = aes(x = total_paid, \n                               y = after_stat(density), \n                               fill = \"Density Histogram\"),\n                 binwidth = 10000,\n                 color = \"blue\",\n                 linetype = \"solid\",\n                 # center = 100000,\n                 # boundary = c(-50000,10000),\n                 # bo==\n                 )+\n  geom_density(mapping = aes(x = total_paid, \n                             color = \"Density Curve\"),\n               lwd = 1.2,\n               key_glyph = draw_key_path\n               ) +\n  geom_function(fun = dnorm,\n                aes(x = total_paid, \n                    color = \"Normal Curve\"), \n                lwd= 1.2,\n                args = list(mean = mean(payroll_data_fire_police$total_paid, na.rm = TRUE),\n                            sd = sd(payroll_data_fire_police$total_paid, na.rm = TRUE)),\n                ) +\n  scale_color_manual(values = c(\"Density Curve\" = \"red\", \"Normal Curve\" = \"limegreen\")) +\n  scale_fill_manual(values = c(\"Density Histogram\" = \"lightblue\")) +\n  scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-50000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 25000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  labs(title = \"Combined Density Histogram of Salary Paid for Fire and Police Departments\",\n       x = \"Salary Paid\",\n       y = \"Density\",\n       color = \"Curves\",\n       fill = \"Bars\", \n       # caption = \"Blue: Histogram, Red: Data Density Curve, Green: Normal Curve\"\n       ) +\n  # theme_minimal() +\n  theme(text = element_text(size = 14))+\n  theme(legend.position = \"none\")\n\n\n\n\n\nchart_02 &lt;-\n# Plot\nggplot(payroll_data_fire_police) +\n  geom_histogram(\n    mapping = aes(x = total_paid, y = after_stat(density), fill = \"Density Histogram\"),\n    binwidth = 10000,\n    color = \"blue\",\n    linetype = \"solid\"\n  ) +\n  geom_density(\n    mapping = aes(x = total_paid, color = \"Density Curve\"),\n    lwd = 1.2,\n    key_glyph = draw_key_path\n  ) +\n  geom_line(\n    data = normal_curve,\n    aes(x = x, y = y, color = \"Normal Curve\"),\n    lwd = 1.2\n  ) +\n    geom_vline(\n    data = facet_stats,\n    aes(xintercept = mean_total_paid, color = \"Mean Reference Line\"),\n    linetype = \"dashed\",\n    show.legend = TRUE,key_glyph = \"path\"\n  ) +\n  geom_text(\n    data = facet_stats,\n    aes(\n      x = mean_total_paid,\n      y = 0.00001,  # Adjust position for label\n      label = scales::label_number(scale = 1 / 1000, suffix = \"k\")(mean_total_paid)\n    ),\n    inherit.aes = FALSE,\n    color = \"purple\",\n    size = 6,\n    angle = 90,  # Rotate text vertically\n    vjust = 1.5,\n    hjust = 0.6\n  ) +\n  facet_wrap(~ agency_name) +\n  # scale_color_manual(values = c(\"Density Curve\" = \"red\", \"Normal Curve\" = \"limegreen\", \"Mean Reference Line\" = \"purple\")) +\n  scale_color_manual(\n    values = c(\n      \"Density Curve\" = \"red\",\n      \"Normal Curve\" = \"limegreen\",\n      \"Mean Reference Line\" = \"purple\"\n    ),\n    guide = guide_legend(override.aes = list(\n      `Density Curve` = list(linetype = \"solid\"),\n      `Normal Curve` = list(linetype = \"solid\"),\n      `Mean Line` = list(linetype = \"solid\")\n    ))\n  ) +\n  scale_fill_manual(values = c(\"Density Histogram\" = \"lightblue\")) +\n  scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-50000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 50000),\n    labels = scales::label_number(scale = 1 / 1000, suffix = \"k\")\n  ) +\n  labs(\n    title = \"Density Histogram of Salary Paid per Agency\",\n    x = \"Salary Paid\",\n    y = \"Density\",\n    color = \"Curves\",\n    fill = \"Bars\",\n    caption = \"Salary Paid includes: Regular, Overtime and Other compensation.\"\n  ) +\n  scale_linetype_manual(name = \"Curves\", values = c(\"Horizontal\",\"solid\")) +\n            guides(fill = guide_legend(override.aes = list(linetype = 0)),\n                   # color = guide_legend(override.aes = list(linetype = c(0,4,5) ))\n                   ) +\n  # theme_minimal() +\n  theme(text = element_text(size = 14))+\n  theme(legend.position = \"bottom\")\n\n\n\n# &lt;!-- #| fig-width: 10 --&gt;\n# &lt;!-- #| fig-height: 10 --&gt;\n# &lt;!-- #| message: false --&gt;\n# &lt;!-- #| warning: false --&gt;\n\n\nchart_01 + chart_02 +\n  plot_layout(ncol = 1) \n\n\n\n\n\n\n\n\n\nCode\n  # plot_annotation(title = \"Data Distribution\")\n\n\n\n\n\n\n\n6.2.2 Isolating the Peaks\nTo separate the three salary peaks, we analyzed the following variables and their key factors:\n\nPay Basis: Per Annum, Per Hour\nEmployment Status: Active, Ceased\nYears of Experience: Time since employment began at the agency\n\nThe rightmost peak corresponds primarily to employees in the Per Annum - Ceased and Per Hour - Active categories.\nThe central and left peaks are associated with Per Annum - Active employees and are influenced by years of experience. Most employees with 0‚Äì5 years of experience earn under $100,000 (central peak). The higher density in the 5‚Äì10-year range suggests reduced hiring in recent years and strong employee retention.\nOver time, the left peak emerges around $100,000 for employees with 0‚Äì5 years of experience and gradually shifts leftward (toward higher salaries) as experience increases.\nFor employees with 15‚Äì20 years and 20+ years of experience, the Fire Department has a larger proportion in the left peak compared to the central peak, as shown by the visibly greater red area in the left peak on the stacked chart. This highlights that longer-tenured employees tend to earn higher salaries.\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test_2 &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      # years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 15 ~ \"10-15 years\",\n      years_at_agency &gt; 15 & years_at_agency &lt;= 20 ~ \"15-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"15-20 years\", \"10-15 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\nCode\npayroll_data_fire_police_test_2 |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(leave_status_as_of_june_30 %in% c(\"ACTIVE\",\"CEASED\")) |&gt;\n  filter(pay_basis %in% c(\"per Annum\",\"per Hour\")) |&gt;\n  filter(!years_band_group %in% c(NA)) |&gt;\n  # filter(pay_basis == \"per Annum\") |&gt;\n  # filter(pay_basis == \"per Hour\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n  mutate(pay_basis_and_leave = paste0(pay_basis,\" - \",leave_status_as_of_june_30)) |&gt; \n  filter(pay_basis_and_leave %in% c(\"per Annum - ACTIVE\",\"per Annum - CEASED\",\"per Hour - ACTIVE\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis_and_leave)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Salary paid per Pay Basis over years of experience\",\n       x = \"Salary Paid\",\n       y = \"Density\",\n       fill = \"Agency\",\n       caption = \"Pay Basis: per Annum, per Hour. ACTIVE and CEASED refer to the person's employment contract status.\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    limits = c(-15000, 250000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\"),\n    # expand = expansion(add = c(10, 0))\n  ) +\n  theme_light() +\n  # theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.2.3 10 Years of Salaries\nThe distribution of salaries paid shows small variations over most of the 10-year period, except for a few distinct years where notable changes occur in each agency‚Äôs density.\nFor the Fire Department, the most significant change begins in 2022. There is a noticeable increase in employees receiving higher compensation (evidenced by the curve stretching and the left peak shifting further left). Additionally, there is a surge in employees receiving lower salaries, creating a bump in the right area of the curve.\nFor the Police Department, 2024 brings a dramatic shift in the salary curve. A new bump appears on the right, representing a large number of employees earning less than $25,000. This is primarily associated with Per Annum - Ceased police officers in 2024. At the same time, the left peak shifts further left, reflecting higher compensation for some employees.\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year %in% c(2023,2024)) |&gt; \n  mutate(fiscal_year_name = as.character(fiscal_year)) |&gt; \nggplot() +\n  geom_density_ridges(mapping= aes(x = total_paid,\n                                   y = fiscal_year_name,\n                                   color = agency_name,\n                                   fill = agency_name,\n                                   ),\n                      alpha=0.15,\n                      bandwidth = 10000,\n                      # jittered_points = TRUE,\n                      # position = position_raincloud(adjust_vlines = TRUE),\n                      position = \"raincloud\",\n                      quantiles = 2, quantile_lines = TRUE,\n                      vline_width = 1, vline_color = \"darkgreen\",\n                      # point_alpha = 0.01,\n                      # point_size = 0.001,\n                      # color='deepskyblue4',\n                      rel_min_height = 0.002,\n                      ) +\n  facet_wrap(~ agency_name) +\n  # facet_grid(agency_name~pay_basis) +\n   scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  scale_y_discrete(\n    expand = expansion(add = c(0.1, 1.5)) # Add space above the highest category\n  ) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  labs(title = \"Ridgeline density plot of Salary Paid by Fiscal Year\",\n       x = \"Salary Paid\",\n       y = \"Fiscal Year\",\n       color = \"Agency\",\n       fill = \"Agency\",\n       caption = \"Salary Paid includes: Regular, Overtime and Other compensation.\\nGreen Vertical Line: Mean of each density curve.\")+\n    theme_minimal() +\n  # scale_linetype_manual(name = \"Curves\", values = c(\"Horizontal\",\"solid\")) +\n            guides(fill = guide_legend(override.aes = list(linetype = 0)))+\ntheme(\n    legend.position = \"bottom\",\n    # plot.margin = margin(t = 200, r = 5, b = 5, l = 5) # Add top margin (t = 20)\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#isolating-the-peaks-1",
    "href": "results.html#isolating-the-peaks-1",
    "title": "3¬† Results",
    "section": "6.3 Isolating the Peaks",
    "text": "6.3 Isolating the Peaks\nTo separate the three salary peaks, we analyzed the following variables and their key factors:\n\nPay Basis: Per Annum, Per Hour\nEmployment Status: Active, Ceased\nYears of Experience: Time since employment began at the agency\n\nThe rightmost peak corresponds primarily to employees in the Per Annum - Ceased and Per Hour - Active categories.\nThe central and left peaks are associated with Per Annum - Active employees and are influenced by years of experience. Most employees with 0‚Äì5 years of experience earn under $100,000 (central peak). The higher density in the 5‚Äì10-year range suggests reduced hiring in recent years and strong employee retention.\nOver time, the left peak emerges around $100,000 for employees with 0‚Äì5 years of experience and gradually shifts leftward (toward higher salaries) as experience increases.\nFor employees with 15‚Äì20 years and 20+ years of experience, the Fire Department has a larger proportion in the left peak compared to the central peak, as shown by the visibly greater red area in the left peak on the stacked chart. This highlights that longer-tenured employees tend to earn higher salaries.\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test_2 &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      # years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 15 ~ \"10-15 years\",\n      years_at_agency &gt; 15 & years_at_agency &lt;= 20 ~ \"15-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"15-20 years\", \"10-15 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\nCode\npayroll_data_fire_police_test_2 |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(leave_status_as_of_june_30 %in% c(\"ACTIVE\",\"CEASED\")) |&gt;\n  filter(pay_basis %in% c(\"per Annum\",\"per Hour\")) |&gt;\n  filter(!years_band_group %in% c(NA)) |&gt;\n  # filter(pay_basis == \"per Annum\") |&gt;\n  # filter(pay_basis == \"per Hour\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n  mutate(pay_basis_and_leave = paste0(pay_basis,\" - \",leave_status_as_of_june_30)) |&gt; \n  filter(pay_basis_and_leave %in% c(\"per Annum - ACTIVE\",\"per Annum - CEASED\",\"per Hour - ACTIVE\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis_and_leave)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Salary paid per Pay Basis over years of experience\",\n       x = \"Salary Paid\",\n       y = \"Density\",\n       fill = \"Agency\",\n       caption = \"Pay Basis: per Annum, per Hour. ACTIVE and CEASED refer to the person's employment contract status.\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    limits = c(-15000, 250000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\"),\n    # expand = expansion(add = c(10, 0))\n  ) +\n  theme_light() +\n  # theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#years-of-salaries-1",
    "href": "results.html#years-of-salaries-1",
    "title": "3¬† Results",
    "section": "6.4 10 Years of Salaries",
    "text": "6.4 10 Years of Salaries\nThe distribution of salaries paid shows small variations over most of the 10-year period, except for a few distinct years where notable changes occur in each agency‚Äôs density.\nFor the Fire Department, the most significant change begins in 2022. There is a noticeable increase in employees receiving higher compensation (evidenced by the curve stretching and the left peak shifting further left). Additionally, there is a surge in employees receiving lower salaries, creating a bump in the right area of the curve.\nFor the Police Department, 2024 brings a dramatic shift in the salary curve. A new bump appears on the right, representing a large number of employees earning less than $25,000. This is primarily associated with Per Annum - Ceased police officers in 2024. At the same time, the left peak shifts further left, reflecting higher compensation for some employees.\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year %in% c(2023,2024)) |&gt; \n  mutate(fiscal_year_name = as.character(fiscal_year)) |&gt; \nggplot() +\n  geom_density_ridges(mapping= aes(x = total_paid,\n                                   y = fiscal_year_name,\n                                   color = agency_name,\n                                   fill = agency_name,\n                                   ),\n                      alpha=0.15,\n                      bandwidth = 10000,\n                      # jittered_points = TRUE,\n                      # position = position_raincloud(adjust_vlines = TRUE),\n                      position = \"raincloud\",\n                      quantiles = 2, quantile_lines = TRUE,\n                      vline_width = 1, vline_color = \"darkgreen\",\n                      # point_alpha = 0.01,\n                      # point_size = 0.001,\n                      # color='deepskyblue4',\n                      rel_min_height = 0.002,\n                      ) +\n  facet_wrap(~ agency_name) +\n  # facet_grid(agency_name~pay_basis) +\n   scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  scale_y_discrete(\n    expand = expansion(add = c(0.1, 1.5)) # Add space above the highest category\n  ) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  labs(title = \"Ridgeline density plot of Salary Paid by Fiscal Year\",\n       x = \"Salary Paid\",\n       y = \"Fiscal Year\",\n       color = \"Agency\",\n       fill = \"Agency\",\n       caption = \"Salary Paid includes: Regular, Overtime and Other compensation.\\nGreen Vertical Line: Mean of each density curve.\")+\n    theme_minimal() +\n  # scale_linetype_manual(name = \"Curves\", values = c(\"Horizontal\",\"solid\")) +\n            guides(fill = guide_legend(override.aes = list(linetype = 0)))+\ntheme(\n    legend.position = \"bottom\",\n    # plot.margin = margin(t = 200, r = 5, b = 5, l = 5) # Add top margin (t = 20)\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-2",
    "href": "results.html#who-gets-the-money-2",
    "title": "3¬† Results",
    "section": "3.10 4-Who gets the Money?",
    "text": "3.10 4-Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\nggplot(payroll_data_fire_police) +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough))\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.7,\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.006, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Boxplot with jitter of Salary Paid over 10 years by Agency\",\n       x = \"Salary Paid\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-3",
    "href": "results.html#who-gets-the-money-3",
    "title": "3¬† Results",
    "section": "3.9 4-Who gets the Money?",
    "text": "3.9 4-Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\nggplot(payroll_data_fire_police) +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough))\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.7,\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.006, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Boxplot with jitter of Salary Paid over 10 years by Agency\",\n       x = \"Salary Paid\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-4",
    "href": "results.html#who-gets-the-money-4",
    "title": "3¬† Results",
    "section": "6.9 4-Who gets the Money?",
    "text": "6.9 4-Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\nggplot(payroll_data_fire_police) +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough))\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.7,\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.006, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Boxplot with jitter of Salary Paid over 10 years by Agency\",\n       x = \"Salary Paid\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-5",
    "href": "results.html#who-gets-the-money-5",
    "title": "3¬† Results",
    "section": "6.9 4-Who gets the Money?",
    "text": "6.9 4-Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\nggplot(payroll_data_fire_police) +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough))\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.7,\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.006, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Boxplot with jitter of Salary Paid over 10 years by Agency\",\n       x = \"Salary Paid\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-6",
    "href": "results.html#who-gets-the-money-6",
    "title": "3¬† Results",
    "section": "6.9 4-Who gets the Money?",
    "text": "6.9 4-Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\nggplot(payroll_data_fire_police) +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough))\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.7,\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.006, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Boxplot with jitter of Salary Paid over 10 years by Agency\",\n       x = \"Salary Paid\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-7",
    "href": "results.html#who-gets-the-money-7",
    "title": "3¬† Results",
    "section": "6.11 Who gets the Money?",
    "text": "6.11 Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\npayroll_data_fire_police |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(scaled),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                # position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\n\n\n\n\n\n\n\n\n\nCode\n# ggplot(payroll_data_fire_police) +\n#   geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n#                alpha = 0.5,\n#                # na.rm = TRUE,\n#                # trim =TRUE,\n#                # stat = \"density\",\n#                 position = \"stack\",\n#                bounds = c(-50000,300000)\n#                ) +\n#   # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n#   #                              \"Out of state\" = \"red\",\n#   #                              \"In district\" = \"cyan\")) +\n#   facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n#   scale_fill_manual(\n#     values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n#   labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n#        x = \"Tuition Fees (FT)\",\n#        y = \"Density\",\n#        # fill = \"Tuition Type\"\n#        )\n\n\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\nCode\npayroll_data_fire_police_test |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(pay_basis == \"per Annum\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money-8",
    "href": "results.html#who-gets-the-money-8",
    "title": "3¬† Results",
    "section": "6.11 Who gets the Money?",
    "text": "6.11 Who gets the Money?\nLorem ipsum odor amet, consectetuer adipiscing elit. Finibus et dictum egestas scelerisque gravida turpis. Morbi ligula condimentum pulvinar; augue justo lobortis. Class enim nullam parturient montes a porttitor gravida ante dignissim. Congue efficitur curabitur euismod id dolor phasellus.\nMetus tempus nulla in vestibulum iaculis interdum; porta eleifend praesent. Iaculis porttitor adipiscing augue ullamcorper placerat. Pulvinar quam scelerisque ex sem nascetur sit ipsum eros. Magnis luctus facilisis justo massa mauris dictumst. Nibh sollicitudin malesuada vitae maximus cras lacus.\n\n\nCode\npayroll_data_fire_police |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(scaled),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                # position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\n\n\n\n\n\n\n\n\n\nCode\n# ggplot(payroll_data_fire_police) +\n#   geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n#                alpha = 0.5,\n#                # na.rm = TRUE,\n#                # trim =TRUE,\n#                # stat = \"density\",\n#                 position = \"stack\",\n#                bounds = c(-50000,300000)\n#                ) +\n#   # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n#   #                              \"Out of state\" = \"red\",\n#   #                              \"In district\" = \"cyan\")) +\n#   facet_grid(leave_status_as_of_june_30 ~ pay_basis)+\n#   scale_fill_manual(\n#     values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n#   labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n#        x = \"Tuition Fees (FT)\",\n#        y = \"Density\",\n#        # fill = \"Tuition Type\"\n#        )\n\n\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\nCode\npayroll_data_fire_police_test |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(pay_basis == \"per Annum\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Separate Density Plots of Tuition Fees by Tuition Type and Level of Study\",\n       x = \"Tuition Fees (FT)\",\n       y = \"Density\",\n       # fill = \"Tuition Type\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  theme_light() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\nWarning: Some data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.\nSome data points are outside of `bounds`. Removing them.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "4.1 Hiring Over Time\nThis section explores the hiring history of NYC‚Äôs Fire and Police Departments over the past 10 years. The interactive chart below visualizes the number of unique job positions hired each month. Each position is represented by a dot, with the size of the dot reflecting the number of employees hired for that role.\nCount of job titles per month, with each dot representing a position and dot size reflecting the number of employees hired.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#who-gets-the-money",
    "href": "d3graph.html#who-gets-the-money",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "something1\n\nAdd bar Remove bar\n\n\n\nsomething2\n\nAdd bar Remove bar",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5¬† Conclusion",
    "section": "",
    "text": "The analysis of payroll data for NYC‚Äôs Fire and Police Departments highlights notable differences in employee distribution and compensation patterns. While the Police Department employs three times as many staff as the Fire Department, its total salary expenditure is only 2.5 times higher, suggesting that Fire Department employees, on average, receive higher pay.\nEmployment and salary trends also vary by location, with Manhattan hosting the majority of Police employees and Brooklyn leading in Fire Department staff. Salary progression aligns closely with years of experience, with employees earning higher compensation as their tenure increases. Among those earning over $250K, the compensation structure varies significantly, with Overtime and Other pay contributing substantially to total earnings.\nFuture research should revisit the Police Department‚Äôs compensation for 2024, which shows an unusually high surge in total salaries. This anomaly appears inconsistent with the 2024 budget plans provided by the New York City Council and warrants deeper investigation.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#alluvium",
    "href": "conclusion.html#alluvium",
    "title": "5¬† Conclusion",
    "section": "7.1 alluvium",
    "text": "7.1 alluvium\n\n\nCode\nlibrary(ggplot2)\nlibrary(ggalluvial)\n\n\n\n\nCode\npayroll_data_fire_police_pay_range &lt;-\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == 2024) |&gt;\n  filter(agency_start_date_year == 2009) |&gt;\n  filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt; \n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\"))\n  filter(title_description %in% c(\"CAPTAIN\")) |&gt;\n  select(last_name, leave_status_as_of_june_30, title_description,regular_gross_paid,total_ot_paid,total_other_pay,total_paid) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    regular_gross_paid_group = cut(\n      regular_gross_paid,\n      breaks = seq(\n        floor(min(regular_gross_paid, na.rm = TRUE) / 50000) * 50000, \n        ceiling(max(regular_gross_paid, na.rm = TRUE) / 50000) * 50000,\n        by = 50000\n      ),\n      labels = paste0(\n        seq(\n          floor(min(regular_gross_paid, na.rm = TRUE) / 50000) * 50000, \n          ceiling(max(regular_gross_paid, na.rm = TRUE) / 50000 - 1) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(regular_gross_paid, na.rm = TRUE) / 50000) * 50000 + 50000, \n          ceiling(max(regular_gross_paid, na.rm = TRUE) / 50000) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_ot_paid_group = cut(\n      total_ot_paid,\n      breaks = seq(\n        floor(min(total_ot_paid, na.rm = TRUE) / 50000) * 50000, \n        ceiling(max(total_ot_paid, na.rm = TRUE) / 50000) * 50000,\n        by = 50000\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_ot_paid, na.rm = TRUE) / 50000) * 50000, \n          ceiling(max(total_ot_paid, na.rm = TRUE) / 50000 - 1) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_ot_paid, na.rm = TRUE) / 50000) * 50000 + 50000, \n          ceiling(max(total_ot_paid, na.rm = TRUE) / 50000) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_other_pay_group = cut(\n      total_other_pay,\n      breaks = seq(\n        floor(min(total_other_pay, na.rm = TRUE) / 50000) * 50000, \n        ceiling(max(total_other_pay, na.rm = TRUE) / 50000) * 50000,\n        by = 50000\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_other_pay, na.rm = TRUE) / 50000) * 50000, \n          ceiling(max(total_other_pay, na.rm = TRUE) / 50000 - 1) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_other_pay, na.rm = TRUE) / 50000) * 50000 + 50000, \n          ceiling(max(total_other_pay, na.rm = TRUE) / 50000) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / 50000) * 50000, \n        ceiling(max(total_paid, na.rm = TRUE) / 50000) * 50000,\n        by = 50000\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / 50000) * 50000, \n          ceiling(max(total_paid, na.rm = TRUE) / 50000 - 1) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / 50000) * 50000 + 50000, \n          ceiling(max(total_paid, na.rm = TRUE) / 50000) * 50000,\n          by = 50000\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  # mutate(\n  #   regular_gross_paid_group = factor(\n  #     regular_gross_paid_group,\n  #     levels = rev(sort(unique(regular_gross_paid_group))) # Explicit descending order\n  #   ),\n  #   total_paid_group = factor(\n  #     total_paid_group,\n  #     levels = rev(sort(unique(total_paid_group))) # Explicit descending order\n  #   )\n  # )|&gt; \n  arrange(total_paid)\n\n\n\n\nCode\nlevels(payroll_data_fire_police_pay_range$regular_gross_paid_group)\n\n\n[1] \"100k-150k\" \"150k-200k\"\n\n\nCode\nlevels(payroll_data_fire_police_pay_range$total_paid_group)\n\n\n[1] \"150k-200k\" \"200k-250k\"\n\n\n\n\nCode\nggplot(payroll_data_fire_police_pay_range,\n       aes(axis1 = total_paid_group, \n           axis2 = regular_gross_paid_group,\n           axis3 = total_ot_paid_group,\n           axis4 = total_other_pay_group,\n           )) +\n  geom_alluvium(aes(fill = total_paid_group), alpha = 0.8) +\n  geom_stratum(aes(fill = total_paid_group)) +\n  geom_text(stat = \"stratum\", \n            aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count))), \n            size = 3, \n            hjust = 0.5) +\n  # scale_x_discrete(\n  #   limits = c(\"regular_gross_paid_group\", \"total_paid_group\"),\n  #   labels = c(\"regular_gross_paid_group\", \"total_paid_group\")\n  # ) +\n  scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n  labs(title = \"Student Performance on Three Essays with GPA\",\n       x = \"Essays and GPA\",\n       y = \"Number of Students\",\n       fill = \"GPA\") +\n  theme_minimal()\n\n\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\nWarning in to_lodes_form(data = data, axes = axis_ind, discern =\nparams$discern): Some strata appear at multiple axes.\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police_pay_range &lt;- payroll_data_fire_police_pay_range |&gt; \n  # mutate(across(where(is.character), ~ factor(., levels = rev(sort(unique(.))))))\n  mutate(across(where(is.factor), ~ factor(., levels = rev(sort(unique(.))))))\n\n\nlevels(payroll_data_fire_police_pay_range$regular_gross_paid_group)\n\n\n[1] \"150k-200k\" \"100k-150k\"\n\n\nCode\nlevels(payroll_data_fire_police_pay_range$total_ot_paid_group)\n\n\n[1] \"0k-50k\"\n\n\nCode\nlevels(payroll_data_fire_police_pay_range$total_other_pay_group)\n\n\n[1] \"0k-50k\"\n\n\nCode\nlevels(payroll_data_fire_police_pay_range$total_paid_group)\n\n\n[1] \"200k-250k\" \"150k-200k\"\n\n\nCode\n# [1] \"Harriman\"  \"Hudson\"    \"Riverside\" \"Watson\"\n\n\n\n\nCode\n# Frequency Table:\n\npayroll_data_fire_police_pay_range_frequency &lt;- \n  payroll_data_fire_police_pay_range |&gt; \n  select(regular_gross_paid_group,total_ot_paid_group,total_other_pay_group,total_paid_group) |&gt; \n  group_by(across(everything())) |&gt; \n  summarise(frequency = n(), .groups = 'drop')\n\n\n\n\nCode\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:4)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        labels = c(\"Essay 1\",\n                                                   \"Essay 2\", \n                                                   \"Essay 3\",\n                                                   \"Total\"))\nessay_grades_frequency_lode$stratum &lt;- factor(\n  essay_grades_frequency_lode$stratum,\n  levels = names(sort(setNames(\n    as.numeric(gsub(\"k\", \"\", gsub(\"\\\\D\", \"\", levels(essay_grades_frequency_lode$stratum)))),\n    levels(essay_grades_frequency_lode$stratum)\n  ), decreasing = TRUE))\n)\n\n\n\n\nCode\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:3)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        labels = c(\"Essay 1\",\n                                                   \"Essay 2\", \n                                                   \"Essay 3\"))\n\n\n\n\nCode\nggplot(essay_grades_frequency_lode, \n       aes(alluvium=alluvium, x=x, stratum=stratum, y=frequency)) +\n  # geom_flow() +\n  geom_alluvium(decreasing = TRUE)+\n  geom_alluvium(aes(fill = stratum),color=\"#000000\") +\n  # geom_lode() +\n  geom_stratum(color = \"#00509d\", \n               fill='white', \n               linewidth = 1.5, \n               aes(fill = NA), \n               alpha = 0.5) +\n  geom_text(stat = \"stratum\", \n            aes(label = paste(after_stat(stratum),\"\\n\" ,after_stat(count))),\n            hjust = 0.5\n            ) +\n  labs(title = \"Student Performance on the Three Essays\",\n       x = \"Essays\",\n       y = \"Number of Students\",\n       fill=\"Section\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")\n\n\nWarning in setup_data(...): Some differentiation aesthetics vary within alluvia, and will be diffused by their first value.\nConsider using `geom_flow()` instead.\n\n\n\n\n\n\n\n\n\n\n\nCode\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:4)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        labels = c(\"Essay 1\",\n                                                   \"Essay 2\", \n                                                   \"Essay 3\",\n                                                   \"Total\"))\n\n\n\n\nCode\nlevels(essay_grades_frequency_lode$stratum)\n\n\n[1] \"150k-200k\" \"100k-150k\" \"0k-50k\"    \"200k-250k\"\n\n\n\n\nCode\n# ggplot(essay_grades_frequency_lode, \n#        aes(alluvium=alluvium, \n#            x= x,\n#            axis1 = regular_gross_paid_group, \n#            # axis2 = regular_gross_paid_group,\n#            # axis3 = total_ot_paid_group,\n#            # axis4 = total_other_pay_group, \n#            stratum=stratum, \n#            y=frequency)) +\n#   geom_flow() +\n#   # geom_alluvium(decreasing = TRUE)+\n#   geom_alluvium(aes(fill = stratum), alpha = 0.8) +\n#   # geom_lode() +\n#   # geom_stratum(color = \"#00509d\", \n#   #              fill='white', \n#   #              linewidth = 1.5, \n#   #              aes(fill = NA), \n#   #              alpha = 0.5) +\n#   # geom_stratum(aes(fill = stratum)) +\n#   geom_text(stat = \"stratum\", \n#             aes(label = paste(after_stat(stratum),\"\\n\" ,after_stat(count))),\n#             hjust = 0.5\n#             ) +\n#   scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n#   labs(title = \"Student Performance on the Three Essays\",\n#        x = \"Essays\",\n#        y = \"Number of Students\",\n#        fill=\"Section\") +\n#   theme_minimal() +\n#   theme(legend.position = \"bottom\")\n\n# \n# \n# ggplot(payroll_data_fire_police_pay_range,\n#        aes(axis1 = total_paid_group, \n#            axis2 = regular_gross_paid_group,\n#            axis3 = total_ot_paid_group,\n#            axis4 = total_other_pay_group,\n#            )) +\n#   geom_alluvium(aes(fill = total_paid_group), alpha = 0.8) +\n#   geom_stratum(aes(fill = total_paid_group)) +\n#   geom_text(stat = \"stratum\", \n#             aes(label = paste(after_stat(stratum), \"\\n\", after_stat(count))), \n#             size = 3, \n#             hjust = 0.5) +\n#   # scale_x_discrete(\n#   #   limits = c(\"regular_gross_paid_group\", \"total_paid_group\"),\n#   #   labels = c(\"regular_gross_paid_group\", \"total_paid_group\")\n#   # ) +\n#   scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n#   labs(title = \"Student Performance on Three Essays with GPA\",\n#        x = \"Essays and GPA\",\n#        y = \"Number of Students\",\n#        fill = \"GPA\") +\n#   theme_minimal()\n# \n\n\n\n\nCode\npayroll_data_fire_police_pay_range_frequency &lt;-\n  payroll_data_fire_police_pay_range_frequency |&gt; \n  mutate(total_paid_group_fill = total_paid_group)\n\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:4)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        labels = c(1,2,3,\n                                                   \"Total\"))\nessay_grades_frequency_lode$stratum &lt;- factor(\n  essay_grades_frequency_lode$stratum,\n  levels = names(sort(setNames(\n    as.numeric(gsub(\"k\", \"\", gsub(\"\\\\D\", \"\", levels(essay_grades_frequency_lode$stratum)))),\n    levels(essay_grades_frequency_lode$stratum)\n  ), decreasing = TRUE))\n)\n\n\n\n\nCode\nggplot(essay_grades_frequency_lode, \n       aes(alluvium=alluvium, x=x, stratum=stratum, y=frequency)) +\n  geom_flow() +\n  # geom_alluvium(decreasing = TRUE)+\n  geom_alluvium(aes(fill = total_paid_group_fill), alpha = 0.8) +\n  # geom_lode() +\n  # geom_stratum(color = \"#00509d\", \n  #              fill='white', \n  #              linewidth = 1.5, \n  #              aes(fill = NA), \n  #              alpha = 0.5) +\n  geom_stratum(aes(fill = total_paid_group_fill)) +\n  geom_text(stat = \"stratum\", \n            aes(label = paste(after_stat(stratum),\"\\n\" ,after_stat(count))),\n            hjust = 0.5\n            ) +\n  scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n  labs(title = \"Student Performance on the Three Essays\",\n       x = \"Essays\",\n       y = \"Number of Students\",\n       fill=\"Section\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "6¬† Appendix",
    "section": "",
    "text": "6.1 Creating the subset data\nIn this section, we will explore the decision-making process for selecting a subset of the data and the detailed transformation the original dataset with 6,225,611 rows to our final dataset with 804,630 rows.\nCode\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming Columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming Columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#importing-the-data",
    "href": "appendix.html#importing-the-data",
    "title": "6¬† Appendix",
    "section": "6.2 Importing the data",
    "text": "6.2 Importing the data\nTo access the data, we can go directly to the URL:\n\n\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\n\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv\n\n\n(YYYYMMDD refers to the date that you downloaded the file)\n\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\n\n\nCode\n# import original data\npayroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\") \n\n# make a copy of original data for transformations\npayroll_data &lt;- data.frame(payroll_data_source)\n\n# rename columns\nnames(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#understanding-and-cleaning-the-raw-data",
    "href": "appendix.html#understanding-and-cleaning-the-raw-data",
    "title": "6¬† Appendix",
    "section": "6.3 Understanding and cleaning the raw data",
    "text": "6.3 Understanding and cleaning the raw data\nStarting with the original data (6.22 million rows). This is quick summary of how many categories we have in each column:\n\n\nCode\npayroll_data |&gt; \n  summarise(\n    \"Number of Agencies\"     = n_distinct(agency_name),\n    \"Number of Titles\"       = n_distinct(title_description),\n    \"Number of Locations\"    = n_distinct(work_location_borough),\n    \"Number of Pay Basis\"    = n_distinct(pay_basis),\n    \"Number of Fiscal Years\" = n_distinct(fiscal_year)\n  ) |&gt; \n  kable()\n\n\n\n\n\n\n\n\n\n\n\n\nNumber of Agencies\nNumber of Titles\nNumber of Locations\nNumber of Pay Basis\nNumber of Fiscal Years\n\n\n\n\n170\n1991\n23\n4\n11\n\n\n\n\n\n\n\n\n\n6.3.1 Agencies\nMany of the agencies in the raw data have the following format: AGENCY_NAME #NUMBER.\nExamples:\n\n\n\nBROOKLYN COMMUNITY BOARD #1\nBROOKLYN COMMUNITY BOARD #2\nBROOKLYN COMMUNITY BOARD #3\n\n\nWe will group Agency names by aggregating all agencies that have the same name, but different numbers. This will reduce overall number os agencies.\n\n\nCode\npayroll_data &lt;- \n  payroll_data |&gt; \n  mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name)))\n\npayroll_data |&gt; \n  summarise(\n    \"Number of Agencies Before\" = n_distinct(agency_name),\n    \"Number of Agencies After\"  = n_distinct(agency_name_clean),\n  ) |&gt; \n  kable()\n\n\n\n\n\nNumber of Agencies Before\nNumber of Agencies After\n\n\n\n\n170\n116\n\n\n\n\n\n\nNow, let‚Äôs take a look at the top 10 Agencies:\n\n\nCode\npayroll_data_summary &lt;- payroll_data |&gt; \n  group_by(agency_name_clean) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt; \n  slice_head(n = 10)  \n\n\npayroll_data_summary |&gt; \n  kable(col.names = c(\"Agency\", \"Total Records\")) |&gt; \n  row_spec(which(payroll_data_summary$agency_name_clean == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_summary$agency_name_clean == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nTotal Records\n\n\n\n\nDEPT OF ED PEDAGOGICAL\n1207427\n\n\nDEPT OF ED PER SESSION TEACHER\n997983\n\n\nPOLICE DEPARTMENT\n612076\n\n\nDEPT OF ED PARA PROFESSIONALS\n412698\n\n\nBOARD OF ELECTION POLL WORKERS\n375001\n\n\nDEPT OF ED HRLY SUPPORT STAFF\n255501\n\n\nFIRE DEPARTMENT\n209272\n\n\nDEPARTMENT OF EDUCATION ADMIN\n181282\n\n\nDEPT OF PARKS & RECREATION\n170200\n\n\nHRA/DEPT OF SOCIAL SERVICES\n157963\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.2 Work Location Borough\nWhen looking at the Work Location Borough, we see many recording with missing data (506,234 rows). We can also observe that the names of the locations are not standardized, some names are Uppercase and some are not (MANHATTAN vs Manhattan).\n\n\nCode\npayroll_data |&gt; \n  group_by(work_location_borough) |&gt; \n  summarise(\n    Total_records = n()\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt; \n  slice_head(n = 10) |&gt; \n  kable(col.names = c(\"Locations\", \"Total Records\")) |&gt; \n  row_spec(which(payroll_data |&gt; \n                 group_by(work_location_borough) |&gt; \n                 summarise(Total_records = n()) |&gt; \n                 arrange(desc(Total_records)) |&gt; \n                 slice_head(n = 10) |&gt; \n                 pull(work_location_borough) %in% c(\"\",\"Bronx\", \"MANHATTAN\", \"Manhattan\")),   background = \"#fcefb4\", color = \"black\")\n\n\n\n\n\nLocations\nTotal Records\n\n\n\n\nMANHATTAN\n4077947\n\n\nQUEENS\n621225\n\n\nBROOKLYN\n523572\n\n\n\n506234\n\n\nBRONX\n286551\n\n\nOTHER\n116918\n\n\nRICHMOND\n77020\n\n\nWESTCHESTER\n5653\n\n\nULSTER\n3245\n\n\nManhattan\n1622\n\n\n\n\n\n\n\n\nOur first step here is to capitalize all the location names.\n\n\nCode\npayroll_data &lt;- payroll_data |&gt; \n  mutate(work_location_borough_clean = toupper(work_location_borough))\n\npayroll_data |&gt; \n  summarise(\n    \"Number of Locations Before\" = n_distinct(work_location_borough),\n    \"Number of Locations After\"  = n_distinct(work_location_borough_clean),\n  ) |&gt; \n  kable()\n\n\n\n\n\nNumber of Locations Before\nNumber of Locations After\n\n\n\n\n23\n19\n\n\n\n\n\n\nThe main 5 locations of this dataset are: BRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND\nUsing the top 10 agencies that we found previously, we will keep all the agencies that have at least data for all 5 locations:\n\n\nCode\nrequired_boroughs &lt;- c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")\n\nagencies_present_in_required_boroughs &lt;-\n  payroll_data |&gt;\n  filter(work_location_borough_clean %in% required_boroughs) |&gt; \n  group_by(agency_name_clean) |&gt;  \n  summarise(\n    borough_count = n_distinct(work_location_borough_clean)  \n  ) |&gt;\n  filter(borough_count == length(required_boroughs)) |&gt; \n  filter(agency_name_clean %in% payroll_data_summary$agency_name_clean) |&gt; \n  pull(agency_name_clean)\n\n\npayroll_data_agencies_present_in_required_boroughs &lt;-\n  payroll_data |&gt; \n  filter(agency_name_clean %in% payroll_data_summary$agency_name_clean) |&gt; \n  filter(agency_name_clean %in% agencies_present_in_required_boroughs) |&gt; \n  group_by(agency_name_clean) |&gt; \n  summarise(\n    Total_records = n(),\n    \"Number of Locations\" = n_distinct(work_location_borough_clean)\n  ) |&gt; \n  arrange(desc(Total_records)) \n\npayroll_data_agencies_present_in_required_boroughs |&gt; \n  kable(col.names = c(\"Agency\", \"Total Records\", \"Number of Locations\")) |&gt; \n  row_spec(which(payroll_data_agencies_present_in_required_boroughs$agency_name_clean == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_agencies_present_in_required_boroughs$agency_name_clean == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nTotal Records\nNumber of Locations\n\n\n\n\nPOLICE DEPARTMENT\n612076\n5\n\n\nFIRE DEPARTMENT\n209272\n7\n\n\nDEPARTMENT OF EDUCATION ADMIN\n181282\n12\n\n\nDEPT OF PARKS & RECREATION\n170200\n7\n\n\nHRA/DEPT OF SOCIAL SERVICES\n157963\n8\n\n\n\n\n\n\n\n\nSince we are interested in the POLICE and FIRE departments, let‚Äôs take a closer look at the FIRE DEPARTMENT since it contains 7 locations. Based on these results, we have 1 record with location OTHER and 16555 with Blank location.\n\n\nCode\npayroll_data |&gt; \n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n  filter(agency_name_clean %in% agencies_present_in_required_boroughs) |&gt; \n  group_by(agency_name_clean,work_location_borough_clean,fiscal_year) |&gt; \n  summarise(\n    Total_records = n(), .groups = 'drop'\n  ) |&gt; \n  arrange(agency_name_clean,work_location_borough_clean,fiscal_year) |&gt; \n  filter (!work_location_borough_clean %in% required_boroughs) |&gt; \n  kable(col.names = c(\"Agency\", \"Location\", \"Fiscal Year\", \"Total Records\"))\n\n\n\n\n\nAgency\nLocation\nFiscal Year\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\n\n2014\n16555\n\n\nFIRE DEPARTMENT\nOTHER\n2022\n1\n\n\n\n\n\n\nThe final decision for location is to keep only data for the major 5 locations:\nBRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND.\n\n\n\n\n\n6.3.3 Fiscal Year\nUsing only the FIRE and POLICE department, we can observe that we have no records for 2014 for the Police department. Please note that the 16555 in the FIRE department for 2014 are the same records with blank location we found before.\nThe final decision for Fiscal Year is to drop 2014 and keep only data from 2015 to 2024.\n\n\nCode\n# Create the pivot table\npivot_table_fiscal_year &lt;- payroll_data |&gt;\nfilter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  group_by(fiscal_year, agency_name_clean) |&gt; \n  summarise(count = n(), .groups = 'drop') |&gt; \n  pivot_wider(\n    names_from = agency_name_clean,  \n    values_from = count,  \n    values_fill = list(count = 0) \n  )\n\npivot_table_fiscal_year |&gt;\n  kable(col.names = c(\"Fiscal Year\", \"FIRE DEPARTMENT\", \"POLICE DEPARTMENT\")) |&gt; \n  kable_styling() |&gt;\n  column_spec(3, background = ifelse(as.matrix(pivot_table_fiscal_year[, 3]) == 0, \"#fcefb4\", \"\"))\n\n\n\n\n\nFiscal Year\nFIRE DEPARTMENT\nPOLICE DEPARTMENT\n\n\n\n\n2014\n16555\n0\n\n\n2015\n17380\n59264\n\n\n2016\n19934\n65868\n\n\n2017\n18687\n62516\n\n\n2018\n18391\n59811\n\n\n2019\n18679\n59970\n\n\n2020\n19193\n60316\n\n\n2021\n19049\n59009\n\n\n2022\n20920\n60804\n\n\n2023\n19072\n58617\n\n\n2024\n21412\n65901\n\n\n\n\n\n\n\n\n\n\n\n\n6.3.4 Pay Basis\nBased on the different types of pay basis, we will drop the Prorated Annual as it is the category with the lowest amount of records and it only affects 1 job title (Chaplain).\nThe final decision for Pay Basis is to keep only data for the categories:\nper Annum, per Day, per Hour.\n\n\nCode\npayroll_data |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  group_by(agency_name_clean,pay_basis) |&gt; \n  summarise(\n    Total_records = n(),\n    Count_of_titles = n_distinct(title_description)\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(desc(Total_records)) |&gt;\n  kable(col.names = c(\"Agency\", \"Pay Basis\", \"Total Records\", \"Count of Titles\"))\n\n\n\n\n\nAgency\nPay Basis\nTotal Records\nCount of Titles\n\n\n\n\nPOLICE DEPARTMENT\nper Annum\n573429\n286\n\n\nFIRE DEPARTMENT\nper Annum\n203929\n199\n\n\nPOLICE DEPARTMENT\nper Hour\n32769\n29\n\n\nPOLICE DEPARTMENT\nper Day\n5794\n39\n\n\nFIRE DEPARTMENT\nper Day\n3934\n35\n\n\nFIRE DEPARTMENT\nper Hour\n1324\n47\n\n\nFIRE DEPARTMENT\nProrated Annual\n85\n1\n\n\nPOLICE DEPARTMENT\nProrated Annual\n84\n1\n\n\n\n\n\nCode\npayroll_data |&gt; \n  # filter(fiscal_year == \"2024\") |&gt;\n  filter(agency_name_clean %in%  c(\n    \"POLICE DEPARTMENT\",\n    \"FIRE DEPARTMENT\"\n    )) |&gt; \n  filter(pay_basis == \"Prorated Annual\") |&gt;\n  filter(title_description == \"CHAPLAIN\") |&gt; \n  group_by(agency_name_clean,pay_basis,title_description) |&gt; \n  summarise(\n    Total_records = n()\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(agency_name_clean) |&gt;\n  kable(col.names = c(\"Agency\", \"Pay Basis\", \"Title\", \"Total Records\"))\n\n\n\n\n\nAgency\nPay Basis\nTitle\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\nProrated Annual\nCHAPLAIN\n85\n\n\nPOLICE DEPARTMENT\nProrated Annual\nCHAPLAIN\n84\n\n\n\n\n\n\n\n\n\n\n6.3.5 Payroll Number\nFirst let‚Äôs start create a dataset filtered based on the criteria we discussed above:\n\n\n\nAgency (‚ÄúPOLICE DEPARTMENT‚Äù,‚ÄúFIRE DEPARTMENT‚Äù)\nLocation (‚ÄúBRONX‚Äù, ‚ÄúBROOKLYN‚Äù, ‚ÄúMANHATTAN‚Äù, ‚ÄúQUEENS‚Äù, ‚ÄúRICHMOND‚Äù),\nFiscal Year (2015-2024)\nPay Basis (‚Äúper Annum‚Äù, ‚Äúper Day‚Äù, ‚Äúper Hour‚Äù)\n\n\nFrom this dataset, we still have 243,601 NA records for the column `Payroll Number‚Äô. By doing a group by analysis per fiscal year, we can observe the NA are related to the years 2015, 2016, and 2017. So we will backfill those years with the proper payroll number code based on each agency. This way we will no longer have NA values in the new dataset.\n\n\nCode\npayroll_data_filtered &lt;- \n  payroll_data |&gt; \n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt; \n  filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt; \n  filter(fiscal_year &gt; \"2014\") |&gt; \n  filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\"))\n\n\n# Count NA values\nna_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(is.na(.)))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"NA Count\"\n  )\n\n# Count blank values\nblank_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(. == \"\", na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Blank Count\"\n  )\n\n# Count zero values\nzero_summary &lt;- payroll_data_filtered |&gt;\n  summarise(across(everything(), ~ sum(. == 0, na.rm = TRUE))) |&gt;\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Column\",\n    values_to = \"Zero Count\"\n  )\n\n\ncombined_summary &lt;- na_summary |&gt;\n  inner_join(blank_summary, by = \"Column\") |&gt;\n  inner_join(zero_summary, by = \"Column\")\n\n# combined_summary |&gt;\n#   filter(`NA Count` &gt; 0 | `Blank Count` &gt; 0 | `Zero Count` &gt; 0) |&gt; \n#   kable(col.names = c(\"Column\", \"NA Count\", \"Blank Count\", \"Zero Count\"))\n\nna_summary |&gt; \n  filter(`NA Count` &gt; 0) |&gt; \n  kable(col.names = c(\"Column\", \"NA Count\"))\n\n\n\n\n\nColumn\nNA Count\n\n\n\n\npayroll_number\n243601\n\n\n\n\n\n\n\nCode\npayroll_data_filtered_payroll &lt;- payroll_data_filtered |&gt; \n  group_by(agency_name_clean,payroll_number,fiscal_year) |&gt; \n  summarise(\n    Total_records = n()\n    ,.groups = \"drop\"\n  ) |&gt; \n  arrange(agency_name_clean,fiscal_year,desc(Total_records))\n\npayroll_data_filtered_payroll |&gt; \n  kable(col.names = c(\"Agency\", \"Payroll Number\", \"Fiscal Year\", \"Total Records\")) |&gt;\n  column_spec(2, background = ifelse(is.na(as.matrix(payroll_data_filtered_payroll[, 2])), \"#fcefb4\", \"\"))\n\n\n\n\n\nAgency\nPayroll Number\nFiscal Year\nTotal Records\n\n\n\n\nFIRE DEPARTMENT\nNA\n2015\n17372\n\n\nFIRE DEPARTMENT\nNA\n2016\n19926\n\n\nFIRE DEPARTMENT\nNA\n2017\n18679\n\n\nFIRE DEPARTMENT\n57\n2018\n18383\n\n\nFIRE DEPARTMENT\n57\n2019\n18671\n\n\nFIRE DEPARTMENT\n57\n2020\n19186\n\n\nFIRE DEPARTMENT\n57\n2021\n19042\n\n\nFIRE DEPARTMENT\n57\n2022\n20911\n\n\nFIRE DEPARTMENT\n57\n2023\n19063\n\n\nFIRE DEPARTMENT\n57\n2024\n21405\n\n\nPOLICE DEPARTMENT\nNA\n2015\n59257\n\n\nPOLICE DEPARTMENT\nNA\n2016\n65860\n\n\nPOLICE DEPARTMENT\nNA\n2017\n62507\n\n\nPOLICE DEPARTMENT\n56\n2018\n59802\n\n\nPOLICE DEPARTMENT\n56\n2019\n59961\n\n\nPOLICE DEPARTMENT\n56\n2020\n60308\n\n\nPOLICE DEPARTMENT\n56\n2021\n59001\n\n\nPOLICE DEPARTMENT\n56\n2022\n60795\n\n\nPOLICE DEPARTMENT\n56\n2023\n58608\n\n\nPOLICE DEPARTMENT\n56\n2024\n65893\n\n\n\n\n\n\n\n\n\nCode\n# Backfill NA values with the proper payroll number based on each agency\npayroll_data_filtered &lt;- \n  payroll_data_filtered |&gt;\n  mutate(\n    payroll_number_clean = case_when(\n      is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n      is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n      TRUE ~ payroll_number\n    )\n  ) \n\n\n\n\n\n\n\n6.3.6 Agency Start Date\nThe column agency_start_date is loaded as a character when we read the data for the first time. We will change the type to date using lubridate.\n\n\nCode\nlibrary(lubridate)\n\npayroll_data_filtered &lt;- \n  payroll_data_filtered |&gt; \n  mutate(agency_start_date_clean = mdy(agency_start_date))",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#saving-subset-data",
    "href": "appendix.html#saving-subset-data",
    "title": "6¬† Appendix",
    "section": "6.4 Saving Subset Data",
    "text": "6.4 Saving Subset Data\nWe will save the Final Subset Data into the folder /data_source/, so we can load it later inside results.qmd.\n\n\nCode\npayroll_data_fire_police &lt;-\n  payroll_data_filtered |&gt; \n\n  # renaming clean columns to original names:\n  mutate(\n    agency_name = agency_name_clean,\n    work_location_borough = work_location_borough_clean,\n    payroll_number = payroll_number_clean,\n    agency_start_date = agency_start_date_clean\n  ) |&gt;\n  \n  # dropping clean columns\n  dplyr::select(-agency_name_clean, \n                -work_location_borough_clean, \n                -payroll_number_clean,\n                -agency_start_date_clean)\n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "appendix.html#final-subset-data-information",
    "href": "appendix.html#final-subset-data-information",
    "title": "6¬† Appendix",
    "section": "6.5 Final Subset Data Information",
    "text": "6.5 Final Subset Data Information\nBased on the analysis above, we will add a few filters to produce and clean our final dataset.\nFilters applied to the dataset:\n\n\n\n\n\n\nColumn Name\nFilter\n\n\n\n\nAgency Name\nFIRE DEPARTMENT, POLICE DEPARTMENT\n\n\nWork Location Borough\nBRONX, BROOKLYN, MANHATTAN, QUEENS, RICHMOND\n\n\nFiscal Year\nFrom 2015 to 2024\n\n\nPay Basis\nper Annum, per Day, per Hour\n\n\n\n\n\n\n\n\n\n\nCleaning data and Handling NAs:\n\n\n\n\n\n\nColumn Name\nNote\n\n\n\n\nAgency Name\nGroup agencies with similar names. Keep only FIRE and POLICE.\n\n\nWork Location Borough\nUppercase all names. Filtering data only for top 5 Boroughs.\n\n\nFiscal Year\n2014 had missing data for Police Department. 2014 will be removed.\n\n\nPay Basis\nKeeping only the top 3 Pay Basis.\n\n\nPayroll Number\nMissing NA values have been backfilled based on Agency Name.\n\n\nAgency Start Date\nConvert strings to date using lubridate.\n\n\n\n\n\n\n\n\n\n\nSize of Final subset Data\n\n\n\n\n\n\nDimensions\n804,630 rows and 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\n\n\n\n\n\nRecord count by Agency:\n\n\n\nCode\nlibrary(ggplot2)\nlibrary(tibble)\nlibrary(dplyr)\n\npayroll_data_fire_police |&gt; \n  group_by(agency_name) |&gt; \n  summarise(\n    Count = n()\n    , .groups = 'drop'\n  ) |&gt; \n  arrange(desc(Count)) |&gt;\n  mutate(Percentage = Count / sum(Count) * 100,\n         Label = paste(\n                       format(Count, big.mark = \",\"), \"\\n\", \" (\", sprintf(\"%.0f\", Percentage), \"%)\", sep = \"\")) |&gt; \nggplot(aes(x = \"\", y = Count, fill = agency_name)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(theta = \"y\") +\n  scale_fill_manual(name= 'Agency', values = c(\"#f94144\", \"deepskyblue3\")) +\n  # labs(title = \"Record Count by Department\") +\n  theme_void() +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5), color = \"white\")\n\n\n\n\n\n\n\n\n\nOverall dataset Information:\n\n\n\n\n\n\n\n\n\n\n\nMetrics\nFire Deparmtnet\nPolice Department\n\n\n\n\nCount of Records\n192,638\n611,992\n\n\nFiscal Years\n10 years (2015-2024)\n10 years (2015-2024)\n\n\nAgency Start Date Range\n1968-04-22 to 2024-07-29\n1960-11-14 to 2049-10-16\n\n\nWork Location Borough\n5\n5\n\n\nTitle Description\n238\n335",
    "crumbs": [
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Appendix</span>"
    ]
  },
  {
    "objectID": "results.html#why-is-2024-so-high-1",
    "href": "results.html#why-is-2024-so-high-1",
    "title": "3¬† Results",
    "section": "6.3 Why Is 2024 So High?",
    "text": "6.3 Why Is 2024 So High?\nThe total salary paid by the Police Department in 2024 is unusually high. Comparing 2023 and 2024, we see an increase of 7,285 employees receiving salaries and a $2 billion rise in total compensation.\nAnalyzing the total salary differences by position reveals that the top 10 positions with the highest increases account for 97% of the overall compensation difference. Notably, the Police Officer position alone saw 6,728 more employees compared to the prior year, representing 92% of the additional employees receiving salaries in 2024.\n\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year %in% c(\"2024\", \"2023\")) |&gt;\n  filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  group_by(fiscal_year, title_description) |&gt; \n  summarise(\n    total_paid = sum(total_paid, na.rm = TRUE),\n    .groups = 'drop'\n  ) |&gt;\n  pivot_wider(names_from = fiscal_year, values_from = total_paid) |&gt; \n  mutate(\n    difference = `2024` - `2023`,\n    difference_perc = (`2024` - `2023`) / `2023` * 100\n  ) |&gt;\n  filter(difference &gt; 0) |&gt;\n  arrange(desc(difference)) |&gt; \n  mutate(\n    label = ifelse(row_number() &lt;= 10, title_description, NA),  # Add labels for top 10\n    is_top10 = factor(row_number() &lt;= 10, levels = c(TRUE, FALSE), labels = c(\"Top 10\", \"Other Job Titles\")) # Custom order\n   ) |&gt; \n  ggplot() +\n  geom_point(\n    mapping = aes(\n      x = difference, \n      y = difference_perc, \n      fill = difference, \n      color = is_top10\n    ),\n    size = 3,\n    alpha = 0.7,\n    stroke = 0.6,\n    na.rm = TRUE,\n    shape = 21 # Use shape 21 to apply both color and fill\n  ) +\n  geom_label_repel(\n    aes(\n      x = difference,\n      y = difference_perc,\n      label = label\n    ),\n    na.rm = TRUE,\n    size = 3,      # Text size\n    box.padding = 0.35, # Padding around text box\n    point.padding = 0.3, # Space between point and label\n    segment.color = \"grey50\", # Line color connecting label to point\n    max.overlaps = 10,  # Limits overlapping labels\n    max.iter = 10000,\n    nudge_y = 190,\n    # nudge_x = 1,\n    force = 170,\n    # force_pull = 1,\n  ) +\n  scale_fill_distiller(\n    palette = \"Blues\", \n    direction = 1, \n    limits = c(0, 7000000),\n    # limits = c(0, 200000000)\n    # oob = scales::oob_squish, # Ensures values outside the range are treated properly\n    na.value = \"orange\",\n    labels = scales::label_number(scale = 1 / 1000000, suffix = \"M\"), # Display in millions\n    breaks = c(0, 5000000, 10000000), # Custom ticks\n    name = \"Salary Paid Difference YoY\", # Legend title\n    guide = \"none\" \n  ) +\n  scale_color_manual(\n    values = c(\"Top 10\" = \"orange\", \"Other Job Titles\" = 'deepskyblue3'), # Red for top 10, no fill for others\n    # labels = c(\"TRUE\" = \"Top 10\", \"FALSE\" = \"Other Job Titles\"), # Custom labels\n     # alpha = c(\"TRUE\" = 1, \"FALSE\" = 0),\n    guide = \"none\" # Remove legend for fill\n  ) +\n  labs(\n    x = \"Salary Paid Diffence\", \n    y = \"Percentage Difference\", \n    title = \"Salary Paid Diffence between 2023 and 2024\", \n    color = \"Positions contributing to the Total Salary Paid\"\n  ) +\n  # geom_vline(xintercept=0,color='grey')+\n  scale_x_log10(\n    # labels = scales::label_comma(),\n    # limits = c(-100000, 300000),\n    breaks = c(0, 10000,100000, 1000000, 10000000, 100000000,1000000000,10000000000),\n    labels = c(\"0\",\"10K\",\"100K\", \"1M\", \"10M\", \"100M\",\"1B\",\"10B\"),\n    # expand = expansion(add = c(1, 0))\n                ) +\n  scale_y_continuous(\n    limits = c(0, 300),\n     labels = scales::label_percent(scale = 1, suffix = \"%\") # Add % suffix\n  ) +\n  guides(color = guide_legend(override.aes = list(size = 4))) +\n  theme_minimal() +\n  # theme_light() +\n  theme(\n    panel.grid.minor.x = element_blank(), # Remove minor grid lines on x-axis\n    legend.position = \"bottom\"           # Move legend to bottom\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(RColorBrewer)\n\npayroll_data_fire_police |&gt; \n  filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt; \n  group_by(fiscal_year,title_description) |&gt; \n  summarise(\n    total_records = n(),\n    # total_paid = sum(total_paid),\n    .groups = 'drop'\n  ) |&gt;\n  pivot_wider(names_from = fiscal_year, values_from = total_records) |&gt; \n  mutate(difference = `2024`-`2023`,\n         difference_perc = (`2024`-`2023`)/`2023` * 100,) |&gt; \n  # arrange(difference)\n  # arrange(desc(`difference_perc`))\n  arrange(desc(`difference`)) |&gt; \n  dplyr::select(title_description,difference) |&gt; \n  mutate(\n    title_description = ifelse(row_number() &lt;= 10, title_description, \"Other\")\n  ) |&gt; \n  group_by(title_description) |&gt; \n  summarise(\n    total_difference = sum(difference, na.rm=TRUE),\n    .groups = 'drop'\n  ) |&gt; \n  arrange(desc(total_difference)) |&gt; \nmutate(\n    fill_color = ifelse(\n      title_description == \"Other\", \n      \"gray\", \n      c(\"#03045eff\", \"#023e8aff\", \"#0077b6ff\", \"#0096c7ff\", \"#00a5d0ff\", \"#00b4d8ff\", \"#48cae4ff\", \"#90e0efff\", \"#ade8f4ff\", \"#caf0f8ff\")[rank(-total_difference)]\n    )\n  ) |&gt; \n\n# Create the bar chart\nggplot(aes(\n  y = reorder(title_description, ifelse(title_description == \"Other\", -Inf, total_difference)),\n  x = total_difference,\n  fill = fill_color\n)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  geom_text(\n    aes(\n      label = total_difference,\n      hjust = ifelse(total_difference &gt; 0, -0.1, 1.1),\n    ),\n    # position = position_stack(vjust = 0.5),\n    # hjust = -1.2,\n    \n    size = 3, # Adjust text size\n    color = \"skyblue4\" # Text color\n  ) +\n  scale_fill_identity() + # Use identity to apply pre-assigned colors\n  # coord_flip() +\n  labs(\n    title = \"Total Employee Difference Between 2023 and 2024\",\n    y = \"Position\",\n    x = \"Number of Employees\"\n  ) +\n  scale_x_continuous(\n    limits = c(-1000, 7500),\n    expand = expansion(add = c(1000,0))) +\n  # theme_minimal() +\n  # theme_classic() +\n  theme_light() +\n  theme(\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    plot.margin = margin(10, 20, 10, 20),\n    plot.title.position = \"plot\",\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#the-more-i-work-the-more-i-get-paid-1",
    "href": "results.html#the-more-i-work-the-more-i-get-paid-1",
    "title": "3¬† Results",
    "section": "6.4 The More I Work, the More I Get Paid",
    "text": "6.4 The More I Work, the More I Get Paid\nOur next analysis focuses on Years of Experience groups and their relationship to Salary ranges, which include Regular pay, Overtime, and Other compensations. Let‚Äôs take a look at the 2024 fiscal year.\nFor both departments, the majority of employees in the 0‚Äì5 years of experience group earn less than $100,000. In the next group (5‚Äì10 years), we observe a notable presence of employees earning between $150,000 and $200,000, with the Fire Department having a higher percentage of employees in this range compared to others. Additionally, there are employees in the $200,000‚Äì$250,000 range within this group.\nThe 10‚Äì20 years of experience group shows the highest proportion of employees in the $200,000‚Äì$250,000 range, and we also see some employees making $250,000 or more.\nThe 20+ years group includes employees across all salary ranges. Interestingly, both agencies have a number of employees in this group earning less than $50,000. For the Fire Department, the larger salary ranges for this group are $200,000‚Äì$250,000 and $250,000+.\nOverall, while both departments show a clear trend of higher salaries with more years of experience, the Fire Department has a higher proportion of employees with extensive experience compared to the Police Department. This suggests a more experienced workforce in the Fire Department relative to the Police Department.\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test &lt;-\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == 2024) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\npayroll_data_fire_police_pay_range_frequency &lt;- \n  payroll_data_fire_police_test |&gt; \n  # select(total_paid_group,flag_regular,flag_overtime,flag_other,agency_name,total_paid_group_fill) |&gt; \n  # select(flag_regular,flag_overtime,flag_other,total_paid_group,agency_name,total_paid_group_fill) |&gt;\n  # select(work_location_borough,flag_overtime,total_paid_group,agency_name,total_paid_group_fill) |&gt;\ndplyr::select(years_band,total_paid_group,agency_name,total_paid_group_fill,years_band_group,work_location_borough) |&gt;\n  group_by(across(everything())) |&gt; \n  summarise(frequency = n(), .groups = 'drop')\n\n# payroll_data_fire_police_pay_range_frequency &lt;-\n#   payroll_data_fire_police_pay_range_frequency |&gt; \n#   mutate(total_paid_group_fill = total_paid_group)\n\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:2)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        # labels = c(1,                                                   \"Total\")\n)\n\n\n\nlibrary(scales)\n\nessay_grades_frequency_lode &lt;- essay_grades_frequency_lode |&gt; \n  mutate(\n    stratum_width = ifelse(stratum == \"Total\", 2, 1) # Replace \"LastStratumName\" with the actual name\n  )\n\nggplot(essay_grades_frequency_lode, \n       aes(alluvium=alluvium, x=x, stratum=stratum, y=frequency)) +\n  # geom_flow(width = 0.5) +\n  # geom_alluvium(decreasing = TRUE)+\n  geom_alluvium(aes(fill = total_paid_group_fill), alpha = 0.8,\n                # width = 0.5\n                ) +\n  # geom_lode() +\n  \n  # geom_stratum(color = \"#00509d\",\n  #              fill='white',\n  #              linewidth = 1.5,\n  #              aes(fill = NA),\n  #              alpha = 0.5) +\n  geom_stratum(aes(fill = total_paid_group_fill),\n               # width = c(0.5,0.5,0.5,2),\n               # width = 0.7,\n               # width =ifelse(as.character(total_paid_group_fill) == 4, 3, NA),\n               # position = \"jitter\",\n               ) +\n   geom_label(stat = \"stratum\", \n              # aes(label = after_stat(stratum)),\n              aes(label = ifelse(as.numeric(x) != 2, as.character(stratum), NA) ),\n              size =3,\n              ) +\n  # geom_text(stat = \"stratum\",\n  #           aes(label = paste(after_stat(stratum)\n  #                             # ,                              \"\\n\" ,after_stat(count)\n  #                             )),\n  #            # aes(label = ifelse(as.numeric(x) != 4, as.character(stratum), NA) ),\n  #           hjust = 0.5,\n  #           size = 3\n  #           ) +\n  scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n   scale_x_discrete(                   expand = c(.1, .1)) +\n# ggrepel::geom_text_repel(\n#   aes(label = ifelse(as.numeric(x) == 2, as.character(stratum), NA) ),\n#   stat = \"stratum\",\n#   size = 3, direction = \"y\", nudge_x = 1.2\n# ) +\nscale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  ggrepel::geom_label_repel(\n aes(label = ifelse(as.numeric(x) == 2, as.character(stratum), NA)),\n  stat = \"stratum\",\n  size = 3,\n  direction = \"y\",\n  nudge_x = .8,\n  box.padding = 0.3, # Padding around the text\n  label.padding = unit(0.25, \"lines\"), # Padding inside the box\n  label.size = 0.5, # Border thickness\n  label.r = unit(0.15, \"lines\"), # Corner radius of the box\n  fill = \"white\", # Background color for the label\n  color = \"black\" # Text color\n) +\n  facet_wrap(~ agency_name, scales = \"free\") +\n# facet_wrap(~ work_location_borough, scales = \"free_y\") +\n  # facet_grid(agency_name ~ ., scales = \"free\") +\n# facet_wrap(~ agency_name, scales = \"free_y\") +\n# facet_grid(years_band_group ~ agency_name, scales = \"free_y\") +\n# facet_grid(work_location_borough ~ agency_name, scales = \"free_y\") +\n# work_location_borough\n # facet_wrap(~ years_band_group + agency_name, scales = \"free_y\") + \n  labs(title = \"Student Performance on the Three Essays\",\n       x = \"Essays\",\n       y = \"Number of Students\",\n       fill=\"Section\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n         panel.spacing = unit(3, \"lines\"),\n        legend.direction = \"horizontal\",\n        legend.box = \"horizontal\", \n        legend.text = element_text(size = 10) ,\n        )+\n  guides(\n    fill = guide_legend(\n      nrow = 1,                      # Force legend items into one row\n      # keywidth = 1.5, keyheight = 0.5 # Adjust key size for spacing\n    )\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html#results-1",
    "href": "conclusion.html#results-1",
    "title": "5¬† Conclusion",
    "section": "6.1 Results",
    "text": "6.1 Results\n\n6.1.1 Results\n\n6.1.1.1 Results\n\n6.1.1.1.1 Results\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPossible 10 Charts based on Problem Set1 hitogram / facets (ps1) boxplot jitter (ps1) with ridgeline (ps1) density lines bar chart lump facet scattter plot Density plot geom_point with facet 9x9 grid (ps2 california) Cleveland dot plot ggparcords parcoords likert mosaic alluvium 11\n\ntes\n\n\nanother\n\n\n\n\n\n\n\nanother\n\n\n\n\nsdfs",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#results-6",
    "href": "conclusion.html#results-6",
    "title": "5¬† Conclusion",
    "section": "7.1 Results",
    "text": "7.1 Results\n\n7.1.1 Results\n\n7.1.1.1 Results\n\n7.1.1.1.1 Results",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#results-11",
    "href": "conclusion.html#results-11",
    "title": "5¬† Conclusion",
    "section": "8.1 Results",
    "text": "8.1 Results\n\n8.1.1 Results\n\n8.1.1.1 Results\n\n8.1.1.1.1 Results",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#results-16",
    "href": "conclusion.html#results-16",
    "title": "5¬† Conclusion",
    "section": "9.1 Results",
    "text": "9.1 Results\n\n9.1.1 Results\n\n9.1.1.1 Results\n\n9.1.1.1.1 Results",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-paid-the-most-2",
    "href": "results.html#who-gets-paid-the-most-2",
    "title": "3¬† Results",
    "section": "6.5 Who Gets Paid the Most?",
    "text": "6.5 Who Gets Paid the Most?\n\n6.5.1 Employees Earning Over $250K\nWhen analyzing 2024 employees earning more than $250K, we can break down their total salary into three categories: Regular pay, Overtime, and Other compensation.\nFor those earning over $200K in Regular pay, it‚Äôs clear that they generally do not receive Overtime compensation, although some do receive Other compensation.\nEmployees earning between $100K and $200K in regular pay, tend to earn significant Overtime ranging from $60K to $130K. This Overtime is the main factor contributing to their final salary being above $250K. Additionally, they receive Other compensation, ranging from $25K to $50K.\nInterestingly, only 9 employees earning less than $100K in Regular pay received total compensation over $250K. Of these, 3 follow a similar pattern to the previous group (earning significant Overtime), while 6 are outliers who receive no Regular or Overtime pay but have very high Other compensation.\n\nSalary BreakdownSalary Breakdown - Faceted\n\n\n\n\nCode\npayroll_data_fire_police_chart_2 &lt;-\n  payroll_data_fire_police |&gt; \n  filter(fiscal_year == 2024) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \n  mutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\n         years_band_group = years_band)\n\n\n# payroll_data_fire_police_chart_2 |&gt; \n  # filter(total_paid_group == \"250k and above\") |&gt; \n  # select(title_description) |&gt; distinct() |&gt; pull()\n\n\n\n\n\ntitle_mapping &lt;- c(\n  \"EXECUTIVE AGENCY COUNSEL\" = \"EXEC AGENCY CNSL\",\n  \"COMPUTER SYSTEMS MANAGER\" = \"COMPUTER SYS MGR\",\n  \"COUNSEL TO THE POLICE COMMISSIONER\" = \"POLICE CNSL\",\n  \"ADMINISTRATIVE STAFF ANALYST\" = \"ADMIN STAFF ANALYST\",\n  \"CAPTAIN - CHIEF OF STAFF\" = \"CAPT - CHIEF STAFF\",\n  \"DEPUTY COMMISSIONER\" = \"DEPUTY COMM\",\n  \"CAPTAIN DETAILED AS ASSISTANT CHIEF\" = \"CAPT - ASST CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF TRAINING\" = \"CAPT - CHIEF TRAINING\",\n  \"COMMISSIONER\" = \"COMMISSIONER\",\n  \"CAPTAIN DETAILED AS CHIEF OF SPECIAL OPERATIONS\" = \"CAPT - SPEC OPS CHIEF\",\n  \"CAPTAIN: CHIEF OF TRANSPORTATION BUREAU\" = \"CAPT - TRANS CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF DETECTIVES\" = \"CAPT - DET CHIEF\",\n  \"CHIEF OF INFORMATION TECHNOLOGY\" = \"IT CHIEF\",\n  \"CAPT DET CHIEF OF THE HOUSING BUREAU\" = \"CAPT DET - HOUSING\",\n  \"CAPT DET CHIEF OF THE TRANSIT BUREAU\" = \"CAPT DET - TRANSIT\",\n  \"CAPT DET CHIEF OF INTERNAL AFFAIRS\" = \"CAPT DET - INTERNAL AFF\",\n  \"CAPTAIN DETAILED AS CHIEF OF INTERAGENCY OPERATIONS\" = \"CAPT - INTERAGENCY OPS\",\n  \"CAPTAIN DETAILED AS CHIEF OF CRIME CONTROL STRATEGIES\" = \"CAPT - CRIME CTRL\",\n  \"SUPERVISING CHIEF SURGEON\" = \"CHIEF SURGEON\",\n  \"CAPT DET CHIEF OF DEPARTMENT\" = \"CAPT DET - DEPT CHIEF\",\n  \"SENIOR STATIONARY ENGINEER\" = \"SR STAT ENG\",\n  \"CAPTAIN DETAILED AS CHIEF OF PATROL\" = \"CAPT - PATROL CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF PERSONNEL\" = \"CAPT - PERS CHIEF\",\n  \"SUPERVISOR OF MECHANICS\" = \"SUPV MECHANICS\",\n  \"AGENCY ATTORNEY\" = \"AGENCY ATTY\",\n  \"FIRST DEPUTY COMMISSIONER\" = \"1ST DEPUTY COMM\",\n  \"POLICE OFFICER\" = \"POLICE OFFICER\",\n  \"P.O. DA DET GR3\" = \"P.O. DA DET GR3\",\n  \"P.O. DET SPEC\" = \"P.O. DET SPEC\",\n  \"LIEUTENANT\" = \"LIEUTENANT\",\n  \"CAPTAIN\" = \"CAPTAIN\",\n  \"OILER\" = \"OILER\",\n  \"SERGEANT-D/A SPECIAL ASSIGNMENT\" = \"SERG-SPEC ASSIGN\",\n  \"SERGEANT-\" = \"SERGEANT\",\n  \"POLICE OFFICER D/A DETECTIVE 2ND GR\" = \"P.O. DET 2ND GR\",\n  \"POLICE OFFICER D/A DETECTIVE 1ST GR\" = \"P.O. DET 1ST GR\",\n  \"LIEUTENANT D/A SPECIAL ASSIGNMENT\" = \"LIEUT-SPEC ASSIGN\",\n  \"LIEUTENANT D/A COMMANDER OF DETECTIVE SQUAD\" = \"LIEUT-DETECT CMD\",\n  \"STATIONARY ENGINEER\" = \"STAT ENG\",\n  \"CAPTAIN D/A DEPUTY CHIEF\" = \"CAPT-DEPUTY CHIEF\",\n  \"SERGEANT-D/A SUPERVISOR DETECTIVE SQUAD\" = \"SERG-DETECT CMD\",\n  \"CAPTAIN D/A INSPECTOR\" = \"CAPT-INSPECTOR\",\n  \"FIRE MEDICAL OFFICER\" = \"FIRE MED OFFICER\",\n  \"ADMINISTRATOR OF MEDICAL AFFAIRS\" = \"ADMIN MED AFFAIRS\",\n  \"DEPUTY ASSISTANT CHIEF OF DEPARTMENT\" = \"DEP ASST CHIEF\",\n  \"ASSISTANT CHIEF OF DEPARTMENT\" = \"ASST CHIEF\",\n  \"CHIEF OF DEPARTMENT\" = \"CHIEF OF DEPT\",\n  \"SUPERVISING EMERGENCY MEDICAL SERVICE SPECIALIST\" = \"SUPV EMS SPEC\",\n  \"ASSISTANT CHIEF FIRE MARSHAL\" = \"ASST CHIEF MARSHAL\",\n  \"SUPERVISOR ELECTRICIAN\" = \"SUPV ELECTRICIAN\",\n  \"CHIEF FIRE MARSHAL\" = \"CHIEF MARSHAL\",\n  \"FIREFIGHTER\" = \"FIREFIGHTER\",\n  \"MARINE ENGINEER\" = \"MARINE ENGINEER\",\n  \"WIPER\" = \"WIPER\",\n  \"PILOT\" = \"PILOT\",\n  \"BATTALION CHIEF\" = \"BATTALION CHIEF\",\n  \"SUPERVISING FIRE MARSHAL\" = \"SUPV FIRE MARSHAL\",\n  \"FIRE MARSHAL\" = \"FIRE MARSHAL\",\n  \"DEPUTY CHIEF\" = \"DEPUTY CHIEF\",\n  \"AUTO MECHANIC\" = \"AUTO MECHANIC\"\n)\n\n\n\n\npayroll_data_fire_police_chart_2_250 &lt;-\npayroll_data_fire_police_chart_2 |&gt; \n  filter(total_paid_group == \"250k and above\") |&gt; \n  # filter(total_paid_group == \"0k-50k\") |&gt; \n  mutate(title_description_short = title_mapping[title_description]) |&gt; \n  mutate(agency_name_order = ifelse(agency_name == \"FIRE DEPARTMENT\", \"ag-002\",\"ag-001\"))\n\n\n# \n# payroll_data_fire_police_chart_2_250 |&gt; \n#   select(title_description_short) |&gt; distinct() |&gt; \n#   arrange(desc(title_description_short)) |&gt; \n#   mutate(order_sequence = paste0(\"000-\",sprintf(\"%05d\", row_number())))\n\ntitle_order_sequence &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  dplyr::select(title_description_short) |&gt; \n  distinct() |&gt; \n  arrange(desc(title_description_short)) |&gt; \n  mutate(order_sequence = paste0(\"000-\", sprintf(\"%05d\", row_number())))\n\n# Perform a left join to add order_sequence\npayroll_data_fire_police_chart_2_250 &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  left_join(title_order_sequence, by = \"title_description_short\")\n\ntitle_description_list &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  dplyr::select(title_description_short) |&gt; \n  distinct(title_description_short) |&gt; \n  arrange(title_description_short) |&gt; \n  pull(title_description_short)\n\n# View the list\n# print(as.character(title_description_list))\n\n\n\n\nCode\npayroll_data_fire_police_chart_2_250_selection &lt;-\n  payroll_data_fire_police_chart_2_250 |&gt; \n  # filter(regular_gross_paid &gt;= 250000) |&gt; \n  mutate(agency_name_factor = as.factor(agency_name)) |&gt; \n  mutate(regular_paid_group = as.factor(\n    dplyr::if_else(regular_gross_paid&gt;= 200000, \"200k and above\", \n                   dplyr::if_else(regular_gross_paid&gt;= 100000 & regular_gross_paid&lt; 200000, \"100k-200k\", \n                                      \"Less than 100k\"))\n  )\n         )|&gt; \n  mutate(regular_paid_group = fct_relevel(regular_paid_group, \"200k and above\",\"100k-200k\",\"Less than 100k\")) |&gt; \n  dplyr::select(\n    agency_name_factor,\n    # title_description_short,\n    regular_paid_group,\n    regular_gross_paid,\n    total_ot_paid,\n    total_other_pay,\n    total_paid)\n\nggparcoord(data = payroll_data_fire_police_chart_2_250_selection,\n           columns = 3:6,\n           alphaLines = 0.1,\n           groupColumn = \"regular_paid_group\",\n           # mapping = aes(color = agency_name,fill = I(\"lightblue1\")),\n           scale=\"globalminmax\",\n           # splineFactor = 1, \n           # missing=\"median\",\n           showPoints = TRUE,\n          ) +\n  # geom_hline(yintercept =  2.5, color = \"black\", linetype = \"dashed\") +\n  # geom_hline(yintercept = -2.5, color = \"black\", linetype = \"dashed\") +\n  scale_color_manual(\"regular_paid_group\",\n                     name= 'Regular Pay Range',\n                     # values = c(\"#0496ff\", \"#ade8f4\", \"#023e8a\")) +\n                     values = c(\"#76c893\", \"#d9ed92\", \"#4f772d\")) +\n  labs(x = \"Variables\", \n       y = \"Salary\", \n       title = \"Parallel Coordinates Plot for Outliers\") +\n  # guides(alpha = \"none\") + \n  scale_x_discrete(\n    labels = c(\n      \"regular_gross_paid\" = \"Regular Pay\",\n      \"total_ot_paid\" = \"Overtime Pay\",\n      \"total_other_pay\" = \"Other Pay\",\n      \"total_paid\" = \"Total Salary\\n(Regular + Overtime + Other)\"\n    )\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 400000, 100000), # Adjust the breaks\n    labels = scales::label_number(scale = 1 /1000, suffix = \"K\") # Show in 'K' format\n  ) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police_chart_2_250_selection &lt;-\n  payroll_data_fire_police_chart_2_250 |&gt; \n  # filter(regular_gross_paid &gt;= 250000) |&gt; \n  mutate(agency_name_factor = as.factor(agency_name)) |&gt; \n  mutate(regular_paid_group = as.factor(\n    dplyr::if_else(regular_gross_paid&gt;= 200000, \"200k and above\", \n                   dplyr::if_else(regular_gross_paid&gt;= 100000 & regular_gross_paid&lt; 200000, \"100k-200k\", \n                                      \"Less than 100k\"))\n  )\n         )|&gt; \n  mutate(regular_paid_group = fct_relevel(regular_paid_group, \"200k and above\",\"100k-200k\",\"Less than 100k\")) |&gt; \n  dplyr::select(\n    agency_name_factor,\n    # title_description_short,\n    regular_paid_group,\n    regular_gross_paid,\n    total_ot_paid,\n    total_other_pay,\n    total_paid)\n\nggparcoord(data = payroll_data_fire_police_chart_2_250_selection,\n           columns = 3:6,\n           alphaLines = 0.1,\n           groupColumn = \"regular_paid_group\",\n           # mapping = aes(color = agency_name,fill = I(\"lightblue1\")),\n           scale=\"globalminmax\",\n           # splineFactor = 1, \n           # missing=\"median\",\n           showPoints = TRUE,\n          ) +\n  # geom_hline(yintercept =  2.5, color = \"black\", linetype = \"dashed\") +\n  # geom_hline(yintercept = -2.5, color = \"black\", linetype = \"dashed\") +\n  scale_color_manual(\"regular_paid_group\",\n                     name= 'Regular Pay Range',\n                     # values = c(\"#0496ff\", \"#ade8f4\", \"#023e8a\")) +\n                     values = c(\"#76c893\", \"#d9ed92\", \"#4f772d\")) +\n  labs(x = \"Variables\", \n       y = \"Salary\", \n       title = \"Parallel Coordinates Plot for Outliers\") +\n  # guides(alpha = \"none\") + \n  facet_wrap(~ regular_paid_group) + \n  scale_x_discrete(\n    labels = c(\n      \"regular_gross_paid\" = \"Regular Pay\",\n      \"total_ot_paid\" = \"Overtime Pay\",\n      \"total_other_pay\" = \"Other Pay\",\n      \"total_paid\" = \"Total Salary\"\n    )\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 400000, 100000), # Adjust the breaks\n    labels = scales::label_number(scale = 1 /1000, suffix = \"K\") # Show in 'K' format\n  ) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFor a deeper analysis, the following interactive parallel coordinates chart provides a detailed breakdown of salary components (Regular, Overtime, Other) for employees earning over $250K, along with their job titles and departments.\n\n\nCode\nparcoords(\n  payroll_data_fire_police_chart_2_250[, c(\n    # \"agency_name_order\", \n    \"order_sequence\",\n    \"agency_name_order\", \n    # \"title_description_short\",\n    \"regular_gross_paid\",\n    \"total_ot_paid\",\n    \"total_other_pay\",\n    \"total_paid\"\n  )], \n  rownames = FALSE,\n  brushMode = \"1D-axes\",\n  reorderable = TRUE,\n  queue = TRUE,\n  alpha = 0.25,\n  alphaOnBrushed = 0.1,\n  height = 750,\n  dimensions = list(\n    # outliers_rank = list(\n    #   title = \"outliers_rank\",\n    #   tickValues = c(\"High\",\"Not an Outlier\",\"Low\")\n    # ),\n    agency_name_order = list(\n      title = \"Agency\",\n      tickValues = c(\"FIRE\",\"POLICE\")\n    ),\n    order_sequence = list(\n      title = \"Job Title\",\n      tickValues = as.character(title_description_list)\n    ),\n    regular_gross_paid = list(title = \"Regular Pay\"),\n    total_ot_paid = list(title = \"Overtime Pay\"),\n    total_other_pay = list(title = \"Other Pay\"),\n    total_paid = list(title = \"Total Salary (Reg+Ovt+Oth)\")\n  ),\n  # color = list(\n  #   colorBy = \"outliers_rank\",  \n  #   colorScale = \"scaleOrdinal\",\n  #   colorScheme = outliers_colors\n  # ),\n   color = list(\n    colorBy = \"agency_name_order\",  \n    colorScale = \"scaleOrdinal\",\n    colorScheme = c(\"#0099CC\", \"#f94144\")\n  ),\n  withD3 = TRUE,\n  margin = list(\n    top = 30,    # Adjust top margin\n    right = 40,  # Adjust right margin\n    bottom = 30, # Adjust bottom margin\n    left = 125   # Increase left margin for better spacing\n  )\n)",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#understanding-the-gap-regular-pay-and-total-salary-1",
    "href": "results.html#understanding-the-gap-regular-pay-and-total-salary-1",
    "title": "3¬† Results",
    "section": "5.1 Understanding the Gap: Regular Pay and Total Salary",
    "text": "5.1 Understanding the Gap: Regular Pay and Total Salary\nIn this analysis, we explore the gap between Regular Pay and Total Salary for the Top 25 most popular positions by department (ranked by employee count). We will examine three key variables for each position:\n\nRegular Salary Paid: Mean regular salary for each position.\nTotal Salary Paid: Mean salary including Regular, Overtime, and Other Pay.\nRatio: The ratio of Total Salary Paid to Regular Salary Paid.\n\nFor the Fire Department, the percentage of additional compensation (Overtime + Other) varies widely across positions. More than 50% (13 out of 25) of these positions earn less than 25% above their regular pay in additional compensation. However, positions such as Captain and Lieutenant receive more than 70% additional pay on top of their regular salary.\nIn the Police Department, positions earning a mean regular salary below $100K do not receive a high amount of Overtime or Other compensation. All positions in this category earn less than 50% above their regular salary in additional pay. On the other hand, most positions earning a regular salary above $100K see a significant proportion (greater than 50%) of additional compensation to their salaries.\n\n5.1.0.1 Who gets paid the least??",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#understanding-the-gap-regular-pay-and-total-salary-2",
    "href": "results.html#understanding-the-gap-regular-pay-and-total-salary-2",
    "title": "3¬† Results",
    "section": "7.1 Understanding the Gap: Regular Pay and Total Salary",
    "text": "7.1 Understanding the Gap: Regular Pay and Total Salary\nIn this analysis, we explore the gap between Regular Pay and Total Salary for the Top 25 most popular positions by department (ranked by employee count). We will examine three key variables for each position:\n\nRegular Salary Paid: Mean regular salary for each position.\nTotal Salary Paid: Mean salary including Regular, Overtime, and Other Pay.\nRatio: The ratio of Total Salary Paid to Regular Salary Paid.\n\nFor the Fire Department, the percentage of additional compensation (Overtime + Other) varies widely across positions. More than 50% (13 out of 25) of these positions earn less than 25% above their regular pay in additional compensation. However, positions such as Captain and Lieutenant receive more than 70% additional pay on top of their regular salary.\nIn the Police Department, positions earning a mean regular salary below $100K do not receive a high amount of Overtime or Other compensation. All positions in this category earn less than 50% above their regular salary in additional pay. On the other hand, most positions earning a regular salary above $100K see a significant proportion (greater than 50%) of additional compensation to their salaries.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-the-money",
    "href": "results.html#who-gets-the-money",
    "title": "3¬† Results",
    "section": "",
    "text": "Number of EmployeesAmount Paid per Year\n\n\n\n\nCode\n# Ensure fiscal_year is numeric\nsummarized_data &lt;- payroll_data_fire_police |&gt; \n  group_by(agency_name, fiscal_year, work_location_borough) |&gt; \n  summarise(\n    total_records = n(),\n    total_paid = sum(total_paid),\n    paid_per_person = sum(total_paid) / n(),\n    .groups = \"drop\"\n  ) |&gt; \n  mutate(fiscal_year = as.numeric(fiscal_year))\n\n\n# Calculate high-water mark and the corresponding year for each facet\nhigh_water_mark_records &lt;- summarized_data |&gt;\n  group_by(fiscal_year, agency_name) |&gt;\n  summarise(max_records = sum(total_records), .groups = \"drop\") |&gt;\n  group_by(agency_name) |&gt;\n  filter(max_records == max(max_records)) |&gt;\n  summarise(\n    fiscal_year = fiscal_year[1],  # Get the fiscal year for max records\n    max_records = max_records[1]  # Get the maximum record count\n  )\n\n\n\n# Plot\nggplot(summarized_data) +\n  geom_col(aes(x = fiscal_year, y = total_records, fill = work_location_borough)) +\n  \n  # Add horizontal dashed line at high water mark with color mapped to a new variable\n  geom_hline(\n    data = high_water_mark_records,\n    aes(yintercept = max_records, color = \"Highest value in 10 years\"),  # Map color to legend\n    # inherit.aes = FALSE,\n    linetype = \"dashed\"\n  ) +\n  \n  # Add text labels for high water marks\n  geom_text(\n    data = high_water_mark_records,\n    aes(\n      x = fiscal_year,\n      y = max_records,\n      label = paste0(\"Year: \", fiscal_year, \"\\n Employees: \", label_comma()(max_records))\n    ),\n    inherit.aes = FALSE,\n    color = \"black\",\n    vjust = -0.5,\n    hjust = 1,\n    size = 4\n  ) +\n  \n  # Add dots at high water marks\n  geom_point(\n    data = high_water_mark_records,\n    aes(x = fiscal_year, y = max_records),\n    inherit.aes = FALSE,\n    color = \"black\",   # Dot color\n    size = 3,        # Dot size\n    shape = 16       # Circle shape (default)\n  ) +\n  \n  # facet_wrap(~agency_name) \n  facet_wrap(~agency_name) +\n  \n  # Scale and labels for x-axis\n  scale_x_continuous(\n    breaks = seq(min(summarized_data$fiscal_year), max(summarized_data$fiscal_year), by = 1),\n    labels = function(x) format(as.Date(paste0(x, \"-01-01\")), \"%Y\")\n  ) +\n  \n  # Labels for title and axes\n  labs(\n    title = \"Employees by Fiscal Year\",\n    x = \"Fiscal Year\",\n    y = \"Number of Employees\",\n    fill = \"Location:\",\n    color = \"Reference Line:\"  # Add a label for the color legend\n  ) +\n  \n  # Y-axis settings\n  scale_y_continuous(\n    limits = c(0, NA),  # Keep lower bound at 0\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\"),\n    expand = expansion(mult = c(0, 0.2))  # Add some padding for aesthetics\n  ) +\n  \n  # Set the colors for the fill based on boroughs\n  scale_fill_manual(\n    values = c(\n      \"BRONX\" = \"#FF595E\",\n      \"BROOKLYN\" = \"#FFCA3A\",\n      \"MANHATTAN\" = \"#8AC926\",\n      \"QUEENS\" = \"#1982C4\",\n      \"STATEN ISLAND\" = \"#6A4C93\"\n    )\n  ) +\n  \n  # Set color for high water mark line\n  scale_color_manual(\n    values = c(\"Highest value in 10 years\" = \"black\")  # Color the reference line black\n  ) +\n  \n  # Minimal theme\n  theme_minimal() +\n  theme(\n    text = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(hjust = 0.5),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    legend.position = \"bottom\",\n    legend.box = \"vertical\"  #\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Ensure fiscal_year is numeric\nsummarized_data &lt;- payroll_data_fire_police |&gt; \n  group_by(agency_name, fiscal_year, work_location_borough) |&gt; \n  summarise(\n    total_records = n(),\n    total_paid = sum(total_paid),\n    paid_per_person = sum(total_paid) / n(),\n    .groups = \"drop\"\n  ) |&gt; \n  mutate(fiscal_year = as.numeric(fiscal_year))\n\n\n# Calculate high-water mark and the corresponding year for each facet\nhigh_water_mark_records &lt;- summarized_data |&gt;\n  group_by(fiscal_year, agency_name) |&gt;\n  summarise(max_records = sum(total_paid), .groups = \"drop\") |&gt;\n  group_by(agency_name) |&gt;\n  filter(max_records == max(max_records)) |&gt;\n  summarise(\n    fiscal_year = fiscal_year[1],  # Get the fiscal year for max records\n    max_records = max_records[1]  # Get the maximum record count\n  )\n\n\n\n# Plot\nggplot(summarized_data) +\n  geom_col(aes(x = fiscal_year, y = total_paid, fill = work_location_borough)) +\n  \n  # Add horizontal dashed line at high water mark with color mapped to a new variable\n  geom_hline(\n    data = high_water_mark_records,\n    aes(yintercept = max_records, color = \"Highest value in 10 years\"),  # Map color to legend\n    # inherit.aes = FALSE,\n    linetype = \"dashed\"\n  ) +\n  \n  # Add text labels for high water marks\n  geom_text(\n    data = high_water_mark_records,\n    aes(\n      x = fiscal_year,\n      y = max_records,\n      label = paste0(\"Year: \", fiscal_year, \"\\n Amount Paid: \", label_currency()(max_records/1000000000),\" Billions\")\n    ),\n    inherit.aes = FALSE,\n    color = \"black\",\n    vjust = -0.5,\n    hjust = 1,\n    size = 4\n  ) +\n  \n  # Add dots at high water marks\n  geom_point(\n    data = high_water_mark_records,\n    aes(x = fiscal_year, y = max_records),\n    inherit.aes = FALSE,\n    color = \"black\",   # Dot color\n    size = 3,        # Dot size\n    shape = 16       # Circle shape (default)\n  ) +\n  \n  # facet_wrap(~agency_name) \n  facet_wrap(~agency_name) +\n  \n  # Scale and labels for x-axis\n  scale_x_continuous(\n    breaks = seq(min(summarized_data$fiscal_year), max(summarized_data$fiscal_year), by = 1),\n    labels = function(x) format(as.Date(paste0(x, \"-01-01\")), \"%Y\")\n  ) +\n  \n  # Labels for title and axes\n  labs(\n    title = \"Amount Paid to Employees by Fiscal Year\",\n    x = \"Fiscal Year\",\n    y = \"Amount Paid to Employees\",\n    fill = \"Location:\",\n    color = \"Reference Line:\"  # Add a label for the color legend\n  ) +\n  \n  # Y-axis settings\n  scale_y_continuous(\n    limits = c(0, NA),  # Keep lower bound at 0\n    labels = scales::label_number(scale = 1/1000000000, suffix = \" B\"),\n    expand = expansion(mult = c(0, 0.2))  # Add some padding for aesthetics\n  ) +\n  \n  # Set the colors for the fill based on boroughs\n  scale_fill_manual(\n    values = c(\n      \"BRONX\" = \"#FF595E\",\n      \"BROOKLYN\" = \"#FFCA3A\",\n      \"MANHATTAN\" = \"#8AC926\",\n      \"QUEENS\" = \"#1982C4\",\n      \"STATEN ISLAND\" = \"#6A4C93\"\n    )\n  ) +\n  \n  # Set color for high water mark line\n  scale_color_manual(\n    values = c(\"Highest value in 10 years\" = \"black\")  # Color the reference line black\n  ) +\n  \n  # Minimal theme\n  theme_minimal() +\n  theme(\n    text = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    plot.title = element_text(hjust = 0.5),\n    panel.grid.major.x = element_blank(),\n    panel.grid.minor.x = element_blank(),\n    legend.position = \"bottom\",\n    legend.box = \"vertical\"  #\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#three-mountains-of-money",
    "href": "results.html#three-mountains-of-money",
    "title": "3¬† Results",
    "section": "3.3 Three Mountains of Money",
    "text": "3.3 Three Mountains of Money\n\n3.3.1 Overall Distributions\nAnalyzing the salary distributions reveals a trimodal pattern for the combined departments.\nWhen separating the distributions by agency, the Fire Department shows three distinct density peaks. The leftmost peak is higher than the middle, which in turn is higher than the right. This suggests that a larger proportion of Fire Department employees fall within the leftmost peak, earning between $110,000 and $140,000.\nIn contrast, the Police Department‚Äôs highest density peak occurs in the center mode, with most employees earning between $50,000 and $70,000.\nOverall, the Fire Department has a higher mean salary of $103,000 compared to the Police Department‚Äôs $87,000.\n\n\nCode\n# Calculate mean and sd for each agency_name\nfacet_stats &lt;- payroll_data_fire_police |&gt;\n  group_by(agency_name) |&gt;\n  summarise(\n    mean_total_paid = mean(total_paid, na.rm = TRUE),\n    sd_total_paid = sd(total_paid, na.rm = TRUE)\n  )\n\n# Create a custom function to generate a normal curve\nnormal_curve_data &lt;- function(mean, sd, x_range, n = 100) {\n  x &lt;- seq(x_range[1], x_range[2], length.out = n)\n  y &lt;- dnorm(x, mean = mean, sd = sd)\n  data.frame(x = x, y = y)\n}\n\n# Generate data for normal curves for each facet\nnormal_curve &lt;- facet_stats |&gt;\n  rowwise() |&gt;\n  mutate(\n    curve_data = list(\n      normal_curve_data(\n        mean = mean_total_paid,\n        sd = sd_total_paid,\n        x_range = c(-250000, 300000)  # Define the x-axis range\n      )\n    )\n  ) |&gt;\n  unnest(curve_data)  # Unnest the list-column into rows\n\nvertical_line_glyph &lt;- function(data, params, size) {\n  grid::linesGrob(\n    x = c(0.5, 0.5), y = c(0.1, 0.9),\n    gp = grid::gpar(col = alpha(data$colour, data$alpha), lwd = size)\n  )\n}\n\n\n\n\nchart_01 &lt;-\nggplot(payroll_data_fire_police) +\n  geom_histogram(mapping = aes(x = total_paid, \n                               y = after_stat(density), \n                               fill = \"Density Histogram\"),\n                 binwidth = 10000,\n                 color = \"blue\",\n                 linetype = \"solid\",\n                 # center = 100000,\n                 # boundary = c(-50000,10000),\n                 # bo==\n                 )+\n  geom_density(mapping = aes(x = total_paid, \n                             color = \"Density Curve\"),\n               lwd = 1.2,\n               key_glyph = draw_key_path\n               ) +\n  geom_function(fun = dnorm,\n                aes(x = total_paid, \n                    color = \"Normal Curve\"), \n                lwd= 1.2,\n                args = list(mean = mean(payroll_data_fire_police$total_paid, na.rm = TRUE),\n                            sd = sd(payroll_data_fire_police$total_paid, na.rm = TRUE)),\n                ) +\n  scale_color_manual(values = c(\"Density Curve\" = \"red\", \"Normal Curve\" = \"limegreen\")) +\n  scale_fill_manual(values = c(\"Density Histogram\" = \"lightblue\")) +\n  scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-50000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 25000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  labs(title = \"Combined Density Histogram of Salary Paid for Fire and Police Departments\",\n       x = \"Salary Paid\",\n       y = \"Density\",\n       color = \"Curves\",\n       fill = \"Bars\", \n       # caption = \"Blue: Histogram, Red: Data Density Curve, Green: Normal Curve\"\n       ) +\n  # theme_minimal() +\n  theme(text = element_text(size = 14))+\n  theme(legend.position = \"none\")\n\n\n\n\n\nchart_02 &lt;-\n# Plot\nggplot(payroll_data_fire_police) +\n  geom_histogram(\n    mapping = aes(x = total_paid, y = after_stat(density), fill = \"Density Histogram\"),\n    binwidth = 10000,\n    color = \"blue\",\n    linetype = \"solid\"\n  ) +\n  geom_density(\n    mapping = aes(x = total_paid, color = \"Density Curve\"),\n    lwd = 1.2,\n    key_glyph = draw_key_path\n  ) +\n  geom_line(\n    data = normal_curve,\n    aes(x = x, y = y, color = \"Normal Curve\"),\n    lwd = 1.2\n  ) +\n    geom_vline(\n    data = facet_stats,\n    aes(xintercept = mean_total_paid, color = \"Mean Reference Line\"),\n    linetype = \"dashed\",\n    show.legend = TRUE,key_glyph = \"path\"\n  ) +\n  geom_text(\n    data = facet_stats,\n    aes(\n      x = mean_total_paid,\n      y = 0.00001,  # Adjust position for label\n      label = scales::label_number(scale = 1 / 1000, suffix = \"k\")(mean_total_paid)\n    ),\n    inherit.aes = FALSE,\n    color = \"purple\",\n    size = 6,\n    angle = 90,  # Rotate text vertically\n    vjust = 1.5,\n    hjust = 0.6\n  ) +\n  facet_wrap(~ agency_name) +\n  # scale_color_manual(values = c(\"Density Curve\" = \"red\", \"Normal Curve\" = \"limegreen\", \"Mean Reference Line\" = \"purple\")) +\n  scale_color_manual(\n    values = c(\n      \"Density Curve\" = \"red\",\n      \"Normal Curve\" = \"limegreen\",\n      \"Mean Reference Line\" = \"purple\"\n    ),\n    guide = guide_legend(override.aes = list(\n      `Density Curve` = list(linetype = \"solid\"),\n      `Normal Curve` = list(linetype = \"solid\"),\n      `Mean Line` = list(linetype = \"solid\")\n    ))\n  ) +\n  scale_fill_manual(values = c(\"Density Histogram\" = \"lightblue\")) +\n  scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-50000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 50000),\n    labels = scales::label_number(scale = 1 / 1000, suffix = \"k\")\n  ) +\n  labs(\n    title = \"Density Histogram of Salary Paid per Agency\",\n    x = \"Salary Paid\",\n    y = \"Density\",\n    color = \"Curves\",\n    fill = \"Bars\",\n    caption = \"Salary Paid includes: Regular, Overtime and Other compensation.\"\n  ) +\n  scale_linetype_manual(name = \"Curves\", values = c(\"Horizontal\",\"solid\")) +\n            guides(fill = guide_legend(override.aes = list(linetype = 0)),\n                   # color = guide_legend(override.aes = list(linetype = c(0,4,5) ))\n                   ) +\n  # theme_minimal() +\n  theme(text = element_text(size = 14))+\n  theme(legend.position = \"bottom\")\n\n\n\n# &lt;!-- #| fig-width: 10 --&gt;\n# &lt;!-- #| fig-height: 10 --&gt;\n# &lt;!-- #| message: false --&gt;\n# &lt;!-- #| warning: false --&gt;\n\n\nchart_01 + chart_02 +\n  plot_layout(ncol = 1) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.2 Isolating the Peaks\nTo separate the three salary peaks, we analyzed the following variables and their key factors:\n\nPay Basis: Per Annum, Per Hour\nEmployment Status: Active, Ceased\nYears of Experience: Time since employment began at the agency\n\nThe rightmost peak corresponds primarily to employees in the Per Annum - Ceased and Per Hour - Active categories.\nThe central and left peaks are associated with Per Annum - Active employees and are influenced by years of experience. Most employees with 0‚Äì5 years of experience earn under $100,000 (central peak). The higher density in the 5‚Äì10-year range suggests reduced hiring in recent years and strong employee retention.\nOver time, the left peak emerges around $100,000 for employees with 0‚Äì5 years of experience and gradually shifts upwards and leftward (toward higher salaries) as experience increases.\nFor employees with 15‚Äì20 years and 20+ years of experience, the Fire Department has a larger proportion in the left peak compared to the central peak, as shown by the visibly greater red area in the left peak on the stacked chart. This highlights that longer-tenured employees tend to earn higher salaries.\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test_2 &lt;-\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year == 2024) |&gt;\n  # filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      # years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 15 ~ \"10-15 years\",\n      years_at_agency &gt; 15 & years_at_agency &lt;= 20 ~ \"15-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"15-20 years\", \"10-15 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\n\n\n# &lt;!-- #| fig-width: 8 --&gt;\n# &lt;!-- #| fig-height: 7 --&gt;\n# &lt;!-- #| message: false --&gt;\n# &lt;!-- #| warning: false --&gt;\n\npayroll_data_fire_police_test_2 |&gt; \n # filter(fiscal_year %in% c(\"2024\")) |&gt;\n  # filter(fiscal_year %in% c(\"2023\")) |&gt;\n  # filter(fiscal_year %in% c(\"2022\")) |&gt;\n  # filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  filter(leave_status_as_of_june_30 %in% c(\"ACTIVE\",\"CEASED\")) |&gt;\n  filter(pay_basis %in% c(\"per Annum\",\"per Hour\")) |&gt;\n  filter(!years_band_group %in% c(NA)) |&gt;\n  # filter(pay_basis == \"per Annum\") |&gt;\n  # filter(pay_basis == \"per Hour\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"P\\\\.O\\\\.\")) |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER\")) |&gt;\n  mutate(pay_basis_and_leave = paste0(pay_basis,\" - \",leave_status_as_of_june_30)) |&gt; \n  filter(pay_basis_and_leave %in% c(\"per Annum - ACTIVE\",\"per Annum - CEASED\",\"per Hour - ACTIVE\")) |&gt;\n\n\n\nggplot() +\n  geom_density(mapping = aes(x = total_paid,after_stat(count),fill=agency_name),\n               alpha = 0.5,\n               # na.rm = TRUE,\n               # trim =TRUE,\n               # stat = \"density\",\n                position = \"stack\",\n               bounds = c(-50000,300000)\n               ) +\n  # scale_fill_manual(values = c(\"In state\" = \"yellow\",\n  #                              \"Out of state\" = \"red\",\n  #                              \"In district\" = \"cyan\")) +\n  facet_grid(years_band_group ~ pay_basis_and_leave)+\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\"))+\n  labs(title = \"Salary paid per Pay Basis over years of experience\",\n       x = \"Salary Paid\",\n       y = \"Density\",\n       fill = \"Agency\",\n       caption = \"Pay Basis: per Annum, per Hour. ACTIVE and CEASED refer to the person's employment contract status.\"\n       )+\n  # theme_minimal() +\n  scale_x_continuous(\n    limits = c(-15000, 250000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\"),\n    # expand = expansion(add = c(10, 0))\n  ) +\n  theme_light() +\n  # theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    panel.grid.minor.x = element_blank(),\n    panel.grid.minor.y = element_blank(),\n    panel.grid.major.y = element_blank(),\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.3.3 Ten Years of Salaries\nThe distribution of salaries paid shows small variations over most of the 10-year period, except for a few distinct years where notable changes occur in each agency‚Äôs density.\nFor the Fire Department, the most significant change begins in 2022. There is a noticeable increase in employees receiving higher compensation (evidenced by the curve stretching and the left peak shifting further left). Additionally, there is a surge in employees receiving lower salaries, creating a bump in the right area of the curve.\nFor the Police Department, 2024 brings a dramatic shift in the salary curve. A new bump appears on the right, representing a large number of employees earning less than $25,000. This is primarily associated with Per Annum - Ceased police officers in 2024. At the same time, the left peak shifts further left, reflecting higher compensation for some employees.\n\n\nCode\npayroll_data_fire_police |&gt; \n  # filter(fiscal_year %in% c(2023,2024)) |&gt; \n  mutate(fiscal_year_name = as.character(fiscal_year)) |&gt; \nggplot() +\n  geom_density_ridges(mapping= aes(x = total_paid,\n                                   y = fiscal_year_name,\n                                   color = agency_name,\n                                   fill = agency_name,\n                                   ),\n                      alpha=0.15,\n                      bandwidth = 10000,\n                      # jittered_points = TRUE,\n                      # position = position_raincloud(adjust_vlines = TRUE),\n                      position = \"raincloud\",\n                      quantiles = 2, quantile_lines = TRUE,\n                      vline_width = 1, vline_color = \"darkgreen\",\n                      # point_alpha = 0.01,\n                      # point_size = 0.001,\n                      # color='deepskyblue4',\n                      rel_min_height = 0.002,\n                      ) +\n  facet_wrap(~ agency_name) +\n  # facet_grid(agency_name~pay_basis) +\n   scale_x_continuous(\n    limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  scale_y_discrete(\n    expand = expansion(add = c(0.1, 1.5)) # Add space above the highest category\n  ) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"deepskyblue3\", \"FIRE DEPARTMENT\" = \"#f94144\")\n  ) +\n  labs(title = \"Ridgeline density plot of Salary Paid by Fiscal Year\",\n       x = \"Salary Paid\",\n       y = \"Fiscal Year\",\n       color = \"Agency\",\n       fill = \"Agency\",\n       caption = \"Salary Paid includes: Regular, Overtime and Other compensation.\\nGreen Vertical Line: Mean of each density curve.\")+\n    theme_minimal() +\n  # scale_linetype_manual(name = \"Curves\", values = c(\"Horizontal\",\"solid\")) +\n            guides(fill = guide_legend(override.aes = list(linetype = 0)))+\ntheme(\n    legend.position = \"bottom\",\n    # plot.margin = margin(t = 200, r = 5, b = 5, l = 5) # Add top margin (t = 20)\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#why-is-2024-so-high",
    "href": "results.html#why-is-2024-so-high",
    "title": "3¬† Results",
    "section": "3.4 Why Is 2024 So High?",
    "text": "3.4 Why Is 2024 So High?\nThe total salary paid by the Police Department in 2024 is unusually high. Comparing 2023 and 2024, we see an increase of 7,285 employees receiving salaries and a $2 billion rise in total compensation.\nAnalyzing the total salary differences by position reveals that the top 10 positions with the highest increases account for 97% of the overall compensation difference.\n\n\nCode\npayroll_data_fire_police |&gt; \n  filter(fiscal_year %in% c(\"2024\", \"2023\")) |&gt;\n  filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  group_by(fiscal_year, title_description) |&gt; \n  summarise(\n    total_paid = sum(total_paid, na.rm = TRUE),\n    .groups = 'drop'\n  ) |&gt;\n  pivot_wider(names_from = fiscal_year, values_from = total_paid) |&gt; \n  mutate(\n    difference = `2024` - `2023`,\n    difference_perc = (`2024` - `2023`) / `2023` * 100\n  ) |&gt;\n  filter(difference &gt; 0) |&gt;\n  arrange(desc(difference)) |&gt; \n  mutate(\n    label = ifelse(row_number() &lt;= 10, title_description, NA),  # Add labels for top 10\n    is_top10 = factor(row_number() &lt;= 10, levels = c(TRUE, FALSE), labels = c(\"Top 10\", \"Other Job Titles\")) # Custom order\n   ) |&gt; \n  ggplot() +\n  geom_point(\n    mapping = aes(\n      x = difference, \n      y = difference_perc, \n      fill = difference, \n      color = is_top10\n    ),\n    size = 3,\n    alpha = 0.7,\n    stroke = 0.6,\n    na.rm = TRUE,\n    shape = 21 # Use shape 21 to apply both color and fill\n  ) +\n  geom_label_repel(\n    aes(\n      x = difference,\n      y = difference_perc,\n      label = label\n    ),\n    na.rm = TRUE,\n    size = 3,      # Text size\n    box.padding = 0.35, # Padding around text box\n    point.padding = 0.3, # Space between point and label\n    segment.color = \"grey50\", # Line color connecting label to point\n    max.overlaps = 10,  # Limits overlapping labels\n    max.iter = 10000,\n    nudge_y = 190,\n    # nudge_x = 1,\n    force = 170,\n    # force_pull = 1,\n  ) +\n  scale_fill_distiller(\n    palette = \"Blues\", \n    direction = 1, \n    limits = c(0, 7000000),\n    # limits = c(0, 200000000)\n    # oob = scales::oob_squish, # Ensures values outside the range are treated properly\n    na.value = \"orange\",\n    labels = scales::label_number(scale = 1 / 1000000, suffix = \"M\"), # Display in millions\n    breaks = c(0, 5000000, 10000000), # Custom ticks\n    name = \"Salary Paid Difference YoY\", # Legend title\n    guide = \"none\" \n  ) +\n  scale_color_manual(\n    values = c(\"Top 10\" = \"orange\", \"Other Job Titles\" = 'deepskyblue3'), # Red for top 10, no fill for others\n    # labels = c(\"TRUE\" = \"Top 10\", \"FALSE\" = \"Other Job Titles\"), # Custom labels\n     # alpha = c(\"TRUE\" = 1, \"FALSE\" = 0),\n    guide = \"none\" # Remove legend for fill\n  ) +\n  labs(\n    x = \"Salary Paid Diffence Year over Year\", \n    y = \"Percentage Difference Year over Year\", \n    title = \"Salary Paid Diffence between 2023 and 2024\", \n    color = \"Positions contributing to the Total Salary Paid\"\n  ) +\n  # geom_vline(xintercept=0,color='grey')+\n  scale_x_log10(\n    # labels = scales::label_comma(),\n    # limits = c(-100000, 300000),\n    breaks = c(0, 10000,100000, 1000000, 10000000, 100000000,1000000000,10000000000),\n    labels = c(\"0\",\"10K\",\"100K\", \"1M\", \"10M\", \"100M\",\"1B\",\"10B\"),\n    # expand = expansion(add = c(1, 0))\n                ) +\n  scale_y_continuous(\n    limits = c(0, 300),\n     labels = scales::label_percent(scale = 1, suffix = \"%\") # Add % suffix\n  ) +\n  guides(color = guide_legend(override.aes = list(size = 4))) +\n  theme_minimal() +\n  # theme_light() +\n  theme(\n    panel.grid.minor.x = element_blank(), # Remove minor grid lines on x-axis\n    legend.position = \"bottom\"           # Move legend to bottom\n  )\n\n\n\n\n\n\n\n\n\n\n\n\nNotably, the Police Officer position alone added 6,728 employees in 2024, accounting for 92% of the increase in staff receiving salaries.\nHowever, this surge in new hires is not the sole reason for the $1.4 billion rise in salaries observed for this position, as shown in the chart above. The overall increase in salary payouts across all Police Officers and related positions between 2023 and 2024 also significantly contributed to the higher total paid compensation.\n\n\nCode\nlibrary(RColorBrewer)\n\npayroll_data_fire_police |&gt; \n  filter(fiscal_year %in% c(\"2024\",\"2023\")) |&gt;\n  filter(agency_name == \"POLICE DEPARTMENT\") |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  # filter(str_detect(title_description, \"POLICE OFFICER|P\\\\.O\\\\.\")) |&gt; \n  group_by(fiscal_year,title_description) |&gt; \n  summarise(\n    total_records = n(),\n    # total_paid = sum(total_paid),\n    .groups = 'drop'\n  ) |&gt;\n  pivot_wider(names_from = fiscal_year, values_from = total_records) |&gt; \n  mutate(difference = `2024`-`2023`,\n         difference_perc = (`2024`-`2023`)/`2023` * 100,) |&gt; \n  # arrange(difference)\n  # arrange(desc(`difference_perc`))\n  arrange(desc(`difference`)) |&gt; \n  dplyr::select(title_description,difference) |&gt; \n  mutate(\n    title_description = ifelse(row_number() &lt;= 10, title_description, \"Other\")\n  ) |&gt; \n  group_by(title_description) |&gt; \n  summarise(\n    total_difference = sum(difference, na.rm=TRUE),\n    .groups = 'drop'\n  ) |&gt; \n  arrange(desc(total_difference)) |&gt; \nmutate(\n    fill_color = ifelse(\n      title_description == \"Other\", \n      \"gray\", \n      c(\"#03045eff\", \"#023e8aff\", \"#0077b6ff\", \"#0096c7ff\", \"#00a5d0ff\", \"#00b4d8ff\", \"#48cae4ff\", \"#90e0efff\", \"#ade8f4ff\", \"#caf0f8ff\")[rank(-total_difference)]\n    )\n  ) |&gt; \n\n# Create the bar chart\nggplot(aes(\n  y = reorder(title_description, ifelse(title_description == \"Other\", -Inf, total_difference)),\n  x = total_difference,\n  fill = fill_color\n)) +\n  geom_bar(stat = \"identity\", show.legend = FALSE) +\n  geom_text(\n    aes(\n      label = total_difference,\n      hjust = ifelse(total_difference &gt; 0, -0.1, 1.1),\n    ),\n    # position = position_stack(vjust = 0.5),\n    # hjust = -1.2,\n    \n    size = 3, # Adjust text size\n    color = \"skyblue4\" # Text color\n  ) +\n  scale_fill_identity() + # Use identity to apply pre-assigned colors\n  # coord_flip() +\n  labs(\n    title = \"Total Employee Difference Between 2023 and 2024\",\n    y = \"Position\",\n    x = \"Number of Employees\"\n  ) +\n  scale_x_continuous(\n    limits = c(-1000, 7500),\n    expand = expansion(add = c(1000,0))) +\n  # theme_minimal() +\n  # theme_classic() +\n  theme_light() +\n  theme(\n    axis.text.y = element_text(size = 10),\n    axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    panel.grid.minor.x = element_blank(),\n    panel.grid.major.y = element_blank(),\n    plot.margin = margin(10, 20, 10, 20),\n    plot.title.position = \"plot\",\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#the-more-i-work-the-more-i-get-paid",
    "href": "results.html#the-more-i-work-the-more-i-get-paid",
    "title": "3¬† Results",
    "section": "3.5 The More I Work, the More I Get Paid",
    "text": "3.5 The More I Work, the More I Get Paid\nOur next analysis focuses on Years of Experience groups and their relationship to Salary ranges, which include Regular pay, Overtime, and Other compensations. Let‚Äôs take a look at the 2024 fiscal year.\nFor both departments, the majority of employees in the 0‚Äì5 years of experience group earn less than $100,000. In the next group (5‚Äì10 years), we observe a notable presence of employees earning between $150,000 and $200,000, with the Fire Department having a higher percentage of employees in this range compared to others. Additionally, there are employees in the $200,000‚Äì$250,000 range within this group.\nThe 10‚Äì20 years of experience group shows the highest proportion of employees in the $200,000‚Äì$250,000 range, and we also see some employees making $250,000 or more.\nThe 20+ years group includes employees across all salary ranges. Interestingly, both agencies have a number of employees in this group earning less than $50,000. For the Fire Department, the larger salary ranges for this group are $200,000‚Äì$250,000 and $250,000+.\nOverall, while both departments show a clear trend of higher salaries with more years of experience, the Fire Department has a higher proportion of employees with extensive experience compared to the Police Department. This suggests a more experienced workforce in the Fire Department relative to the Police Department.\n\n\nCode\nrange_band= 50000\n\npayroll_data_fire_police_test &lt;-\npayroll_data_fire_police |&gt; \n  filter(fiscal_year == 2024) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n   mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n    mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \nmutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\nyears_band_group = years_band)\n\n\n\npayroll_data_fire_police_pay_range_frequency &lt;- \n  payroll_data_fire_police_test |&gt; \n  # select(total_paid_group,flag_regular,flag_overtime,flag_other,agency_name,total_paid_group_fill) |&gt; \n  # select(flag_regular,flag_overtime,flag_other,total_paid_group,agency_name,total_paid_group_fill) |&gt;\n  # select(work_location_borough,flag_overtime,total_paid_group,agency_name,total_paid_group_fill) |&gt;\ndplyr::select(years_band,total_paid_group,agency_name,total_paid_group_fill,years_band_group,work_location_borough) |&gt;\n  group_by(across(everything())) |&gt; \n  summarise(frequency = n(), .groups = 'drop')\n\n# payroll_data_fire_police_pay_range_frequency &lt;-\n#   payroll_data_fire_police_pay_range_frequency |&gt; \n#   mutate(total_paid_group_fill = total_paid_group)\n\nessay_grades_frequency_lode = to_lodes_form(payroll_data_fire_police_pay_range_frequency, axes = 1:2)\nessay_grades_frequency_lode$x &lt;- factor(essay_grades_frequency_lode$x,\n                                        # labels = c(1,                                                   \"Total\")\n)\n\n\n\nlibrary(scales)\n\nessay_grades_frequency_lode &lt;- essay_grades_frequency_lode |&gt; \n  mutate(\n    stratum_width = ifelse(stratum == \"Total\", 2, 1) # Replace \"LastStratumName\" with the actual name\n  )\n\nggplot(essay_grades_frequency_lode, \n       aes(alluvium=alluvium, x=x, stratum=stratum, y=frequency)) +\n  # geom_flow(width = 0.5) +\n  # geom_alluvium(decreasing = TRUE)+\n  geom_alluvium(aes(fill = total_paid_group_fill), alpha = 0.8,\n                # width = 0.5\n                ) +\n  # geom_lode() +\n  \n  # geom_stratum(color = \"#00509d\",\n  #              fill='white',\n  #              linewidth = 1.5,\n  #              aes(fill = NA),\n  #              alpha = 0.5) +\n  geom_stratum(aes(fill = total_paid_group_fill),\n               # width = c(0.5,0.5,0.5,2),\n               # width = 0.7,\n               # width =ifelse(as.character(total_paid_group_fill) == 4, 3, NA),\n               # position = \"jitter\",\n               ) +\n   geom_label(stat = \"stratum\", \n              # aes(label = after_stat(stratum)),\n              aes(label = ifelse(as.numeric(x) != 2, as.character(stratum), NA) ),\n              size =3,\n              ) +\n  # geom_text(stat = \"stratum\",\n  #           aes(label = paste(after_stat(stratum)\n  #                             # ,                              \"\\n\" ,after_stat(count)\n  #                             )),\n  #            # aes(label = ifelse(as.numeric(x) != 4, as.character(stratum), NA) ),\n  #           hjust = 0.5,\n  #           size = 3\n  #           ) +\n  scale_fill_brewer(palette = \"Spectral\", direction = -1, na.translate = FALSE) +\n   scale_x_discrete(                   \n     expand = c(.1, .1),\n     labels = c(\"years_band\" = \"Years of Experience\", \n                  \"total_paid_group\" = \"Salary Range\")\n     ) +\n# ggrepel::geom_text_repel(\n#   aes(label = ifelse(as.numeric(x) == 2, as.character(stratum), NA) ),\n#   stat = \"stratum\",\n#   size = 3, direction = \"y\", nudge_x = 1.2\n# ) +\nscale_y_continuous(labels = label_number(scale_cut = cut_short_scale())) +\n  ggrepel::geom_label_repel(\n aes(label = ifelse(as.numeric(x) == 2, as.character(stratum), NA)),\n  stat = \"stratum\",\n  size = 3,\n  direction = \"y\",\n  nudge_x = .8,\n  box.padding = 0.3, # Padding around the text\n  label.padding = unit(0.25, \"lines\"), # Padding inside the box\n  label.size = 0.5, # Border thickness\n  label.r = unit(0.15, \"lines\"), # Corner radius of the box\n  fill = \"white\", # Background color for the label\n  color = \"black\" # Text color\n) +\n  facet_wrap(~ agency_name, scales = \"free\") +\n# facet_wrap(~ work_location_borough, scales = \"free_y\") +\n  # facet_grid(agency_name ~ ., scales = \"free\") +\n# facet_wrap(~ agency_name, scales = \"free_y\") +\n# facet_grid(years_band_group ~ agency_name, scales = \"free_y\") +\n# facet_grid(work_location_borough ~ agency_name, scales = \"free_y\") +\n# work_location_borough\n # facet_wrap(~ years_band_group + agency_name, scales = \"free_y\") + \n  labs(title = \"Exploring the Relationship Between Years of Experience and Salary Ranges\",\n       x = \"\",\n       y = \"Number of Employees\",\n       fill=\"Salary Range\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\",\n         panel.spacing = unit(3, \"lines\"),\n        legend.direction = \"horizontal\",\n        legend.box = \"horizontal\", \n        legend.text = element_text(size = 10) ,\n        )+\n  guides(\n    fill = guide_legend(\n      nrow = 1,                      # Force legend items into one row\n      # keywidth = 1.5, keyheight = 0.5 # Adjust key size for spacing\n    )\n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#who-gets-paid-the-most",
    "href": "results.html#who-gets-paid-the-most",
    "title": "3¬† Results",
    "section": "3.6 Who Gets Paid the Most?",
    "text": "3.6 Who Gets Paid the Most?\n\n3.6.1 Employees Earning Over $250K\nWhen analyzing 2024 employees earning more than $250K, we can break down their total salary into three categories: Regular pay, Overtime, and Other compensation.\nFor those earning over $200K in Regular pay, it‚Äôs clear that they generally do not receive Overtime compensation, although some do receive Other compensation.\nEmployees earning between $100K and $200K in regular pay, tend to earn significant Overtime ranging from $60K to $130K. This Overtime is the main factor contributing to their final salary being above $250K. Additionally, they receive Other compensation, ranging from $25K to $50K.\nInterestingly, only 9 employees earning less than $100K in Regular pay received total compensation over $250K. Of these, 3 follow a similar pattern to the previous group (earning significant Overtime), while 6 are outliers who receive no Regular or Overtime pay but have very high Other compensation.\n\nSalary Breakdown - CombinedSalary Breakdown - Faceted by Range\n\n\n\n\nCode\npayroll_data_fire_police_chart_2 &lt;-\n  payroll_data_fire_police |&gt; \n  filter(fiscal_year == 2024) |&gt;\n  # filter(title_description %in% c(\"POLICE OFFICER\",\"FIREFIGHTER\")) |&gt;\n  # filter(leave_status_as_of_june_30 == \"ACTIVE\") |&gt;\n  mutate(\n    flag_regular = ifelse(regular_gross_paid == 0, \"No\", \"Yes\"),\n    flag_overtime = ifelse(total_ot_paid == 0, \"No\", \"Yes\"),\n    flag_other = ifelse(total_other_pay == 0, \"No\", \"Yes\")\n  ) |&gt; \n  mutate(\n    # Define the range for breaks, including the floor of minimum to handle negative values\n    total_paid_group = cut(\n      total_paid,\n      breaks = seq(\n        floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n        ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n        by = range_band\n      ),\n      labels = paste0(\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band - 1) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k-\",\n        seq(\n          floor(min(total_paid, na.rm = TRUE) / range_band) * range_band + range_band, \n          ceiling(max(total_paid, na.rm = TRUE) / range_band) * range_band,\n          by = range_band\n        ) / 1000,\n        \"k\"\n      ),\n      include.lowest = TRUE,\n      right = FALSE\n    )\n  ) |&gt; \n  mutate(\n    total_paid_group = recode(\n      total_paid_group,\n      \"-200k--150k\" = \"Less than 0\",\n      \"-150k--100k\" = \"Less than 0\",\n      \"-100k--50k\" = \"Less than 0\",\n      \"-50k-0k\" = \"Less than 0\",\n      \"0k-50k\" = \"0k-50k\",\n      \"50k-100k\" = \"50k-100k\",\n      \"100k-150k\" = \"100k-150k\",\n      \"150k-200k\" = \"150k-200k\",\n      \"200k-250k\" = \"200k-250k\",\n      \"250k-300k\" = \"250k and above\",\n      \"300k-350k\" = \"250k and above\",\n      \"350k-400k\" = \"250k and above\",\n      \"400k-450k\" = \"250k and above\",\n      \"450k-500k\" = \"250k and above\",\n      \"500k-550k\" = \"250k and above\",\n      \"550k-600k\" = \"250k and above\",\n      \"600k-650k\" = \"250k and above\"\n    ),\n    total_paid_group = factor(total_paid_group, \n                              levels = c(\"250k and above\", \"200k-250k\", \n                                         \"150k-200k\", \"100k-150k\", \"50k-100k\", \n                                         \"0k-50k\", \"Less than 0\"))\n  ) |&gt; \n  mutate(\n    flag_regular = factor(flag_regular, levels = c(\"Yes\", \"No\")),\n    flag_overtime = factor(flag_overtime, levels = c(\"Yes\", \"No\")),\n  ) |&gt; \n  mutate(\n    years_at_agency = 2024 - agency_start_date_year,  # Calculate the years worked\n    years_band = case_when(\n      years_at_agency &gt;= 0 & years_at_agency &lt;= 5 ~ \"0-5 years\",\n      years_at_agency &gt; 5 & years_at_agency &lt;= 10 ~ \"5-10 years\",\n      years_at_agency &gt; 10 & years_at_agency &lt;= 20 ~ \"10-20 years\",\n      years_at_agency &gt; 20 ~ \"20+ years\",\n      TRUE ~ \"Unknown\"  # In case of any missing or incorrect data\n    ),\n    years_band = factor(years_band, levels = c(\"20+ years\", \"10-20 years\", \"5-10 years\", \"0-5 years\"))\n  ) |&gt; \n  mutate(total_paid_group_fill = total_paid_group,\n         years_band_group = years_band)\n\n\n# payroll_data_fire_police_chart_2 |&gt; \n  # filter(total_paid_group == \"250k and above\") |&gt; \n  # select(title_description) |&gt; distinct() |&gt; pull()\n\n\n\n\n\ntitle_mapping &lt;- c(\n  \"EXECUTIVE AGENCY COUNSEL\" = \"EXEC AGENCY CNSL\",\n  \"COMPUTER SYSTEMS MANAGER\" = \"COMPUTER SYS MGR\",\n  \"COUNSEL TO THE POLICE COMMISSIONER\" = \"POLICE CNSL\",\n  \"ADMINISTRATIVE STAFF ANALYST\" = \"ADMIN STAFF ANALYST\",\n  \"CAPTAIN - CHIEF OF STAFF\" = \"CAPT - CHIEF STAFF\",\n  \"DEPUTY COMMISSIONER\" = \"DEPUTY COMM\",\n  \"CAPTAIN DETAILED AS ASSISTANT CHIEF\" = \"CAPT - ASST CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF TRAINING\" = \"CAPT - CHIEF TRAINING\",\n  \"COMMISSIONER\" = \"COMMISSIONER\",\n  \"CAPTAIN DETAILED AS CHIEF OF SPECIAL OPERATIONS\" = \"CAPT - SPEC OPS CHIEF\",\n  \"CAPTAIN: CHIEF OF TRANSPORTATION BUREAU\" = \"CAPT - TRANS CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF DETECTIVES\" = \"CAPT - DET CHIEF\",\n  \"CHIEF OF INFORMATION TECHNOLOGY\" = \"IT CHIEF\",\n  \"CAPT DET CHIEF OF THE HOUSING BUREAU\" = \"CAPT DET - HOUSING\",\n  \"CAPT DET CHIEF OF THE TRANSIT BUREAU\" = \"CAPT DET - TRANSIT\",\n  \"CAPT DET CHIEF OF INTERNAL AFFAIRS\" = \"CAPT DET - INTERNAL AFF\",\n  \"CAPTAIN DETAILED AS CHIEF OF INTERAGENCY OPERATIONS\" = \"CAPT - INTERAGENCY OPS\",\n  \"CAPTAIN DETAILED AS CHIEF OF CRIME CONTROL STRATEGIES\" = \"CAPT - CRIME CTRL\",\n  \"SUPERVISING CHIEF SURGEON\" = \"CHIEF SURGEON\",\n  \"CAPT DET CHIEF OF DEPARTMENT\" = \"CAPT DET - DEPT CHIEF\",\n  \"SENIOR STATIONARY ENGINEER\" = \"SR STAT ENG\",\n  \"CAPTAIN DETAILED AS CHIEF OF PATROL\" = \"CAPT - PATROL CHIEF\",\n  \"CAPTAIN DETAILED AS CHIEF OF PERSONNEL\" = \"CAPT - PERS CHIEF\",\n  \"SUPERVISOR OF MECHANICS\" = \"SUPV MECHANICS\",\n  \"AGENCY ATTORNEY\" = \"AGENCY ATTY\",\n  \"FIRST DEPUTY COMMISSIONER\" = \"1ST DEPUTY COMM\",\n  \"POLICE OFFICER\" = \"POLICE OFFICER\",\n  \"P.O. DA DET GR3\" = \"P.O. DA DET GR3\",\n  \"P.O. DET SPEC\" = \"P.O. DET SPEC\",\n  \"LIEUTENANT\" = \"LIEUTENANT\",\n  \"CAPTAIN\" = \"CAPTAIN\",\n  \"OILER\" = \"OILER\",\n  \"SERGEANT-D/A SPECIAL ASSIGNMENT\" = \"SERG-SPEC ASSIGN\",\n  \"SERGEANT-\" = \"SERGEANT\",\n  \"POLICE OFFICER D/A DETECTIVE 2ND GR\" = \"P.O. DET 2ND GR\",\n  \"POLICE OFFICER D/A DETECTIVE 1ST GR\" = \"P.O. DET 1ST GR\",\n  \"LIEUTENANT D/A SPECIAL ASSIGNMENT\" = \"LIEUT-SPEC ASSIGN\",\n  \"LIEUTENANT D/A COMMANDER OF DETECTIVE SQUAD\" = \"LIEUT-DETECT CMD\",\n  \"STATIONARY ENGINEER\" = \"STAT ENG\",\n  \"CAPTAIN D/A DEPUTY CHIEF\" = \"CAPT-DEPUTY CHIEF\",\n  \"SERGEANT-D/A SUPERVISOR DETECTIVE SQUAD\" = \"SERG-DETECT CMD\",\n  \"CAPTAIN D/A INSPECTOR\" = \"CAPT-INSPECTOR\",\n  \"FIRE MEDICAL OFFICER\" = \"FIRE MED OFFICER\",\n  \"ADMINISTRATOR OF MEDICAL AFFAIRS\" = \"ADMIN MED AFFAIRS\",\n  \"DEPUTY ASSISTANT CHIEF OF DEPARTMENT\" = \"DEP ASST CHIEF\",\n  \"ASSISTANT CHIEF OF DEPARTMENT\" = \"ASST CHIEF\",\n  \"CHIEF OF DEPARTMENT\" = \"CHIEF OF DEPT\",\n  \"SUPERVISING EMERGENCY MEDICAL SERVICE SPECIALIST\" = \"SUPV EMS SPEC\",\n  \"ASSISTANT CHIEF FIRE MARSHAL\" = \"ASST CHIEF MARSHAL\",\n  \"SUPERVISOR ELECTRICIAN\" = \"SUPV ELECTRICIAN\",\n  \"CHIEF FIRE MARSHAL\" = \"CHIEF MARSHAL\",\n  \"FIREFIGHTER\" = \"FIREFIGHTER\",\n  \"MARINE ENGINEER\" = \"MARINE ENGINEER\",\n  \"WIPER\" = \"WIPER\",\n  \"PILOT\" = \"PILOT\",\n  \"BATTALION CHIEF\" = \"BATTALION CHIEF\",\n  \"SUPERVISING FIRE MARSHAL\" = \"SUPV FIRE MARSHAL\",\n  \"FIRE MARSHAL\" = \"FIRE MARSHAL\",\n  \"DEPUTY CHIEF\" = \"DEPUTY CHIEF\",\n  \"AUTO MECHANIC\" = \"AUTO MECHANIC\"\n)\n\n\n\n\npayroll_data_fire_police_chart_2_250 &lt;-\npayroll_data_fire_police_chart_2 |&gt; \n  filter(total_paid_group == \"250k and above\") |&gt; \n  # filter(total_paid_group == \"0k-50k\") |&gt; \n  mutate(title_description_short = title_mapping[title_description]) |&gt; \n  mutate(agency_name_order = ifelse(agency_name == \"FIRE DEPARTMENT\", \"ag-002\",\"ag-001\"))\n\n\n# \n# payroll_data_fire_police_chart_2_250 |&gt; \n#   select(title_description_short) |&gt; distinct() |&gt; \n#   arrange(desc(title_description_short)) |&gt; \n#   mutate(order_sequence = paste0(\"000-\",sprintf(\"%05d\", row_number())))\n\ntitle_order_sequence &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  dplyr::select(title_description_short) |&gt; \n  distinct() |&gt; \n  arrange(desc(title_description_short)) |&gt; \n  mutate(order_sequence = paste0(\"000-\", sprintf(\"%05d\", row_number())))\n\n# Perform a left join to add order_sequence\npayroll_data_fire_police_chart_2_250 &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  left_join(title_order_sequence, by = \"title_description_short\")\n\ntitle_description_list &lt;- \n  payroll_data_fire_police_chart_2_250 |&gt; \n  dplyr::select(title_description_short) |&gt; \n  distinct(title_description_short) |&gt; \n  arrange(title_description_short) |&gt; \n  pull(title_description_short)\n\n# View the list\n# print(as.character(title_description_list))\n\n\npayroll_data_fire_police_chart_2_250_selection &lt;-\n  payroll_data_fire_police_chart_2_250 |&gt; \n  # filter(regular_gross_paid &gt;= 250000) |&gt; \n  mutate(agency_name_factor = as.factor(agency_name)) |&gt; \n  mutate(regular_paid_group = as.factor(\n    dplyr::if_else(regular_gross_paid&gt;= 200000, \"200k and above\", \n                   dplyr::if_else(regular_gross_paid&gt;= 100000 & regular_gross_paid&lt; 200000, \"100k-200k\", \n                                      \"Less than 100k\"))\n  )\n         )|&gt; \n  mutate(regular_paid_group = fct_relevel(regular_paid_group, \"200k and above\",\"100k-200k\",\"Less than 100k\")) |&gt; \n  dplyr::select(\n    agency_name_factor,\n    # title_description_short,\n    regular_paid_group,\n    regular_gross_paid,\n    total_ot_paid,\n    total_other_pay,\n    total_paid)\n\nggparcoord(data = payroll_data_fire_police_chart_2_250_selection,\n           columns = 3:6,\n           alphaLines = 0.1,\n           groupColumn = \"regular_paid_group\",\n           # mapping = aes(color = agency_name,fill = I(\"lightblue1\")),\n           scale=\"globalminmax\",\n           # splineFactor = 1, \n           # missing=\"median\",\n           showPoints = TRUE,\n          ) +\n  # geom_hline(yintercept =  2.5, color = \"black\", linetype = \"dashed\") +\n  # geom_hline(yintercept = -2.5, color = \"black\", linetype = \"dashed\") +\n  scale_color_manual(\"regular_paid_group\",\n                     name= 'Regular Pay Range',\n                     # values = c(\"#0496ff\", \"#ade8f4\", \"#023e8a\")) +\n                     values = c(\"#76c893\", \"#d9ed92\", \"#4f772d\")) +\n  labs(x = \"Variables\", \n       y = \"Salary\", \n       title = \"Salary Breakdown for Employees Earning over 250k\") +\n  # guides(alpha = \"none\") + \n  scale_x_discrete(\n    labels = c(\n      \"regular_gross_paid\" = \"Regular Pay\",\n      \"total_ot_paid\" = \"Overtime Pay\",\n      \"total_other_pay\" = \"Other Pay\",\n      \"total_paid\" = \"Total Salary\\n(Regular + Overtime + Other)\"\n    )\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 400000, 100000), # Adjust the breaks\n    labels = scales::label_number(scale = 1 /1000, suffix = \"K\") # Show in 'K' format\n  ) +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police_chart_2_250_selection &lt;-\n  payroll_data_fire_police_chart_2_250 |&gt; \n  # filter(regular_gross_paid &gt;= 250000) |&gt; \n  mutate(agency_name_factor = as.factor(agency_name)) |&gt; \n  mutate(regular_paid_group = as.factor(\n    dplyr::if_else(regular_gross_paid&gt;= 200000, \"200k and above\", \n                   dplyr::if_else(regular_gross_paid&gt;= 100000 & regular_gross_paid&lt; 200000, \"100k-200k\", \n                                      \"Less than 100k\"))\n  )\n         )|&gt; \n  mutate(regular_paid_group = fct_relevel(regular_paid_group, \"200k and above\",\"100k-200k\",\"Less than 100k\")) |&gt; \n  dplyr::select(\n    agency_name_factor,\n    # title_description_short,\n    regular_paid_group,\n    regular_gross_paid,\n    total_ot_paid,\n    total_other_pay,\n    total_paid)\n\nggparcoord(data = payroll_data_fire_police_chart_2_250_selection,\n           columns = 3:6,\n           alphaLines = 0.1,\n           groupColumn = \"regular_paid_group\",\n           # mapping = aes(color = agency_name,fill = I(\"lightblue1\")),\n           scale=\"globalminmax\",\n           # splineFactor = 1, \n           # missing=\"median\",\n           showPoints = TRUE,\n          ) +\n  # geom_hline(yintercept =  2.5, color = \"black\", linetype = \"dashed\") +\n  # geom_hline(yintercept = -2.5, color = \"black\", linetype = \"dashed\") +\n  scale_color_manual(\"regular_paid_group\",\n                     name= 'Regular Pay Range',\n                     # values = c(\"#0496ff\", \"#ade8f4\", \"#023e8a\")) +\n                     values = c(\"#76c893\", \"#d9ed92\", \"#4f772d\")) +\n  labs(x = \"Variables\", \n       y = \"Salary\", \n       title = \"Salary Breakdown for Employees Earning over 250k- Faceted by Range\") +\n  # guides(alpha = \"none\") + \n  facet_wrap(~ regular_paid_group) + \n  scale_x_discrete(\n    labels = c(\n      \"regular_gross_paid\" = \"Regular Pay\",\n      \"total_ot_paid\" = \"Overtime Pay\",\n      \"total_other_pay\" = \"Other Pay\",\n      \"total_paid\" = \"Total Salary\"\n    )\n  ) +\n  scale_y_continuous(\n    breaks = seq(0, 400000, 100000), # Adjust the breaks\n    labels = scales::label_number(scale = 1 /1000, suffix = \"K\") # Show in 'K' format\n  ) +\n  theme_classic()+\n  theme(\n    legend.position = \"bottom\",\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.6.2 Salary Playground\nUsing the same data, you can perform different combinations and scenarios for a deeper analysis. The following interactive parallel coordinates chart provides a detailed breakdown of salary components (Regular, Overtime, Other) for employees earning over $250K, along with their job titles and departments.\n\n\n\n\n\n\nMake a selection in the chart by clicking, holding, and dragging your mouse across each vertical axis.\n\n\n\n\n\n\n\n\nCode\nparcoords(\n  payroll_data_fire_police_chart_2_250[, c(\n    # \"agency_name_order\", \n    \"order_sequence\",\n    \"agency_name_order\", \n    # \"title_description_short\",\n    \"regular_gross_paid\",\n    \"total_ot_paid\",\n    \"total_other_pay\",\n    \"total_paid\"\n  )], \n  rownames = FALSE,\n  brushMode = \"1D-axes\",\n  reorderable = TRUE,\n  queue = TRUE,\n  alpha = 0.25,\n  alphaOnBrushed = 0.1,\n  height = 750,\n  dimensions = list(\n    # outliers_rank = list(\n    #   title = \"outliers_rank\",\n    #   tickValues = c(\"High\",\"Not an Outlier\",\"Low\")\n    # ),\n    agency_name_order = list(\n      title = \"Agency\",\n      tickValues = c(\"FIRE\",\"POLICE\")\n    ),\n    order_sequence = list(\n      title = \"Job Title\",\n      tickValues = as.character(title_description_list)\n    ),\n    regular_gross_paid = list(title = \"Regular Pay\"),\n    total_ot_paid = list(title = \"Overtime Pay\"),\n    total_other_pay = list(title = \"Other Pay\"),\n    total_paid = list(title = \"Total Salary (Reg+Ovt+Oth)\")\n  ),\n  # color = list(\n  #   colorBy = \"outliers_rank\",  \n  #   colorScale = \"scaleOrdinal\",\n  #   colorScheme = outliers_colors\n  # ),\n   color = list(\n    colorBy = \"agency_name_order\",  \n    colorScale = \"scaleOrdinal\",\n    colorScheme = c(\"#0099CC\", \"#f94144\")\n  ),\n  withD3 = TRUE,\n  margin = list(\n    top = 30,    # Adjust top margin\n    right = 40,  # Adjust right margin\n    bottom = 30, # Adjust bottom margin\n    left = 125   # Increase left margin for better spacing\n  )\n)",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#understanding-the-gap-regular-pay-and-total-salary",
    "href": "results.html#understanding-the-gap-regular-pay-and-total-salary",
    "title": "3¬† Results",
    "section": "3.7 Understanding the Gap: Regular Pay and Total Salary",
    "text": "3.7 Understanding the Gap: Regular Pay and Total Salary\nIn this analysis, we explore the gap between Regular Pay and Total Salary for the Top 25 most popular positions by department (ranked by employee count). We will examine three key variables for each position:\n\nRegular Salary Paid: Mean regular salary for each position.\nTotal Salary Paid: Mean salary including Regular, Overtime, and Other Pay.\nRatio: The ratio of Total Salary Paid to Regular Salary Paid.\n\nFor the Fire Department, the percentage of additional compensation (Overtime + Other) varies widely across positions. More than 50% (13 out of 25) of these positions earn less than 25% above their regular pay in additional compensation. However, positions such as Captain and Lieutenant receive more than 70% additional pay on top of their regular salary.\nIn the Police Department, positions earning a mean regular salary below $100K do not receive a high amount of Overtime or Other compensation. All positions in this category earn less than 50% above their regular salary in additional pay. On the other hand, most positions earning a regular salary above $100K see a significant proportion (greater than 50%) of additional compensation to their salaries.\n\n\nCode\ntitle_descriptions_top_fire &lt;-\npayroll_data_fire_police |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  filter(leave_status_as_of_june_30 == 'ACTIVE') |&gt;\n  group_by(agency_name, title_description) |&gt;\n  summarise(\n    Total_records = n(),\n    .groups = \"drop\"\n  ) |&gt;\n  filter(agency_name == 'FIRE DEPARTMENT') |&gt;\n  group_by(agency_name) |&gt;\n  slice_max(order_by = Total_records, n = 25) |&gt;\n  ungroup() |&gt;\n  pull(title_description)\n\n\n\ntitle_descriptions_top_police &lt;-\npayroll_data_fire_police |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  filter(leave_status_as_of_june_30 == 'ACTIVE') |&gt;\n  group_by(agency_name, title_description) |&gt;\n  summarise(\n    Total_records = n(),\n    .groups = \"drop\"\n  ) |&gt;\n  filter(agency_name == 'POLICE DEPARTMENT') |&gt;\n  group_by(agency_name) |&gt;\n  slice_max(order_by = Total_records, n = 25) |&gt;\n  ungroup() |&gt;\n  pull(title_description)\n\ntitle_short_fire &lt;- c(\n  \"FIREFIGHTER\" = \"Firefighter\",\n    \"SUPERVISING EMERGENCY MEDICAL SERVICE SPECIALIST-DPTY CHIEFS\" = \"Supervising EMS Specialist-Dpty Chiefs\",\n  \"EMERGENCY MEDICAL SPECIALIST-EMT\" = \"EMS-EMT\",\n  \"LIEUTENANT\" = \"Lieutenant\",\n  \"EMERGENCY MEDICAL SPECIALIST-PARAMEDIc\" = \"EMS-Paramedic\",\n  \"SUPERVISING EMERGENCY MEDICAL SERVICE SPECIALIST\" = \"Supervising EMS Specialist\",\n  \"CAPTAIN\" = \"Captain\",\n  \"BATTALION CHIEF\" = \"Battalion Chief\",\n  \"ASSOCIATE FIRE PROTECTION INSPECTOR\" = \"Assoc. Fire Protection Inspector\",\n  \"FIRE PROTECTION INSPECTOR\" = \"Fire Protection Inspector\",\n  \"AUTO MECHANIC\" = \"Auto Mechanic\",\n  \"SUPERVISING FIRE ALARM DISPATCHER\" = \"Supervising Fire Alarm Dispatcher\",\n  \"FIRE ALARM DISPATCHER\" = \"Fire Alarm Dispatcher\",\n  \"PRINCIPAL ADMINISTRATIVE ASSOCIATE -  NON SUPVR\" = \"Principal Admin Assoc-Non Supvr\",\n  \"FIRE MARSHAL\" = \"Fire Marshal\",\n  \"FIRE CADET\" = \"Fire Cadet\",\n  \"DEPUTY CHIEF\" = \"Deputy Chief\",\n  \"CLERICAL ASSOCIATE\" = \"Clerical Associate\",\n  \"ADM MANAGER-NON-MGRL\" = \"Admin Manager - Non-Mgr\",\n  \"ADMINISTRATIVE STAFF ANALYST\" = \"Admin Staff Analyst\",\n\n  \"COMMUNICATION ELECTRICIAN\" = \"Communication Electrician\",\n  \"COMPUTER SPECIALIST\" = \"Computer Specialist\",\n  \"SUPERVISING FIRE ALARM DISPATCHER\" = \"Supervising Fire Alarm Dispatcher\",\n  \"SUPERVISOR OF MECHANICS\" = \"Supervisor of Mechanics\",\n  \"CASE - MANAGEMENT NURSE\" = \"Case-Mgmt Nurse\",\n  \"EMERGENCY MEDICAL SPECIALIST TRAINEE\" = \"EMS-Trainee\"\n)\n\nexceptions_proper &lt;- c(\n  \"\\\\bDa\\\\b\" = \"DA\",\n  \"\\\\bP\\\\.o\\\\.\\\\b\" = \"P.O.\",\n  \"P.o.\\\\s\" = \"Police Officer \",\n  \"Ems\\\\s\" = \"EMS \",\n  \"Ems\\\\-\" = \"EMS-\",\n  \"Ems-Emt\" = \"EMS-EMT\"\n)\n\n\n# &lt;!-- #| fig-width: 8 --&gt;\n# &lt;!-- #| fig-height: 10 --&gt;\n# &lt;!-- #| message: false --&gt;\n# &lt;!-- #| warning: false --&gt;\n\n\npayroll_data_fire_police |&gt;\n  filter(fiscal_year == \"2024\") |&gt;\n  # filter(leave_status_as_of_june_30 == 'ACTIVE') |&gt;\n  # filter(title_description %in% title_descriptions_top10) |&gt;\n  # filter(pay_basis == 'per Annum') |&gt;\n  filter((agency_name == 'FIRE DEPARTMENT' & title_description %in% title_descriptions_top_fire) |\n          (agency_name == 'POLICE DEPARTMENT' & title_description %in% title_descriptions_top_police)  ) |&gt;    mutate(\n     title_description = str_replace_all(title_description, title_short_fire)\n   ) |&gt;\n  # group_by(agency_name, title_description) |&gt;\n  mutate(\n    title_description = str_to_title(title_description),\n    title_description = str_remove(title_description, \"-$\"),\n    title_description = str_replace_all(title_description, exceptions_proper)\n  ) |&gt;\n  group_by(agency_name, title_description, pay_basis, work_location_borough) |&gt;\n  group_by(agency_name, title_description, work_location_borough) |&gt;\n  group_by(agency_name, title_description) |&gt;\n  # group_by(agency_name, work_location_borough) |&gt;\n  summarise(\n    Total_records = n(),\n    mean_base_salary = mean(base_salary, na.rm = TRUE),\n    mean_regular_paid = mean(regular_gross_paid, na.rm = TRUE),\n    mean_total_paid = mean(total_paid, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |&gt;\n  arrange(agency_name, desc(Total_records)) |&gt;\n  dplyr::select('agency_name',\n         'title_description',\n         'mean_regular_paid' ,\n         'mean_total_paid') |&gt;\n  # pivot_wider(names_from = tuition_type_factor, values_from = mean_tuition) |&gt;\n  mutate(perc_diff = abs(mean_total_paid - mean_regular_paid) / mean_regular_paid * 100) |&gt;\n  mutate(perc_diff_band = cut(perc_diff,\n                              breaks = c(seq(0, 1000, by = 25), Inf),\n                              include.lowest = TRUE)) |&gt;\nggplot() +\n  geom_bar(aes(x = -perc_diff *2500,\n               y= title_description,\n               fill = perc_diff_band),\n           stat = 'identity',\n           alpha = 1,\n  ) +\n  geom_text(aes(x = -perc_diff * 2500,\n                y = title_description,\n                label = paste0(round(perc_diff, 0), \"%\")),\n            hjust = 1.2,\n            size = 3,\n            color = \"black\",\n            alpha = 0.8,\n            check_overlap=TRUE,\n  ) +\n\n  geom_point(aes(x = mean_total_paid,\n                 y = reorder(title_description, mean_total_paid),\n                 color = \"Total Salary\"),\n             # color = \"#1e6091\",\n             alpha = 1,\n             size = 1.5,\n             stroke=2,\n  ) +\n    geom_segment(aes(x = 0,\n                   xend = mean_total_paid,\n                   y = reorder(title_description, mean_total_paid,),\n                   yend = reorder(title_description, mean_total_paid)),\n               color = \"#1e6091\",\n               alpha=0.5,\n  ) +\n    geom_point(aes(x = mean_regular_paid,\n                 y = reorder(title_description, mean_regular_paid),\n                 color = \"Regular Salary\"),\n             # color = \"deepskyblue3\",\n             size = 1.5,\n             alpha=1,\n             stroke=2,\n  ) +\n  geom_segment(aes(x = 0,\n                   xend = mean_regular_paid,\n                   y = reorder(title_description, mean_regular_paid,),\n                   yend = reorder(title_description, mean_regular_paid)),\n               color = \"deepskyblue3\",\n               alpha=1,\n               \n  ) +\n\n  # geom_text(aes(x = mean_regular_paid,\n  #               y = reorder(title_description, mean_regular_paid),\n  #               label = scales::label_comma()(round(mean_regular_paid, 0))),\n  #           hjust = -0.4,\n  #           size = 3,\n  #           alpha = 0.6,\n  #           check_overlap=TRUE,\n  # ) +\n  # geom_vline(xintercept = c(-250000, -187500, -125000, -62500),\n  #            linetype = \"dashed\",\n  #            color = \"gray50\",\n  #            alpha = 0.2) +\n  facet_grid(fct_infreq(agency_name) ~ .,\n             scales ='free_y',\n             space = 'free_y') +\n  scale_fill_brewer(name = \"% Ratio:\",\n                    palette = \"RdYlGn\",\n                    direction = -1,\n                    na.translate = FALSE) +\n  scale_color_brewer(name = \"% Ratio:\",\n                     palette = \"RdYlGn\",\n                     direction = -1,\n                     na.translate = FALSE) +\n  scale_color_manual(name = \"Dots:\",\n                     values = c(\"Total Salary\" = \"#1e6091\",\n                                \"Regular Salary\" = \"deepskyblue3\")) +\n  # scale_x_continuous(\n  #   limits = c(-250000, 250000),\n  #   name = \"Regular Salary Paid (dots)\",\n  #   labels = function(x) ifelse(x &gt;= 0, scales::label_number()(x), \"\"),\n  #   sec.axis = sec_axis(~./-2500, name = \"% Ratio (bars)\",\n  #                       labels = function(x) ifelse(x &gt;= 0,\n  #                                                   paste0(scales::label_number()(x),\n  #                                                          '%'), \"\"))\n  # ) +\n  scale_x_continuous(\n    limits = c(-250000, 250000),\n    name = \"Salary (dots)\",\n    breaks = c(-250000, -187500, -125000, -62500, 0, 100000,200000), # Custom breaks\n    labels = c(\"\", \"\", \"\", \"\", \"0\",\"100k\",\"200k\"), # Custom labels for breaks\n    sec.axis = sec_axis(~./-2500, name = \"% Ratio (bars)\",\n                        labels = function(x) ifelse(x &gt;= 0,\n                                                    paste0(scales::label_number()(x),\n                                                           '%'), \"\"))\n  ) +\n  labs(\n    # title = \"Ratio of `Total Salary` to `Regular Salary` VS Regular Salary by Job Title, Facet by Agency\",\n    title =  \"Understanding the Gap: Regular Pay and Total Salary\",\n    y = \"Job Titles\",\n    caption = \"% Ratio = Total Salary Paid (Regular + Overtime + Other) / Regular Salary Paid\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    # legend.box = \"vertical\",\n          # legend.position = c(0, 0),             # Place the legend at the bottom left\n  legend.justification = c(1, 1)      ,   # Align the legend to the left\n        panel.border = element_rect(color = \"darkgray\", fill = NA, linewidth = 1),\n        axis.title.x = element_text(hjust = 1),\n        axis.title.x.top = element_text(hjust = 0),\n        plot.title = element_text(hjust = 0),\n  plot.title.position = \"plot\",\n    panel.grid.minor.x = element_blank() ,\n  # plot.title.justification = c(0.5, 0.5) \n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCongratulations! You made it to the end of this section =)\n\n\n\nHere is a quick summary of the charts you saw on this page:\n\nBar Chart Stacked\nMosaic\nBox Plot with Jitter Points\nHistogram\nDensity Curve\nNormal Curve\nDensity Stacked Area\nRidgeline Density\nScatter Plot with Repel Labels\nBar Chart with Lump\nAlluvium\nParallel Coordinates\nParallel Coordinates - Interactive (parcoords)\nLollipop Chart Combo",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#where-do-people-work",
    "href": "results.html#where-do-people-work",
    "title": "3¬† Results",
    "section": "3.2 Where Do People Work?",
    "text": "3.2 Where Do People Work?\nFor the Fire Department, the majority of employees (38%) are based in Brooklyn, while for the Police Department, Manhattan has the highest concentration of employees at 45%. The proportion of salary paid (Regular + Overtime + Other) across locations closely mirrors the employee distribution.\n\n\nCode\npayroll_data_fire_police |&gt;\n  group_by(agency_name, work_location_borough) |&gt;\n  summarise(\n    count_of_employees = n(), \n    total_salary_paid  = sum(total_paid), \n    .groups = 'drop')|&gt;\n  group_by(agency_name) |&gt; # Group by fiscal_year and agency_name for percentage calculations\n  mutate(\n    Employees = count_of_employees / sum(count_of_employees) * 100,\n    `Salary Paid`= total_salary_paid / sum(total_salary_paid) * 100\n  ) |&gt;\n  ungroup() |&gt;\n  pivot_longer(\n    cols = c( `Salary Paid`,Employees),\n    names_to = \"metric\",\n    values_to = \"percentage\"\n  ) |&gt; \n  ggplot(aes(\n    x = percentage,\n    y = fct_rev(metric),\n    fill = fct_rev(work_location_borough)\n  )) +\n  geom_bar(stat = \"identity\", position = \"stack\") + # Stacked bar chart\n  geom_label(\n    aes(\n      label = paste0(round(percentage,0),\"%\"),\n      # hjust = ifelse(percentage &gt; 30, 0, 100),\n      # hjust = ifelse(percentage &gt; 30, 0, 100),\n      # size = if_else(percentage &gt; 30, 3.1, 3),\n    ),\n    position = position_stack(vjust = 0.5),\n    # position = \"identity\",\n    color=\"black\",\n    fill = \"#ffffff\",\n    alignment= \"left\",\n    size = 3,\n  )+\n#   ggrepel::geom_label_repel(\n#  aes(label = paste0(round(percentage,0),\"%\"),),\n#   # stat = \"stratum\",\n#  # position = position_stack(vjust = 0.5),\n#   size = 3,\n#   direction = \"y\",\n#   nudge_x = .8,\n#   box.padding = 0.3, # Padding around the text\n#   label.padding = unit(0.25, \"lines\"), # Padding inside the box\n#   label.size = 0.5, # Border thickness\n#   label.r = unit(0.15, \"lines\"), # Corner radius of the box\n#   fill = \"white\", # Background color for the label\n#   color = \"black\" # Text color\n# ) +\n  facet_wrap(~ agency_name) + # Facet by agency_name\n  # facet_grid(agency_name ~ .) + # Facet by agency_name\n  labs(\n    title = \"Employee and Salary Proportions per Location\",\n    x = \"Percentage of Employees or Salary\",\n    y = \"\",\n    fill = \"Location\"\n  ) +\n   scale_fill_manual(\n    values = c(\n      \"BRONX\" = \"#FF595E\",\n      \"BROOKLYN\" = \"#FFCA3A\",\n      \"MANHATTAN\" = \"#8AC926\",\n      \"QUEENS\" = \"#1982C4\",\n      \"STATEN ISLAND\" = \"#6A4C93\"\n    )\n  ) +\n  scale_x_continuous(expand = expansion(mult = c(0, 0.05))) + # Add padding to x-axis\n  theme_light() +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 12),\n    # axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    anel.grid.minor.x = element_blank() ,\n    legend.position = \"right\",\n    # legend.position = \"bottom\",\n  )+\n  guides(fill = guide_legend(reverse=T))\n\n\n\n\n\n\n\n\n\n\n\nExamining employee proportions per location reveals interesting patterns. Police employees in Manhattan make up the largest group across all locations and agencies. In Brooklyn, the Fire Department accounts for 35.4% of employees, while in Staten Island, Fire employees represent 34.9%, the second-highest proportion relative to Police. The darkest colors in the mosaic chart represent the ranked percentage of each agency‚Äôs presence across all locations (see the Percentages tab for details).\n\nEmployees per LocationEmployees per Location - Percentages\n\n\n\n\nCode\npayroll_data_fire_police_mosaic &lt;-\n  payroll_data_fire_police |&gt; \n  mutate(\n    work_location_borough = as.factor(work_location_borough),\n    agency_name = as.factor(agency_name)\n  ) |&gt; \n  mutate(\n    agency_name_clean = str_remove(agency_name, \" DEPARTMENT\"),\n    work_location_borough_clean = str_replace(work_location_borough, \"RICHMOND\", \"STATEN ISLAND\"),\n    work_location_borough_clean_proper = str_to_title(work_location_borough_clean),\n    work_location_borough_clean_proper = str_replace(work_location_borough_clean_proper, \"Staten Island\", \"S. Island\"),\n  )\n\nlibrary(vcd)\nmosaic(agency_name_clean~work_location_borough_clean_proper, \n       data=payroll_data_fire_police_mosaic,\n       direction=c(\"v\",'h'),\n       highlighting_fill = c(\n         \"#EF3B2C\",\n         \"#4292C6\",\n         \"#A50F15\",\n         \"#9ECAE1\",\n         \"#FC9272\",\n         \"#08519C\",\n         \"#FB6A4A\",\n         \"#2171B5\",\n         \"#CB181D\",\n         \"#6BAED6\" \n       ),\n       main = \"Employees per Location\\n\",\n       main_gp = gpar(cex = 1.4, lineheight = 0.6),\n       split_vertical = TRUE,\n       spacing = spacing_dimequal(c(1.1,1)),\n       # spacing = spacing_increase(start = unit(3, \"lines\"), rate = 1.5),\n       labeling = labeling_values,\n       rot_labels=c(30,0,0,90),\n       offset_label =c(0.6,5,0, 0),\n       labeling_args = list(\n         set_varnames = c(\n           work_location_borough_clean_proper = \"Location\",\n           agency_name_clean = \"Agency Name\"\n         )),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police_mosaic_table &lt;-\npayroll_data_fire_police |&gt;\n  group_by(agency_name, work_location_borough) |&gt;\n  summarise(\n    count_of_employees = n(), \n    # total_salary_paid  = sum(total_paid), \n    .groups = 'drop')|&gt;\n  group_by(work_location_borough) |&gt; # Group by fiscal_year and agency_name for percentage calculations\n  mutate(\n    percentage_count_of_employees = paste0(format(round(count_of_employees / sum(count_of_employees) * 100,1),nsmall=1),\" %\"),\n    sum(count_of_employees)\n    \n  ) |&gt;\n  ungroup() |&gt; \n  # arrange(agency_name,percentage_count_of_employees) |&gt; \n  mutate(Agency = agency_name) |&gt; \n  dplyr::select(Agency, work_location_borough,percentage_count_of_employees) |&gt; \n  pivot_wider(names_from = work_location_borough, \n              values_from = percentage_count_of_employees)\n  \n  \n  kable(payroll_data_fire_police_mosaic_table,\n      # caption = \"Dataset Format\", \n      align = \"lccccc\") |&gt;\n  kable_styling(full_width = FALSE)|&gt; \n  row_spec(which(payroll_data_fire_police_mosaic_table$Agency == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_fire_police_mosaic_table$Agency == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nBRONX\nBROOKLYN\nMANHATTAN\nQUEENS\nSTATEN ISLAND\n\n\n\n\nFIRE DEPARTMENT\n29.1 %\n35.4 %\n11.5 %\n28.0 %\n34.9 %\n\n\nPOLICE DEPARTMENT\n70.9 %\n64.6 %\n88.5 %\n72.0 %\n65.1 %\n\n\n\n\n\n\n\n\n\n\n\n\nSalary distributions also vary by location. Brooklyn (Fire) and Manhattan (Police) have the lowest median salaries, despite hosting the highest number of employees (indicated by the density of jittered dots). Staten Island, on the other hand, has the highest median salary for both agencies but the lowest number of employees.\nAdditionally, the Fire Department‚Äôs salary boxes on the x-axis are slightly to the left of the Police Department‚Äôs, indicating slightly higher salaries. An intriguing observation is the presence of negative salary outliers, which could reflect advanced compensation repayments, deductions, or other adjustments beyond the gross amount.\n\n\nCode\npayroll_data_fire_police |&gt; \n  mutate(agency_name_clean = str_remove(agency_name, \" DEPARTMENT\")) |&gt; \n\nggplot() +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough)),\n                             color=agency_name_clean,\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.6,\n               # outlier.color = \"#00a6de\",\n               # outlier.shape = \"|\",\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.008, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00537d\", \"FIRE DEPARTMENT\" = \"#910002\")\n  ) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\",\n               \"FIRE DEPARTMENT\" = \"#f94144\",\n               \"POLICE\" = \"#00537d\", \n               \"FIRE\" = \"#910002\"\n               )\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Salary Paid per Location\",\n       x = \"Salary Paid (Regular + Overtime + Other Compensation)\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\",\n         panel.grid.minor.x = element_blank() ,\n         panel.grid.minor.y = element_blank() ,\n         panel.grid.major.y = element_blank() ,\n         panel.grid.major.x = element_line(colour = \"gray\",linetype=\"dashed\",size=0.1),\n         )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#where-do-people-work-1",
    "href": "results.html#where-do-people-work-1",
    "title": "3¬† Results",
    "section": "3.8 Where Do People Work?",
    "text": "3.8 Where Do People Work?\nFor the Fire Department, the majority of employees (38%) are based in Brooklyn, while for the Police Department, Manhattan has the highest concentration of employees at 45%. The proportion of salary paid (Regular + Overtime + Other) across locations closely mirrors the employee distribution.\n\n\nCode\npayroll_data_fire_police |&gt;\n  group_by(agency_name, work_location_borough) |&gt;\n  summarise(\n    count_of_employees = n(), \n    total_salary_paid  = sum(total_paid), \n    .groups = 'drop')|&gt;\n  group_by(agency_name) |&gt; # Group by fiscal_year and agency_name for percentage calculations\n  mutate(\n    Employees = count_of_employees / sum(count_of_employees) * 100,\n    `Salary Paid`= total_salary_paid / sum(total_salary_paid) * 100\n  ) |&gt;\n  ungroup() |&gt;\n  pivot_longer(\n    cols = c( `Salary Paid`,Employees),\n    names_to = \"metric\",\n    values_to = \"percentage\"\n  ) |&gt; \n  ggplot(aes(\n    x = percentage,\n    y = fct_rev(metric),\n    fill = fct_rev(work_location_borough)\n  )) +\n  geom_bar(stat = \"identity\", position = \"stack\") + # Stacked bar chart\n  geom_label(\n    aes(\n      label = paste0(round(percentage,0),\"%\"),\n      # hjust = ifelse(percentage &gt; 30, 0, 100),\n      # hjust = ifelse(percentage &gt; 30, 0, 100),\n      # size = if_else(percentage &gt; 30, 3.1, 3),\n    ),\n    position = position_stack(vjust = 0.5),\n    # position = \"identity\",\n    color=\"black\",\n    fill = \"#ffffff\",\n    alignment= \"left\",\n    size = 3,\n  )+\n#   ggrepel::geom_label_repel(\n#  aes(label = paste0(round(percentage,0),\"%\"),),\n#   # stat = \"stratum\",\n#  # position = position_stack(vjust = 0.5),\n#   size = 3,\n#   direction = \"y\",\n#   nudge_x = .8,\n#   box.padding = 0.3, # Padding around the text\n#   label.padding = unit(0.25, \"lines\"), # Padding inside the box\n#   label.size = 0.5, # Border thickness\n#   label.r = unit(0.15, \"lines\"), # Corner radius of the box\n#   fill = \"white\", # Background color for the label\n#   color = \"black\" # Text color\n# ) +\n  facet_wrap(~ agency_name) + # Facet by agency_name\n  # facet_grid(agency_name ~ .) + # Facet by agency_name\n  labs(\n    title = \"Employee and Salary Proportions per Location\",\n    x = \"Percentage of Employees or Salary\",\n    y = \"\",\n    fill = \"Location\"\n  ) +\n   scale_fill_manual(\n    values = c(\n      \"BRONX\" = \"#FF595E\",\n      \"BROOKLYN\" = \"#FFCA3A\",\n      \"MANHATTAN\" = \"#8AC926\",\n      \"QUEENS\" = \"#1982C4\",\n      \"STATEN ISLAND\" = \"#6A4C93\"\n    )\n  ) +\n  scale_x_continuous(expand = expansion(mult = c(0, 0.05))) + # Add padding to x-axis\n  theme_light() +\n  theme_minimal() +\n  theme(\n    axis.text.y = element_text(size = 12),\n    # axis.title.x = element_text(size = 12),\n    axis.title.y = element_text(size = 12),\n    anel.grid.minor.x = element_blank() ,\n    legend.position = \"right\",\n    # legend.position = \"bottom\",\n  )+\n  guides(fill = guide_legend(reverse=T))\n\n\n\n\n\n\n\n\n\n\n\nExamining employee proportions per location reveals interesting patterns. Police employees in Manhattan make up the largest group across all locations and agencies. In Brooklyn, the Fire Department accounts for 35.4% of employees, while in Staten Island, Fire employees represent 34.9%, the second-highest proportion relative to Police. The darkest colors in the mosaic chart represent the ranked percentage of each agency‚Äôs presence across all locations (see the Percentage tab for details).\n\nEmployees per LocationEmployees per Location - Percentages\n\n\n\n\nCode\npayroll_data_fire_police_mosaic &lt;-\n  payroll_data_fire_police |&gt; \n  mutate(\n    work_location_borough = as.factor(work_location_borough),\n    agency_name = as.factor(agency_name)\n  ) |&gt; \n  mutate(\n    agency_name_clean = str_remove(agency_name, \" DEPARTMENT\"),\n    work_location_borough_clean = str_replace(work_location_borough, \"RICHMOND\", \"STATEN ISLAND\"),\n    work_location_borough_clean_proper = str_to_title(work_location_borough_clean),\n    work_location_borough_clean_proper = str_replace(work_location_borough_clean_proper, \"Staten Island\", \"S. Island\"),\n  )\n\nlibrary(vcd)\nmosaic(agency_name_clean~work_location_borough_clean_proper, \n       data=payroll_data_fire_police_mosaic,\n       direction=c(\"v\",'h'),\n       highlighting_fill = c(\n         \"#EF3B2C\",\n         \"#4292C6\",\n         \"#A50F15\",\n         \"#9ECAE1\",\n         \"#FC9272\",\n         \"#08519C\",\n         \"#FB6A4A\",\n         \"#2171B5\",\n         \"#CB181D\",\n         \"#6BAED6\" \n       ),\n       main = \"Employees per Location\\n\",\n       main_gp = gpar(cex = 1.4, lineheight = 0.6),\n       split_vertical = TRUE,\n       spacing = spacing_dimequal(c(1.1,1)),\n       # spacing = spacing_increase(start = unit(3, \"lines\"), rate = 1.5),\n       labeling = labeling_values,\n       rot_labels=c(30,0,0,90),\n       offset_label =c(0.6,5,0, 0),\n       labeling_args = list(\n         set_varnames = c(\n           work_location_borough_clean_proper = \"Location\",\n           agency_name_clean = \"Agency Name\"\n         )),\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\npayroll_data_fire_police_mosaic_table &lt;-\npayroll_data_fire_police |&gt;\n  group_by(agency_name, work_location_borough) |&gt;\n  summarise(\n    count_of_employees = n(), \n    # total_salary_paid  = sum(total_paid), \n    .groups = 'drop')|&gt;\n  group_by(work_location_borough) |&gt; # Group by fiscal_year and agency_name for percentage calculations\n  mutate(\n    percentage_count_of_employees = paste0(format(round(count_of_employees / sum(count_of_employees) * 100,1),nsmall=1),\" %\"),\n    sum(count_of_employees)\n    \n  ) |&gt;\n  ungroup() |&gt; \n  # arrange(agency_name,percentage_count_of_employees) |&gt; \n  mutate(Agency = agency_name) |&gt; \n  dplyr::select(Agency, work_location_borough,percentage_count_of_employees) |&gt; \n  pivot_wider(names_from = work_location_borough, \n              values_from = percentage_count_of_employees)\n  \n  \n  kable(payroll_data_fire_police_mosaic_table,\n      # caption = \"Dataset Format\", \n      align = \"lccccc\") |&gt;\n  kable_styling(full_width = FALSE)|&gt; \n  row_spec(which(payroll_data_fire_police_mosaic_table$Agency == \"FIRE DEPARTMENT\"),   background = \"#f94144\", color = \"white\") |&gt; \n  row_spec(which(payroll_data_fire_police_mosaic_table$Agency == \"POLICE DEPARTMENT\"), background = \"deepskyblue3\", color = \"white\")\n\n\n\n\n\nAgency\nBRONX\nBROOKLYN\nMANHATTAN\nQUEENS\nSTATEN ISLAND\n\n\n\n\nFIRE DEPARTMENT\n29.1 %\n35.4 %\n11.5 %\n28.0 %\n34.9 %\n\n\nPOLICE DEPARTMENT\n70.9 %\n64.6 %\n88.5 %\n72.0 %\n65.1 %\n\n\n\n\n\n\n\n\n\n\n\n\nSalary distributions also vary by location. Brooklyn (Fire) and Manhattan (Police) have the lowest median salaries, despite hosting the highest number of employees (indicated by the density of jittered dots). Staten Island, on the other hand, has the highest median salary for both agencies but the lowest number of employees.\nAdditionally, the Fire Department‚Äôs salary boxes on the x-axis are slightly to the left of the Police Department‚Äôs, indicating slightly higher salaries. An intriguing observation is the presence of negative salary outliers, which could reflect advanced compensation, deductions, or other adjustments beyond the gross amount.\n\n\nCode\npayroll_data_fire_police |&gt; \n  mutate(agency_name_clean = str_remove(agency_name, \" DEPARTMENT\")) |&gt; \n\nggplot() +\n  geom_boxplot(mapping = aes(x = total_paid, \n                             y = fct_rev(as.factor(work_location_borough)),\n                             color=agency_name_clean,\n                             ),\n               outlier.alpha = 0.25,\n               outlier.stroke = 0.6,\n               # outlier.color = \"#00a6de\",\n               # outlier.shape = \"|\",\n               ) +\n  geom_jitter(mapping = aes(x = total_paid,\n                            y = work_location_borough,\n                            color=agency_name,\n                            # alpha = ifelse(agency_name == \"POLICE DEPARTMENT\", 0.0008, 0.01)\n                            ),\n              width = 0.25,\n              height = 0.25,\n              size = 0.001,\n              # alpha = 0.008,\n              alpha = ifelse(payroll_data_fire_police$agency_name == \"POLICE DEPARTMENT\", 0.008, 0.02),\n              #color='deepskyblue4',\n              ) +\n  scale_alpha_identity() +\n  facet_grid(agency_name ~ .) +\n  scale_fill_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00537d\", \"FIRE DEPARTMENT\" = \"#910002\")\n  ) +\n  scale_color_manual(\n    values = c(\"POLICE DEPARTMENT\" = \"#00a6de\",\n               \"FIRE DEPARTMENT\" = \"#f94144\",\n               \"POLICE\" = \"#00537d\", \n               \"FIRE\" = \"#910002\"\n               )\n  ) +\n  scale_x_continuous(\n    # limits = c(-25000, 300000),\n    breaks = seq(-200000, max(payroll_data_fire_police$total_paid, na.rm = TRUE), by = 100000),\n    labels = scales::label_number(scale = 1/1000, suffix = \"k\")\n  ) +\n  # scale_x_log10(labels = scales::label_comma()) +\n  labs(title = \"Salary Paid per Location\",\n       x = \"Salary Paid (Regular + Overtime + Other Compensation)\",\n       y = \"Location\") +\n  theme_minimal() +\n  theme_light() +\n  theme(legend.position = \"none\",\n         panel.grid.minor.x = element_blank() ,\n         panel.grid.minor.y = element_blank() ,\n         panel.grid.major.y = element_blank() ,\n         panel.grid.major.x = element_line(colour = \"gray\",linetype=\"dashed\",size=0.1),\n         )",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#where-do-people-work-2",
    "href": "results.html#where-do-people-work-2",
    "title": "3¬† Results",
    "section": "7.2 Where do people work?",
    "text": "7.2 Where do people work?\nFor the Fire department, most employees are located in Brooklyn about 38%, while for the Police we have a higher concentration of employees in Manhattan about 45%.\nThe Salary Paid (Regular + Overtime + Other) proportion per location is very similar to the proportions of the number of employees.\nNow, when we look at the employees in each location and check the proportion per agency, we can find a very interesting patterns. Police employees in Manhattan represent the greatest amount of employees across all locations and agencies. In Brooklyn, the Fire Department has 35.4% of all employees for that location, while Staten Island has the second highest proportion of Fire employees to Police employees in the same location as 34.9%.\nThe darkest color in the mosaic represents the higher proportion of employees across the Fire or Police agency for each location.\nWhen we look at the distribution of Salaries for each location, the Fire department in Brooklyn and for the Police in Manhanttan, these locations have the lowest median for Salary, even though they the highest amount of employees (represented by the jittered dots in the chart). We can also observe that Staten Island has the higest median for Salary across all locations for both agencies, and it also has the lowest amount of employees based on the density of the dots.\nAdditionally, we can observe the size of the boxes for the fire department are located a little bit more to the left in the xaxis compared to the Police department. This means the salaries paid to the Fire department are slightly higher than the police department.\nAnother fun observation is the present of negative outliers for salary, which is could be an compensation advanced that was paid in a different period or deductions beyond the gross paid amount.\nFIRE DEPARTMENT 29.1 % 35.4 % 11.5 % 28.0 % 34.9 % POLICE DEPARTMENT 70.9 % 64.6 % 88.5 % 72.0 % 65.1 %\nSmall text Small text",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#where-do-people-work-3",
    "href": "results.html#where-do-people-work-3",
    "title": "3¬† Results",
    "section": "7.3 Where Do People Work?",
    "text": "7.3 Where Do People Work?\nFor the Fire Department, the majority of employees (38%) are based in Brooklyn, while for the Police Department, Manhattan has the highest concentration of employees at 45%. The proportion of salary paid (Regular + Overtime + Other) across locations closely mirrors the employee distribution.\nExamining employee proportions per location reveals interesting patterns. Police employees in Manhattan make up the largest group across all locations and agencies. In Brooklyn, the Fire Department accounts for 35.4% of employees, while in Staten Island, Fire employees represent 34.9%, the second-highest proportion relative to Police. The darkest colors in the mosaic chart represent the ranked percentage of each agency‚Äôs presence across all locations (see the Percentage tab for details).\nSalary distributions also vary by location. Brooklyn (Fire) and Manhattan (Police) have the lowest median salaries, despite hosting the highest number of employees (indicated by the density of jittered dots). Staten Island, on the other hand, has the highest median salary for both agencies but the lowest number of employees.\nAdditionally, the Fire Department‚Äôs salary boxes on the x-axis are slightly to the left of the Police Department‚Äôs, indicating slightly higher salaries. An intriguing observation is the presence of negative salary outliers, which could reflect advanced compensation, deductions, or other adjustments beyond the gross amount.",
    "crumbs": [
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html#who-gets-the-money",
    "href": "conclusion.html#who-gets-the-money",
    "title": "5¬† Conclusion",
    "section": "10.1 Who gets the Money?",
    "text": "10.1 Who gets the Money?\nEveryone in the payroll database for the Fire and Police departments receives some form of compensation.\nPerhaps a better question is: how many people are receiving salaries from these departments? From the chart below, we observe that the Fire Department has about one-third the number of employees compared to the Police Department. Additionally, most Fire Department employees are located in Brooklyn, while the Police Department has a higher concentration of employees in Manhattan. Overall, the number of employees in each department has remained relatively stable over the past 10 years, with 2024 recording the highest number of employees for both departments.\nNow, let‚Äôs examine how much these agencies are paying their employees. The Fire Department shows a slow but steady increase in total salaries paid each year. In contrast, Police Department salaries fluctuate over the years, with a notable spike in 2024. (Refer to the Amount Paid per Year tab.)\nInterestingly, the Police Department employs three times as many people as the Fire Department. However, when comparing total compensation, the Police Department spends only about 2.5 times what the Fire Department spends. This disparity suggests that, on average, individual salaries in the Fire Department might be higher than those in the Police Department.\n\nNumber of EmployeesAmount Paid per Year",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#where-do-people-work",
    "href": "conclusion.html#where-do-people-work",
    "title": "5¬† Conclusion",
    "section": "10.2 Where Do People Work?",
    "text": "10.2 Where Do People Work?\nFor the Fire Department, the majority of employees (38%) are based in Brooklyn, while for the Police Department, Manhattan has the highest concentration of employees at 45%. The proportion of salary paid (Regular + Overtime + Other) across locations closely mirrors the employee distribution.\n\n\nExamining employee proportions per location reveals interesting patterns. Police employees in Manhattan make up the largest group across all locations and agencies. In Brooklyn, the Fire Department accounts for 35.4% of employees, while in Staten Island, Fire employees represent 34.9%, the second-highest proportion relative to Police. The darkest colors in the mosaic chart represent the ranked percentage of each agency‚Äôs presence across all locations (see the Percentages tab for details).\n\nEmployees per LocationEmployees per Location - Percentages\n\n\n\n\n\n\n\n\n\n\n\nSalary distributions also vary by location. Brooklyn (Fire) and Manhattan (Police) have the lowest median salaries, despite hosting the highest number of employees (indicated by the density of jittered dots). Staten Island, on the other hand, has the highest median salary for both agencies but the lowest number of employees.\nAdditionally, the Fire Department‚Äôs salary boxes on the x-axis are slightly to the left of the Police Department‚Äôs, indicating slightly higher salaries. An intriguing observation is the presence of negative salary outliers, which could reflect advanced compensation, deductions, or other adjustments beyond the gross amount.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#three-mountains-of-money",
    "href": "conclusion.html#three-mountains-of-money",
    "title": "5¬† Conclusion",
    "section": "10.3 Three Mountains of Money",
    "text": "10.3 Three Mountains of Money\n\n10.3.1 Overall Distributions\nAnalyzing the salary distributions reveals a trimodal pattern for the combined departments.\nWhen separating the distributions by agency, the Fire Department shows three distinct density peaks. The leftmost peak is higher than the middle, which in turn is higher than the right. This suggests that a larger proportion of Fire Department employees fall within the leftmost peak, earning between $110,000 and $140,000.\nIn contrast, the Police Department‚Äôs highest density peak occurs in the center mode, with most employees earning between $50,000 and $70,000.\nOverall, the Fire Department has a higher mean salary of $103,000 compared to the Police Department‚Äôs $87,000.\n\n\n\n\n10.3.2 Isolating the Peaks\nTo separate the three salary peaks, we analyzed the following variables and their key factors:\n\nPay Basis: Per Annum, Per Hour\nEmployment Status: Active, Ceased\nYears of Experience: Time since employment began at the agency\n\nThe rightmost peak corresponds primarily to employees in the Per Annum - Ceased and Per Hour - Active categories.\nThe central and left peaks are associated with Per Annum - Active employees and are influenced by years of experience. Most employees with 0‚Äì5 years of experience earn under $100,000 (central peak). The higher density in the 5‚Äì10-year range suggests reduced hiring in recent years and strong employee retention.\nOver time, the left peak emerges around $100,000 for employees with 0‚Äì5 years of experience and gradually shifts leftward (toward higher salaries) as experience increases.\nFor employees with 15‚Äì20 years and 20+ years of experience, the Fire Department has a larger proportion in the left peak compared to the central peak, as shown by the visibly greater red area in the left peak on the stacked chart. This highlights that longer-tenured employees tend to earn higher salaries.\n\n\n\n\n\n10.3.3 Ten Years of Salaries\nThe distribution of salaries paid shows small variations over most of the 10-year period, except for a few distinct years where notable changes occur in each agency‚Äôs density.\nFor the Fire Department, the most significant change begins in 2022. There is a noticeable increase in employees receiving higher compensation (evidenced by the curve stretching and the left peak shifting further left). Additionally, there is a surge in employees receiving lower salaries, creating a bump in the right area of the curve.\nFor the Police Department, 2024 brings a dramatic shift in the salary curve. A new bump appears on the right, representing a large number of employees earning less than $25,000. This is primarily associated with Per Annum - Ceased police officers in 2024. At the same time, the left peak shifts further left, reflecting higher compensation for some employees.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#why-is-2024-so-high",
    "href": "conclusion.html#why-is-2024-so-high",
    "title": "5¬† Conclusion",
    "section": "10.4 Why Is 2024 So High?",
    "text": "10.4 Why Is 2024 So High?\nThe total salary paid by the Police Department in 2024 is unusually high. Comparing 2023 and 2024, we see an increase of 7,285 employees receiving salaries and a $2 billion rise in total compensation.\nAnalyzing the total salary differences by position reveals that the top 10 positions with the highest increases account for 97% of the overall compensation difference.\n\n\n\nNotably, the Police Officer position alone added 6,728 employees in 2024, accounting for 92% of the increase in staff receiving salaries.\nHowever, this surge in new hires is not the sole reason for the $1.4 billion rise in salaries observed for this position, as shown in the chart above. The overall increase in salary payouts across all Police Officers and related positions between 2023 and 2024 also significantly contributed to the higher total paid compensation.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#the-more-i-work-the-more-i-get-paid",
    "href": "conclusion.html#the-more-i-work-the-more-i-get-paid",
    "title": "5¬† Conclusion",
    "section": "10.5 The More I Work, the More I Get Paid",
    "text": "10.5 The More I Work, the More I Get Paid\nOur next analysis focuses on Years of Experience groups and their relationship to Salary ranges, which include Regular pay, Overtime, and Other compensations. Let‚Äôs take a look at the 2024 fiscal year.\nFor both departments, the majority of employees in the 0‚Äì5 years of experience group earn less than $100,000. In the next group (5‚Äì10 years), we observe a notable presence of employees earning between $150,000 and $200,000, with the Fire Department having a higher percentage of employees in this range compared to others. Additionally, there are employees in the $200,000‚Äì$250,000 range within this group.\nThe 10‚Äì20 years of experience group shows the highest proportion of employees in the $200,000‚Äì$250,000 range, and we also see some employees making $250,000 or more.\nThe 20+ years group includes employees across all salary ranges. Interestingly, both agencies have a number of employees in this group earning less than $50,000. For the Fire Department, the larger salary ranges for this group are $200,000‚Äì$250,000 and $250,000+.\nOverall, while both departments show a clear trend of higher salaries with more years of experience, the Fire Department has a higher proportion of employees with extensive experience compared to the Police Department. This suggests a more experienced workforce in the Fire Department relative to the Police Department.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#who-gets-paid-the-most",
    "href": "conclusion.html#who-gets-paid-the-most",
    "title": "5¬† Conclusion",
    "section": "10.6 Who Gets Paid the Most?",
    "text": "10.6 Who Gets Paid the Most?\n\n10.6.1 Employees Earning Over $250K\nWhen analyzing 2024 employees earning more than $250K, we can break down their total salary into three categories: Regular pay, Overtime, and Other compensation.\nFor those earning over $200K in Regular pay, it‚Äôs clear that they generally do not receive Overtime compensation, although some do receive Other compensation.\nEmployees earning between $100K and $200K in regular pay, tend to earn significant Overtime ranging from $60K to $130K. This Overtime is the main factor contributing to their final salary being above $250K. Additionally, they receive Other compensation, ranging from $25K to $50K.\nInterestingly, only 9 employees earning less than $100K in Regular pay received total compensation over $250K. Of these, 3 follow a similar pattern to the previous group (earning significant Overtime), while 6 are outliers who receive no Regular or Overtime pay but have very high Other compensation.\n\nSalary Breakdown - CombinedSalary Breakdown - Faceted by Range\n\n\n\n\n\n\n\n\n\n\n\n10.6.2 Salary Playground\nFor a deeper analysis, the following interactive parallel coordinates chart provides a detailed breakdown of salary components (Regular, Overtime, Other) for employees earning over $250K, along with their job titles and departments.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "conclusion.html#understanding-the-gap-regular-pay-and-total-salary",
    "href": "conclusion.html#understanding-the-gap-regular-pay-and-total-salary",
    "title": "5¬† Conclusion",
    "section": "10.7 Understanding the Gap: Regular Pay and Total Salary",
    "text": "10.7 Understanding the Gap: Regular Pay and Total Salary\nIn this analysis, we explore the gap between Regular Pay and Total Salary for the Top 25 most popular positions by department (ranked by employee count). We will examine three key variables for each position:\n\nRegular Salary Paid: Mean regular salary for each position.\nTotal Salary Paid: Mean salary including Regular, Overtime, and Other Pay.\nRatio: The ratio of Total Salary Paid to Regular Salary Paid.\n\nFor the Fire Department, the percentage of additional compensation (Overtime + Other) varies widely across positions. More than 50% (13 out of 25) of these positions earn less than 25% above their regular pay in additional compensation. However, positions such as Captain and Lieutenant receive more than 70% additional pay on top of their regular salary.\nIn the Police Department, positions earning a mean regular salary below $100K do not receive a high amount of Overtime or Other compensation. All positions in this category earn less than 50% above their regular salary in additional pay. On the other hand, most positions earning a regular salary above $100K see a significant proportion (greater than 50%) of additional compensation to their salaries.",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "d3graph.html#hiring-over-time",
    "href": "d3graph.html#hiring-over-time",
    "title": "4¬† Interactive graph",
    "section": "",
    "text": "10-Year Hiring History for the Fire and Police Departments\n\n\n\n\n\nLegend:\n\n\n‚óè‚óè‚óè‚óè Size of the bubble represents the number of employees hired in each position\n\n\n‚óè represents a position in the Fire Department.\n\n\n‚óè represents a position in the Police Department.\n\n\n‚Äî indicates positions within the same career path, such as:\n\n\n‚óè‚Äî‚óè Firefighter roles, or Emergency Medical Services (EMS) roles\n\n\n‚óè‚Äî‚óè Police Officer roles",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#how-to-use-the-chart",
    "href": "d3graph.html#how-to-use-the-chart",
    "title": "4¬† Interactive graph",
    "section": "4.2 How to Use the Chart",
    "text": "4.2 How to Use the Chart\n\n\nPlay/Pause Button: Start or stop the animation.\n\n\nDate Slicer: Drag to select a specific date range.\n\n\nClick and Drag: Move a dot to adjust its location for better visualization.\n\n\nHover: Hover over a dot to view the corresponding job title and the count of hired employees.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#supporting-visualizations",
    "href": "d3graph.html#supporting-visualizations",
    "title": "4¬† Interactive graph",
    "section": "4.3 Supporting Visualizations",
    "text": "4.3 Supporting Visualizations\n\n\nLine Chart: Displays the count of unique job titles over time. Use this as a reference to identify periods with high or low hiring activity.\n\n\n100% Stacked Bar Chart: Shows the proportion of hiring between the Fire and Police Departments for each period, with a 50% reference line to quickly identify which department had more hires.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "d3graph.html#key-insights",
    "href": "d3graph.html#key-insights",
    "title": "4¬† Interactive graph",
    "section": "4.4 Key Insights",
    "text": "4.4 Key Insights\n\nHere are a few interesting periods to explore:\n\n\n\nOctober 2016: The month with the highest number of unique job titles hired.\n\n\nMarch 2018: A period dominated by Police Department hires.\n\n\nApril 2020: Only Fire Department positions were hired during this month.\n\n\nMay 2021: Highest number of Police Officers hired in a month (over 10k).",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "conclusion.html#description",
    "href": "conclusion.html#description",
    "title": "5¬† Data",
    "section": "",
    "text": "The final subset of data for this project will be focused on 2 Agencies:\n\n\nFire Department üßë‚Äçüöí üöí\nPolice Department üëÆüöì\n\n\n\n\n\n\n\n\n\n5.1.1 Data information\nThe payroll data is provided annually by NYC OpenData and contains New York City employee salaries by Fiscal Year. We are using the latest snapshot of the data, released on October 30, 2024. Here are some details about the format of the data, the frequency of updates, dimensions about the data, and other relevant metadata:\n\nData MetadataData Format\n\n\n\n\n\n\n\n\n\n\n\nDataset Name\nCitywide Payroll Data (Fiscal Year)\n\n\nProvided by\nOffice of Payroll Administration (OPA)\n\n\nData Category\nCity Government\n\n\nFrequency of Updates\nAnnually\n\n\nDate Created\nOctober 31, 2015\n\n\nData Last Updated\nOctober 30, 2024\n\n\nDimensions\nRaw Data: 6,225,611 rows | 17 columns\nSubset Data: 804,630 rows | 17 columns\n\n\nEach row represents\nCity Employee Salary per Fiscal Year\n\n\nSource URL\nhttps://data.cityofnewyork.us/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nColumn Name\nDescription\nData Type\n\n\n\n\nFiscal Year\nFiscal Year\nNumber\n\n\nPayroll Number\nPayroll Number\nNumber\n\n\nAgency Name\nThe Payroll agency that the employee works for\nText\n\n\nLast Name\nLast name of employee\nText\n\n\nFirst Name\nFirst name of employee\nText\n\n\nMid Init\nMiddle initial of employee\nText\n\n\nAgency Start Date\nDate which employee began working for their current agency\nTimestamp\n\n\nWork Location Borough\nBorough of employee's primary work location\nText\n\n\nTitle Description\nCivil service title description of the employee\nText\n\n\nLeave Status as of June 30\nStatus of employee as of the close of the relevant fiscal year: Active, Ceased, or On Leave\nText\n\n\nBase Salary\nBase Salary assigned to the employee\nNumber\n\n\nPay Basis\nLists whether the employee is paid on an hourly, per diem or annual basis\nText\n\n\nRegular Hours\nNumber of regular hours employee worked in the fiscal year\nNumber\n\n\nRegular Gross Paid\nThe amount paid to the employee for base salary during the fiscal year\nNumber\n\n\nOT Hours\nOvertime Hours worked by employee in the fiscal year\nNumber\n\n\nTotal OT Paid\nTotal overtime pay paid to the employee in the fiscal year\nNumber\n\n\nTotal Other Pay\nIncludes any compensation in addition to gross salary and overtime pay, i.e., Differentials, lump sums, uniform allowance, meal allowance, retroactive pay increases, settlement amounts, and bonus pay, if applicable.\nNumber\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n5.1.2 Data Source\n\n\n\n\n\nflowchart LR\n  A[Importing Data] --&gt; B[Understanding and \\n cleaning the raw data]\n  B --&gt; C(Transforming columns)\n  B --&gt; D(Filtering Data)\n  B --&gt; E(Backfilling NA)\n  C --&gt; F[Saving Subset Data]\n  D --&gt; F[Saving Subset Data]\n  E --&gt; F[Saving Subset Data]\n\n\n\n\n\n\n\nImporting the data\nCleaning the data\nCreating the final subset data\n\n\n\nTo access the data, we can go directly to the URL:\n\n\nhttps://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data\n\nFrom this URL, you can click the button ‚ÄòExport‚Äô, and then select Download File-CSV format (All data 6225611 rows). This will download a file of about 840MB. Remember, we are using the data Last Updated on October 30, 2024.\nThe file will be downloaded with the name: Citywide_Payroll_Data__Fiscal_Year__YYYYMMDD.csv\n\n\n(YYYYMMDD refers to the date that you downloaded the file)\n\nOnce the data was downloaded, it was added to a new folder inside the repository called ‚Äòdata_source‚Äô.\n\n\nCode\n# import original data\npayroll_data_source &lt;- read.csv(\"./data_source/Citywide_Payroll_Data__Fiscal_Year__20241111.csv\")\n\n# make a copy of original data for transformations\npayroll_data &lt;- data.frame(payroll_data_source)\n\n# rename columns\nnames(payroll_data) &lt;- gsub(\"[\\\\.]+\", \"_\", tolower(names(payroll_data_source)))\n\n\n\n\n\n\n\nThe decision-making process for selecting a subset of the data and the detailed transformation and clean up of the original dataset with 6,225,611 rows to our final dataset with 804,630 rows can be found in the Appendix section.\n\n\n\n\n\nThe data used for this analysis is a subset of the entire raw data. The final subset data (focused on the Fire and Police departments) contains 804,630 rows out of the 6,225,611 rows from the original dataset.\nTo generate the final subset that will be used in the analysis, please run the code below:\n\n\nCode\n# `payroll_data` dataframe comes from the **Importing the data** section.\n\npayroll_data_fire_police &lt;-\n  payroll_data |&gt;\n  # clean agency name:\n  mutate(agency_name_clean = trimws(gsub(\"#\\\\d+$\", \"\", agency_name))) |&gt;\n  # clean job titles:\n  mutate(title_description = toupper(title_description)) |&gt; \n  # clean location name:\n  mutate(work_location_borough_clean = toupper(work_location_borough)) |&gt;\n\n  # filtering data:\n  filter(agency_name_clean %in%  c(\"POLICE DEPARTMENT\",\"FIRE DEPARTMENT\")) |&gt;\n  filter(work_location_borough_clean %in%   c(\"BRONX\", \"BROOKLYN\", \"MANHATTAN\", \"QUEENS\", \"RICHMOND\")) |&gt;\n  filter(fiscal_year &gt;= \"2015\" & fiscal_year &lt;= \"2024\") |&gt;\n  filter(pay_basis %in%   c(\"per Annum\", \"per Day\", \"per Hour\")) |&gt;\n\n  # backfill payroll number after filtering\n  mutate(\n    payroll_number_clean = case_when(\n      is.na(payroll_number) & agency_name_clean == \"FIRE DEPARTMENT\" ~ 57,\n      is.na(payroll_number) & agency_name_clean == \"POLICE DEPARTMENT\" ~ 56,\n      TRUE ~ payroll_number\n    )) |&gt;\n\n  # converting dates:\n  mutate(agency_start_date_clean = mdy(agency_start_date)) |&gt;\n\n  # renaming clean columns to original names:\n  mutate(\n    agency_name = agency_name_clean,\n    work_location_borough = work_location_borough_clean,\n    payroll_number = payroll_number_clean,\n    agency_start_date = agency_start_date_clean\n  ) |&gt;\n\n  # dropping clean columns\n  dplyr::select(-agency_name_clean,\n                -work_location_borough_clean,\n                -payroll_number_clean,\n                -agency_start_date_clean)\n\n\n\n# Please uncomment the CSV or the RDS method to save the subset data:\n\n# Save the data CSV\n# write.csv(payroll_data_fire_police, \"data_source/payroll_data_fire_police.csv\", row.names = FALSE)\n\n# Save the data RDS\n# saveRDS(payroll_data_fire_police, \"data_source/payroll_data_fire_police.rds\")\n\n# Read the data RDS\n# payroll_data_fire_police &lt;- readRDS(\"data_source/payroll_data_fire_police.rds\")",
    "crumbs": [
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "d3graph.html#interesting-observations",
    "href": "d3graph.html#interesting-observations",
    "title": "4¬† Interactive graph",
    "section": "4.4 Interesting Observations",
    "text": "4.4 Interesting Observations\n\nHere are a few interesting periods to explore:\n\n\n\nJanuary 2016: Highest number of Police Officers hired in a month (over 10k).\n\n\nOctober 2016: The month with the highest number of unique job titles hired.\n\n\nMarch 2018: A period dominated by Police Department hires.\n\n\nApril 2020: Only Fire Department positions were hired during this month.",
    "crumbs": [
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Interactive graph</span>"
    ]
  }
]